<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="18113"><g><title>gui`glow::native::Context::from_loader_function (4 samples, 0.02%)</title><rect x="0.0110%" y="949" width="0.0221%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="4"/><text x="0.2610%" y="959.50"></text></g><g><title>gui`glow::gl46::struct_commands::GlFns::load_all_with_dyn (4 samples, 0.02%)</title><rect x="0.0110%" y="933" width="0.0221%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="4"/><text x="0.2610%" y="943.50"></text></g><g><title>gui`glow::gl46::load_dyn_name_atomic_ptr (4 samples, 0.02%)</title><rect x="0.0110%" y="917" width="0.0221%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="4"/><text x="0.2610%" y="927.50"></text></g><g><title>gui`glutin::platform_impl::platform::Context::get_proc_address (4 samples, 0.02%)</title><rect x="0.0110%" y="901" width="0.0221%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="4"/><text x="0.2610%" y="911.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnGetSymbolByNameWithSearch (3 samples, 0.02%)</title><rect x="0.0166%" y="885" width="0.0166%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="3"/><text x="0.2666%" y="895.50"></text></g><g><title>libdyld.dylib`dlsym (3 samples, 0.02%)</title><rect x="0.0166%" y="869" width="0.0166%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="3"/><text x="0.2666%" y="879.50"></text></g><g><title>dyld`dlsym_internal (3 samples, 0.02%)</title><rect x="0.0166%" y="853" width="0.0166%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="3"/><text x="0.2666%" y="863.50"></text></g><g><title>dyld`dyld::mkstringf (2 samples, 0.01%)</title><rect x="0.0221%" y="837" width="0.0110%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="2"/><text x="0.2721%" y="847.50"></text></g><g><title>dyld`_simple_salloc (2 samples, 0.01%)</title><rect x="0.0221%" y="821" width="0.0110%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="2"/><text x="0.2721%" y="831.50"></text></g><g><title>dyld`vm_allocate (2 samples, 0.01%)</title><rect x="0.0221%" y="805" width="0.0110%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="2"/><text x="0.2721%" y="815.50"></text></g><g><title>dyld`_kernelrpc_mach_vm_allocate_trap (2 samples, 0.01%)</title><rect x="0.0221%" y="789" width="0.0110%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="2"/><text x="0.2721%" y="799.50"></text></g><g><title>AppKit`-[NSOpenGLContext initWithFormat:shareContext:] (2 samples, 0.01%)</title><rect x="0.0331%" y="933" width="0.0110%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="2"/><text x="0.2831%" y="943.50"></text></g><g><title>OpenGL`CGLCreateContext (2 samples, 0.01%)</title><rect x="0.0331%" y="917" width="0.0110%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="2"/><text x="0.2831%" y="927.50"></text></g><g><title>GLEngine`gliCreateContextWithShared (2 samples, 0.01%)</title><rect x="0.0331%" y="901" width="0.0110%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="2"/><text x="0.2831%" y="911.50"></text></g><g><title>AppKit`-[NSOpenGLContext setView:] (2 samples, 0.01%)</title><rect x="0.0442%" y="933" width="0.0110%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.2942%" y="943.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (2 samples, 0.01%)</title><rect x="0.0442%" y="917" width="0.0110%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="2"/><text x="0.2942%" y="927.50"></text></g><g><title>AppKit`__27-[NSOpenGLContext setView:]_block_invoke (2 samples, 0.01%)</title><rect x="0.0442%" y="901" width="0.0110%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="2"/><text x="0.2942%" y="911.50"></text></g><g><title>AppKit`NSOpenGLContextAttachOffScreenViewSurface (2 samples, 0.01%)</title><rect x="0.0442%" y="885" width="0.0110%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="2"/><text x="0.2942%" y="895.50"></text></g><g><title>AppKit`NSOpenGLContextUpdateOffScreenViewSurface (2 samples, 0.01%)</title><rect x="0.0442%" y="869" width="0.0110%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="2"/><text x="0.2942%" y="879.50"></text></g><g><title>OpenGL`0x00007fff6b97658d (3 samples, 0.02%)</title><rect x="0.0552%" y="853" width="0.0166%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="3"/><text x="0.3052%" y="863.50"></text></g><g><title>GLEngine`gliInitializeLibrary (3 samples, 0.02%)</title><rect x="0.0552%" y="837" width="0.0166%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="3"/><text x="0.3052%" y="847.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (3 samples, 0.02%)</title><rect x="0.0552%" y="821" width="0.0166%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="3"/><text x="0.3052%" y="831.50"></text></g><g><title>OpenGL`0x00007fff6b97621a (4 samples, 0.02%)</title><rect x="0.0552%" y="885" width="0.0221%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="4"/><text x="0.3052%" y="895.50"></text></g><g><title>OpenGL`0x00007fff6b976472 (4 samples, 0.02%)</title><rect x="0.0552%" y="869" width="0.0221%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="4"/><text x="0.3052%" y="879.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (7 samples, 0.04%)</title><rect x="0.0552%" y="933" width="0.0386%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="7"/><text x="0.3052%" y="943.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (7 samples, 0.04%)</title><rect x="0.0552%" y="917" width="0.0386%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="7"/><text x="0.3052%" y="927.50"></text></g><g><title>OpenGL`0x00007fff6b97cca7 (7 samples, 0.04%)</title><rect x="0.0552%" y="901" width="0.0386%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="7"/><text x="0.3052%" y="911.50"></text></g><g><title>AppKit`-[NSFrameView _updateTitleProperties:animated:] (2 samples, 0.01%)</title><rect x="0.1159%" y="773" width="0.0110%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="2"/><text x="0.3659%" y="783.50"></text></g><g><title>AppKit`-[NSThemeFrame setTitle:] (2 samples, 0.01%)</title><rect x="0.1159%" y="757" width="0.0110%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="2"/><text x="0.3659%" y="767.50"></text></g><g><title>AppKit`-[NSTitledFrame setTitle:subtitle:] (2 samples, 0.01%)</title><rect x="0.1159%" y="741" width="0.0110%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="2"/><text x="0.3659%" y="751.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (2 samples, 0.01%)</title><rect x="0.1380%" y="581" width="0.0110%" height="15" fill="rgb(209,103,24)" fg:x="25" fg:w="2"/><text x="0.3880%" y="591.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (2 samples, 0.01%)</title><rect x="0.1380%" y="565" width="0.0110%" height="15" fill="rgb(229,88,8)" fg:x="25" fg:w="2"/><text x="0.3880%" y="575.50"></text></g><g><title>Foundation`probeGC (2 samples, 0.01%)</title><rect x="0.1380%" y="549" width="0.0110%" height="15" fill="rgb(213,181,19)" fg:x="25" fg:w="2"/><text x="0.3880%" y="559.50"></text></g><g><title>CoreText`TDescriptor::Hash (2 samples, 0.01%)</title><rect x="0.1380%" y="533" width="0.0110%" height="15" fill="rgb(254,191,54)" fg:x="25" fg:w="2"/><text x="0.3880%" y="543.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (2 samples, 0.01%)</title><rect x="0.1380%" y="517" width="0.0110%" height="15" fill="rgb(241,83,37)" fg:x="25" fg:w="2"/><text x="0.3880%" y="527.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (2 samples, 0.01%)</title><rect x="0.1380%" y="501" width="0.0110%" height="15" fill="rgb(233,36,39)" fg:x="25" fg:w="2"/><text x="0.3880%" y="511.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (2 samples, 0.01%)</title><rect x="0.1380%" y="485" width="0.0110%" height="15" fill="rgb(226,3,54)" fg:x="25" fg:w="2"/><text x="0.3880%" y="495.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (2 samples, 0.01%)</title><rect x="0.1380%" y="469" width="0.0110%" height="15" fill="rgb(245,192,40)" fg:x="25" fg:w="2"/><text x="0.3880%" y="479.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (2 samples, 0.01%)</title><rect x="0.1380%" y="453" width="0.0110%" height="15" fill="rgb(238,167,29)" fg:x="25" fg:w="2"/><text x="0.3880%" y="463.50"></text></g><g><title>CoreText`invocation function for block in MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*) (2 samples, 0.01%)</title><rect x="0.1380%" y="437" width="0.0110%" height="15" fill="rgb(232,182,51)" fg:x="25" fg:w="2"/><text x="0.3880%" y="447.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*, double) (2 samples, 0.01%)</title><rect x="0.1380%" y="421" width="0.0110%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="2"/><text x="0.3880%" y="431.50"></text></g><g><title>CoreText`TDescriptorSource::CopyXTypeFontWithName (2 samples, 0.01%)</title><rect x="0.1380%" y="405" width="0.0110%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="2"/><text x="0.3880%" y="415.50"></text></g><g><title>libFontRegistry.dylib`XTCopyFontWithName (2 samples, 0.01%)</title><rect x="0.1380%" y="389" width="0.0110%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="2"/><text x="0.3880%" y="399.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (3 samples, 0.02%)</title><rect x="0.1380%" y="645" width="0.0166%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="3"/><text x="0.3880%" y="655.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (3 samples, 0.02%)</title><rect x="0.1380%" y="629" width="0.0166%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="3"/><text x="0.3880%" y="639.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (3 samples, 0.02%)</title><rect x="0.1380%" y="613" width="0.0166%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="3"/><text x="0.3880%" y="623.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (3 samples, 0.02%)</title><rect x="0.1380%" y="597" width="0.0166%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="3"/><text x="0.3880%" y="607.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (9 samples, 0.05%)</title><rect x="0.1159%" y="789" width="0.0497%" height="15" fill="rgb(250,191,14)" fg:x="21" fg:w="9"/><text x="0.3659%" y="799.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.04%)</title><rect x="0.1270%" y="773" width="0.0386%" height="15" fill="rgb(239,60,40)" fg:x="23" fg:w="7"/><text x="0.3770%" y="783.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.04%)</title><rect x="0.1270%" y="757" width="0.0386%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="7"/><text x="0.3770%" y="767.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (5 samples, 0.03%)</title><rect x="0.1380%" y="741" width="0.0276%" height="15" fill="rgb(225,35,8)" fg:x="25" fg:w="5"/><text x="0.3880%" y="751.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (5 samples, 0.03%)</title><rect x="0.1380%" y="725" width="0.0276%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="5"/><text x="0.3880%" y="735.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (5 samples, 0.03%)</title><rect x="0.1380%" y="709" width="0.0276%" height="15" fill="rgb(247,123,22)" fg:x="25" fg:w="5"/><text x="0.3880%" y="719.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (5 samples, 0.03%)</title><rect x="0.1380%" y="693" width="0.0276%" height="15" fill="rgb(231,138,38)" fg:x="25" fg:w="5"/><text x="0.3880%" y="703.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (5 samples, 0.03%)</title><rect x="0.1380%" y="677" width="0.0276%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="5"/><text x="0.3880%" y="687.50"></text></g><g><title>AppKit`-[NSButtonCell init] (5 samples, 0.03%)</title><rect x="0.1380%" y="661" width="0.0276%" height="15" fill="rgb(251,118,11)" fg:x="25" fg:w="5"/><text x="0.3880%" y="671.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (12 samples, 0.07%)</title><rect x="0.1159%" y="805" width="0.0663%" height="15" fill="rgb(217,147,25)" fg:x="21" fg:w="12"/><text x="0.3659%" y="815.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (3 samples, 0.02%)</title><rect x="0.1656%" y="789" width="0.0166%" height="15" fill="rgb(247,81,37)" fg:x="30" fg:w="3"/><text x="0.4156%" y="799.50"></text></g><g><title>AppKit`-[NSResponder init] (3 samples, 0.02%)</title><rect x="0.1656%" y="773" width="0.0166%" height="15" fill="rgb(209,12,38)" fg:x="30" fg:w="3"/><text x="0.4156%" y="783.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (3 samples, 0.02%)</title><rect x="0.1656%" y="757" width="0.0166%" height="15" fill="rgb(227,1,9)" fg:x="30" fg:w="3"/><text x="0.4156%" y="767.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.02%)</title><rect x="0.1656%" y="741" width="0.0166%" height="15" fill="rgb(248,47,43)" fg:x="30" fg:w="3"/><text x="0.4156%" y="751.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.1711%" y="725" width="0.0110%" height="15" fill="rgb(221,10,30)" fg:x="31" fg:w="2"/><text x="0.4211%" y="735.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.1711%" y="709" width="0.0110%" height="15" fill="rgb(210,229,1)" fg:x="31" fg:w="2"/><text x="0.4211%" y="719.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.1711%" y="693" width="0.0110%" height="15" fill="rgb(222,148,37)" fg:x="31" fg:w="2"/><text x="0.4211%" y="703.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView initWithFrame:] (3 samples, 0.02%)</title><rect x="0.1988%" y="757" width="0.0166%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="3"/><text x="0.4488%" y="767.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (7 samples, 0.04%)</title><rect x="0.1822%" y="805" width="0.0386%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="7"/><text x="0.4322%" y="815.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (7 samples, 0.04%)</title><rect x="0.1822%" y="789" width="0.0386%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="7"/><text x="0.4322%" y="799.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (7 samples, 0.04%)</title><rect x="0.1822%" y="773" width="0.0386%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="7"/><text x="0.4322%" y="783.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (20 samples, 0.11%)</title><rect x="0.1159%" y="821" width="0.1104%" height="15" fill="rgb(246,177,23)" fg:x="21" fg:w="20"/><text x="0.3659%" y="831.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (21 samples, 0.12%)</title><rect x="0.1159%" y="837" width="0.1159%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="21"/><text x="0.3659%" y="847.50"></text></g><g><title>gui`objc::rc::autorelease::autoreleasepool (24 samples, 0.13%)</title><rect x="0.1049%" y="901" width="0.1325%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="24"/><text x="0.3549%" y="911.50"></text></g><g><title>gui`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (23 samples, 0.13%)</title><rect x="0.1104%" y="885" width="0.1270%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="23"/><text x="0.3604%" y="895.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (23 samples, 0.13%)</title><rect x="0.1104%" y="869" width="0.1270%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="23"/><text x="0.3604%" y="879.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (23 samples, 0.13%)</title><rect x="0.1104%" y="853" width="0.1270%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="23"/><text x="0.3604%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.01%)</title><rect x="0.2429%" y="741" width="0.0110%" height="15" fill="rgb(233,84,52)" fg:x="44" fg:w="2"/><text x="0.4929%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.2429%" y="725" width="0.0110%" height="15" fill="rgb(207,117,47)" fg:x="44" fg:w="2"/><text x="0.4929%" y="735.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (2 samples, 0.01%)</title><rect x="0.2429%" y="709" width="0.0110%" height="15" fill="rgb(249,43,39)" fg:x="44" fg:w="2"/><text x="0.4929%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.2429%" y="693" width="0.0110%" height="15" fill="rgb(209,38,44)" fg:x="44" fg:w="2"/><text x="0.4929%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.2429%" y="677" width="0.0110%" height="15" fill="rgb(236,212,23)" fg:x="44" fg:w="2"/><text x="0.4929%" y="687.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (2 samples, 0.01%)</title><rect x="0.2429%" y="661" width="0.0110%" height="15" fill="rgb(242,79,21)" fg:x="44" fg:w="2"/><text x="0.4929%" y="671.50"></text></g><g><title>LaunchServices`UTTypeCreatePreferredIdentifierForTag (2 samples, 0.01%)</title><rect x="0.2429%" y="645" width="0.0110%" height="15" fill="rgb(211,96,35)" fg:x="44" fg:w="2"/><text x="0.4929%" y="655.50"></text></g><g><title>LaunchServices`+[UTTypeRecord typeRecordWithTag:ofClass:conformingToIdentifier:] (2 samples, 0.01%)</title><rect x="0.2429%" y="629" width="0.0110%" height="15" fill="rgb(253,215,40)" fg:x="44" fg:w="2"/><text x="0.4929%" y="639.50"></text></g><g><title>LaunchServices`LaunchServices::Database::Context::_get (2 samples, 0.01%)</title><rect x="0.2429%" y="613" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="44" fg:w="2"/><text x="0.4929%" y="623.50"></text></g><g><title>LaunchServices`_LSContextInitCommon(LSContext*, unsigned int const*, unsigned long, NSError* __autoreleasing*) (2 samples, 0.01%)</title><rect x="0.2429%" y="597" width="0.0110%" height="15" fill="rgb(208,190,38)" fg:x="44" fg:w="2"/><text x="0.4929%" y="607.50"></text></g><g><title>AppKit`-[NSTextInputContext selectedKeyboardInputSource] (4 samples, 0.02%)</title><rect x="0.2374%" y="869" width="0.0221%" height="15" fill="rgb(235,213,38)" fg:x="43" fg:w="4"/><text x="0.4874%" y="879.50"></text></g><g><title>HIToolbox`TSMCurrentKeyboardInputSourceRefCreate (4 samples, 0.02%)</title><rect x="0.2374%" y="853" width="0.0221%" height="15" fill="rgb(237,122,38)" fg:x="43" fg:w="4"/><text x="0.4874%" y="863.50"></text></g><g><title>HIToolbox`isCreateCurrentKeyboardInputSourceRef (4 samples, 0.02%)</title><rect x="0.2374%" y="837" width="0.0221%" height="15" fill="rgb(244,218,35)" fg:x="43" fg:w="4"/><text x="0.4874%" y="847.50"></text></g><g><title>HIToolbox`_HaveOnlyOneKeyboardInputSource (4 samples, 0.02%)</title><rect x="0.2374%" y="821" width="0.0221%" height="15" fill="rgb(240,68,47)" fg:x="43" fg:w="4"/><text x="0.4874%" y="831.50"></text></g><g><title>HIToolbox`islGetInputSourceListWithAdditions (4 samples, 0.02%)</title><rect x="0.2374%" y="805" width="0.0221%" height="15" fill="rgb(210,16,53)" fg:x="43" fg:w="4"/><text x="0.4874%" y="815.50"></text></g><g><title>HIToolbox`isPrefsCreateCacheFromEnabledAndDefaultInputSources (4 samples, 0.02%)</title><rect x="0.2374%" y="789" width="0.0221%" height="15" fill="rgb(235,124,12)" fg:x="43" fg:w="4"/><text x="0.4874%" y="799.50"></text></g><g><title>HIToolbox`isPrefsGetDefaultAsciiKeyboardLayout (3 samples, 0.02%)</title><rect x="0.2429%" y="773" width="0.0166%" height="15" fill="rgb(224,169,11)" fg:x="44" fg:w="3"/><text x="0.4929%" y="783.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (3 samples, 0.02%)</title><rect x="0.2429%" y="757" width="0.0166%" height="15" fill="rgb(250,166,2)" fg:x="44" fg:w="3"/><text x="0.4929%" y="767.50"></text></g><g><title>gui`eframe::native::run::create_display (46 samples, 0.25%)</title><rect x="0.0110%" y="965" width="0.2540%" height="15" fill="rgb(242,216,29)" fg:x="2" fg:w="46"/><text x="0.2610%" y="975.50"></text></g><g><title>gui`glutin::windowed::_&lt;impl glutin::ContextBuilder&lt;T&gt;&gt;::build_windowed (42 samples, 0.23%)</title><rect x="0.0331%" y="949" width="0.2319%" height="15" fill="rgb(230,116,27)" fg:x="6" fg:w="42"/><text x="0.2831%" y="959.50"></text></g><g><title>gui`winit::platform_impl::platform::Window::new (31 samples, 0.17%)</title><rect x="0.0939%" y="933" width="0.1711%" height="15" fill="rgb(228,99,48)" fg:x="17" fg:w="31"/><text x="0.3439%" y="943.50"></text></g><g><title>gui`winit::platform_impl::platform::window::UnownedWindow::new (31 samples, 0.17%)</title><rect x="0.0939%" y="917" width="0.1711%" height="15" fill="rgb(253,11,6)" fg:x="17" fg:w="31"/><text x="0.3439%" y="927.50"></text></g><g><title>gui`winit::platform_impl::platform::view::new_view (5 samples, 0.03%)</title><rect x="0.2374%" y="901" width="0.0276%" height="15" fill="rgb(247,143,39)" fg:x="43" fg:w="5"/><text x="0.4874%" y="911.50"></text></g><g><title>gui`winit::platform_impl::platform::view::init_with_winit (5 samples, 0.03%)</title><rect x="0.2374%" y="885" width="0.0276%" height="15" fill="rgb(236,97,10)" fg:x="43" fg:w="5"/><text x="0.4874%" y="895.50"></text></g><g><title>gui`eframe::native::run::glow_integration::GlowWinitApp::new (48 samples, 0.27%)</title><rect x="0.0110%" y="981" width="0.2650%" height="15" fill="rgb(233,208,19)" fg:x="2" fg:w="48"/><text x="0.2610%" y="991.50"></text></g><g><title>gui`egui_glow::painter::Painter::new (2 samples, 0.01%)</title><rect x="0.2650%" y="965" width="0.0110%" height="15" fill="rgb(216,164,2)" fg:x="48" fg:w="2"/><text x="0.5150%" y="975.50"></text></g><g><title>AppKit`-[NSEvent associatedEventsMask] (2 samples, 0.01%)</title><rect x="0.2926%" y="757" width="0.0110%" height="15" fill="rgb(220,129,5)" fg:x="53" fg:w="2"/><text x="0.5426%" y="767.50"></text></g><g><title>AppKit`+[NSTouchDevice touchDeviceFromDeviceID:] (2 samples, 0.01%)</title><rect x="0.2926%" y="741" width="0.0110%" height="15" fill="rgb(242,17,10)" fg:x="53" fg:w="2"/><text x="0.5426%" y="751.50"></text></g><g><title>AppKit`+[NSTouchDevice touchDevices] (2 samples, 0.01%)</title><rect x="0.2926%" y="725" width="0.0110%" height="15" fill="rgb(242,107,0)" fg:x="53" fg:w="2"/><text x="0.5426%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.2926%" y="709" width="0.0110%" height="15" fill="rgb(251,28,31)" fg:x="53" fg:w="2"/><text x="0.5426%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.2926%" y="693" width="0.0110%" height="15" fill="rgb(233,223,10)" fg:x="53" fg:w="2"/><text x="0.5426%" y="703.50"></text></g><g><title>AppKit`__29+[NSTouchDevice touchDevices]_block_invoke (2 samples, 0.01%)</title><rect x="0.2926%" y="677" width="0.0110%" height="15" fill="rgb(215,21,27)" fg:x="53" fg:w="2"/><text x="0.5426%" y="687.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (3 samples, 0.02%)</title><rect x="0.2926%" y="853" width="0.0166%" height="15" fill="rgb(232,23,21)" fg:x="53" fg:w="3"/><text x="0.5426%" y="863.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (3 samples, 0.02%)</title><rect x="0.2926%" y="837" width="0.0166%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="3"/><text x="0.5426%" y="847.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (3 samples, 0.02%)</title><rect x="0.2926%" y="821" width="0.0166%" height="15" fill="rgb(226,81,46)" fg:x="53" fg:w="3"/><text x="0.5426%" y="831.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (3 samples, 0.02%)</title><rect x="0.2926%" y="805" width="0.0166%" height="15" fill="rgb(247,70,30)" fg:x="53" fg:w="3"/><text x="0.5426%" y="815.50"></text></g><g><title>AppKit`NSControlTrackMouse (3 samples, 0.02%)</title><rect x="0.2926%" y="789" width="0.0166%" height="15" fill="rgb(212,68,19)" fg:x="53" fg:w="3"/><text x="0.5426%" y="799.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (3 samples, 0.02%)</title><rect x="0.2926%" y="773" width="0.0166%" height="15" fill="rgb(240,187,13)" fg:x="53" fg:w="3"/><text x="0.5426%" y="783.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (4 samples, 0.02%)</title><rect x="0.2926%" y="885" width="0.0221%" height="15" fill="rgb(223,113,26)" fg:x="53" fg:w="4"/><text x="0.5426%" y="895.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (4 samples, 0.02%)</title><rect x="0.2926%" y="869" width="0.0221%" height="15" fill="rgb(206,192,2)" fg:x="53" fg:w="4"/><text x="0.5426%" y="879.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (7 samples, 0.04%)</title><rect x="0.2816%" y="933" width="0.0386%" height="15" fill="rgb(241,108,4)" fg:x="51" fg:w="7"/><text x="0.5316%" y="943.50"></text></g><g><title>gui`winit::platform_impl::platform::app::send_event (7 samples, 0.04%)</title><rect x="0.2816%" y="917" width="0.0386%" height="15" fill="rgb(247,173,49)" fg:x="51" fg:w="7"/><text x="0.5316%" y="927.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (7 samples, 0.04%)</title><rect x="0.2816%" y="901" width="0.0386%" height="15" fill="rgb(224,114,35)" fg:x="51" fg:w="7"/><text x="0.5316%" y="911.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (2 samples, 0.01%)</title><rect x="0.3202%" y="933" width="0.0110%" height="15" fill="rgb(245,159,27)" fg:x="58" fg:w="2"/><text x="0.5702%" y="943.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (4 samples, 0.02%)</title><rect x="0.3313%" y="917" width="0.0221%" height="15" fill="rgb(245,172,44)" fg:x="60" fg:w="4"/><text x="0.5813%" y="927.50"></text></g><g><title>HIToolbox`ReleaseEvent (2 samples, 0.01%)</title><rect x="0.3533%" y="901" width="0.0110%" height="15" fill="rgb(236,23,11)" fg:x="64" fg:w="2"/><text x="0.6033%" y="911.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.01%)</title><rect x="0.3533%" y="885" width="0.0110%" height="15" fill="rgb(205,117,38)" fg:x="64" fg:w="2"/><text x="0.6033%" y="895.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (3 samples, 0.02%)</title><rect x="0.3533%" y="917" width="0.0166%" height="15" fill="rgb(237,72,25)" fg:x="64" fg:w="3"/><text x="0.6033%" y="927.50"></text></g><g><title>AppKit`-[NSApplication activateIgnoringOtherApps:] (2 samples, 0.01%)</title><rect x="0.3809%" y="629" width="0.0110%" height="15" fill="rgb(244,70,9)" fg:x="69" fg:w="2"/><text x="0.6309%" y="639.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`msgtracer_log_with_keys (2 samples, 0.01%)</title><rect x="0.3809%" y="613" width="0.0110%" height="15" fill="rgb(217,125,39)" fg:x="69" fg:w="2"/><text x="0.6309%" y="623.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`msgtracer_vlog_with_keys_skip_nulls (2 samples, 0.01%)</title><rect x="0.3809%" y="597" width="0.0110%" height="15" fill="rgb(235,36,10)" fg:x="69" fg:w="2"/><text x="0.6309%" y="607.50"></text></g><g><title>libDiagnosticMessagesClient.dylib`msgtracer_domain_new (2 samples, 0.01%)</title><rect x="0.3809%" y="581" width="0.0110%" height="15" fill="rgb(251,123,47)" fg:x="69" fg:w="2"/><text x="0.6309%" y="591.50"></text></g><g><title>gui`&lt;*mut objc::runtime::Object as cocoa::appkit::NSApplication&gt;::setActivationPolicy_ (2 samples, 0.01%)</title><rect x="0.3920%" y="629" width="0.0110%" height="15" fill="rgb(221,13,13)" fg:x="71" fg:w="2"/><text x="0.6420%" y="639.50"></text></g><g><title>AppKit`-[NSApplication setActivationPolicy:] (2 samples, 0.01%)</title><rect x="0.3920%" y="613" width="0.0110%" height="15" fill="rgb(238,131,9)" fg:x="71" fg:w="2"/><text x="0.6420%" y="623.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (6 samples, 0.03%)</title><rect x="0.3809%" y="757" width="0.0331%" height="15" fill="rgb(211,50,8)" fg:x="69" fg:w="6"/><text x="0.6309%" y="767.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (6 samples, 0.03%)</title><rect x="0.3809%" y="741" width="0.0331%" height="15" fill="rgb(245,182,24)" fg:x="69" fg:w="6"/><text x="0.6309%" y="751.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (6 samples, 0.03%)</title><rect x="0.3809%" y="725" width="0.0331%" height="15" fill="rgb(242,14,37)" fg:x="69" fg:w="6"/><text x="0.6309%" y="735.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (6 samples, 0.03%)</title><rect x="0.3809%" y="709" width="0.0331%" height="15" fill="rgb(246,228,12)" fg:x="69" fg:w="6"/><text x="0.6309%" y="719.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (6 samples, 0.03%)</title><rect x="0.3809%" y="693" width="0.0331%" height="15" fill="rgb(213,55,15)" fg:x="69" fg:w="6"/><text x="0.6309%" y="703.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (6 samples, 0.03%)</title><rect x="0.3809%" y="677" width="0.0331%" height="15" fill="rgb(209,9,3)" fg:x="69" fg:w="6"/><text x="0.6309%" y="687.50"></text></g><g><title>gui`winit::platform_impl::platform::app_delegate::did_finish_launching (6 samples, 0.03%)</title><rect x="0.3809%" y="661" width="0.0331%" height="15" fill="rgb(230,59,30)" fg:x="69" fg:w="6"/><text x="0.6309%" y="671.50"></text></g><g><title>gui`winit::platform_impl::platform::app_state::AppState::launched (6 samples, 0.03%)</title><rect x="0.3809%" y="645" width="0.0331%" height="15" fill="rgb(209,121,21)" fg:x="69" fg:w="6"/><text x="0.6309%" y="655.50"></text></g><g><title>gui`objc::rc::autorelease::autoreleasepool (2 samples, 0.01%)</title><rect x="0.4030%" y="629" width="0.0110%" height="15" fill="rgb(220,109,13)" fg:x="73" fg:w="2"/><text x="0.6530%" y="639.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (8 samples, 0.04%)</title><rect x="0.3754%" y="901" width="0.0442%" height="15" fill="rgb(232,18,1)" fg:x="68" fg:w="8"/><text x="0.6254%" y="911.50"></text></g><g><title>AE`aeProcessAppleEvent (8 samples, 0.04%)</title><rect x="0.3754%" y="885" width="0.0442%" height="15" fill="rgb(215,41,42)" fg:x="68" fg:w="8"/><text x="0.6254%" y="895.50"></text></g><g><title>AE`0x00007fff26364eec (8 samples, 0.04%)</title><rect x="0.3754%" y="869" width="0.0442%" height="15" fill="rgb(224,123,36)" fg:x="68" fg:w="8"/><text x="0.6254%" y="879.50"></text></g><g><title>AE`0x00007fff26364f6b (8 samples, 0.04%)</title><rect x="0.3754%" y="853" width="0.0442%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="8"/><text x="0.6254%" y="863.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (8 samples, 0.04%)</title><rect x="0.3754%" y="837" width="0.0442%" height="15" fill="rgb(205,98,50)" fg:x="68" fg:w="8"/><text x="0.6254%" y="847.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (8 samples, 0.04%)</title><rect x="0.3754%" y="821" width="0.0442%" height="15" fill="rgb(205,185,37)" fg:x="68" fg:w="8"/><text x="0.6254%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (8 samples, 0.04%)</title><rect x="0.3754%" y="805" width="0.0442%" height="15" fill="rgb(238,207,15)" fg:x="68" fg:w="8"/><text x="0.6254%" y="815.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (8 samples, 0.04%)</title><rect x="0.3754%" y="789" width="0.0442%" height="15" fill="rgb(213,199,42)" fg:x="68" fg:w="8"/><text x="0.6254%" y="799.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (7 samples, 0.04%)</title><rect x="0.3809%" y="773" width="0.0386%" height="15" fill="rgb(235,201,11)" fg:x="69" fg:w="7"/><text x="0.6309%" y="783.50"></text></g><g><title>CoreGraphics`argb32_mark (2 samples, 0.01%)</title><rect x="0.4196%" y="389" width="0.0110%" height="15" fill="rgb(207,46,11)" fg:x="76" fg:w="2"/><text x="0.6696%" y="399.50"></text></g><g><title>CoreGraphics`CGBlt_fillBytes (2 samples, 0.01%)</title><rect x="0.4196%" y="373" width="0.0110%" height="15" fill="rgb(241,35,35)" fg:x="76" fg:w="2"/><text x="0.6696%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="0.4196%" y="357" width="0.0110%" height="15" fill="rgb(243,32,47)" fg:x="76" fg:w="2"/><text x="0.6696%" y="367.50"></text></g><g><title>CoreGraphics`CGContextClearRect (3 samples, 0.02%)</title><rect x="0.4196%" y="485" width="0.0166%" height="15" fill="rgb(247,202,23)" fg:x="76" fg:w="3"/><text x="0.6696%" y="495.50"></text></g><g><title>CoreGraphics`CGContextFillRect (3 samples, 0.02%)</title><rect x="0.4196%" y="469" width="0.0166%" height="15" fill="rgb(219,102,11)" fg:x="76" fg:w="3"/><text x="0.6696%" y="479.50"></text></g><g><title>CoreGraphics`CGContextFillRects (3 samples, 0.02%)</title><rect x="0.4196%" y="453" width="0.0166%" height="15" fill="rgb(243,110,44)" fg:x="76" fg:w="3"/><text x="0.6696%" y="463.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (3 samples, 0.02%)</title><rect x="0.4196%" y="437" width="0.0166%" height="15" fill="rgb(222,74,54)" fg:x="76" fg:w="3"/><text x="0.6696%" y="447.50"></text></g><g><title>CoreGraphics`ripc_Render (3 samples, 0.02%)</title><rect x="0.4196%" y="421" width="0.0166%" height="15" fill="rgb(216,99,12)" fg:x="76" fg:w="3"/><text x="0.6696%" y="431.50"></text></g><g><title>CoreGraphics`RIPLayerBltShape (3 samples, 0.02%)</title><rect x="0.4196%" y="405" width="0.0166%" height="15" fill="rgb(226,22,26)" fg:x="76" fg:w="3"/><text x="0.6696%" y="415.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (2 samples, 0.01%)</title><rect x="0.4417%" y="421" width="0.0110%" height="15" fill="rgb(217,163,10)" fg:x="80" fg:w="2"/><text x="0.6917%" y="431.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (2 samples, 0.01%)</title><rect x="0.4417%" y="405" width="0.0110%" height="15" fill="rgb(213,25,53)" fg:x="80" fg:w="2"/><text x="0.6917%" y="415.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (7 samples, 0.04%)</title><rect x="0.4196%" y="501" width="0.0386%" height="15" fill="rgb(252,105,26)" fg:x="76" fg:w="7"/><text x="0.6696%" y="511.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (3 samples, 0.02%)</title><rect x="0.4417%" y="485" width="0.0166%" height="15" fill="rgb(220,39,43)" fg:x="80" fg:w="3"/><text x="0.6917%" y="495.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (3 samples, 0.02%)</title><rect x="0.4417%" y="469" width="0.0166%" height="15" fill="rgb(229,68,48)" fg:x="80" fg:w="3"/><text x="0.6917%" y="479.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (3 samples, 0.02%)</title><rect x="0.4417%" y="453" width="0.0166%" height="15" fill="rgb(252,8,32)" fg:x="80" fg:w="3"/><text x="0.6917%" y="463.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.02%)</title><rect x="0.4417%" y="437" width="0.0166%" height="15" fill="rgb(223,20,43)" fg:x="80" fg:w="3"/><text x="0.6917%" y="447.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (9 samples, 0.05%)</title><rect x="0.4196%" y="517" width="0.0497%" height="15" fill="rgb(229,81,49)" fg:x="76" fg:w="9"/><text x="0.6696%" y="527.50"></text></g><g><title>HIToolbox`HIView::Render (10 samples, 0.06%)</title><rect x="0.4196%" y="677" width="0.0552%" height="15" fill="rgb(236,28,36)" fg:x="76" fg:w="10"/><text x="0.6696%" y="687.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (10 samples, 0.06%)</title><rect x="0.4196%" y="661" width="0.0552%" height="15" fill="rgb(249,185,26)" fg:x="76" fg:w="10"/><text x="0.6696%" y="671.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.06%)</title><rect x="0.4196%" y="645" width="0.0552%" height="15" fill="rgb(249,174,33)" fg:x="76" fg:w="10"/><text x="0.6696%" y="655.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.06%)</title><rect x="0.4196%" y="629" width="0.0552%" height="15" fill="rgb(233,201,37)" fg:x="76" fg:w="10"/><text x="0.6696%" y="639.50"></text></g><g><title>HIToolbox`HIView::SendDraw (10 samples, 0.06%)</title><rect x="0.4196%" y="613" width="0.0552%" height="15" fill="rgb(221,78,26)" fg:x="76" fg:w="10"/><text x="0.6696%" y="623.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (10 samples, 0.06%)</title><rect x="0.4196%" y="597" width="0.0552%" height="15" fill="rgb(250,127,30)" fg:x="76" fg:w="10"/><text x="0.6696%" y="607.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (10 samples, 0.06%)</title><rect x="0.4196%" y="581" width="0.0552%" height="15" fill="rgb(230,49,44)" fg:x="76" fg:w="10"/><text x="0.6696%" y="591.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (10 samples, 0.06%)</title><rect x="0.4196%" y="565" width="0.0552%" height="15" fill="rgb(229,67,23)" fg:x="76" fg:w="10"/><text x="0.6696%" y="575.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (10 samples, 0.06%)</title><rect x="0.4196%" y="549" width="0.0552%" height="15" fill="rgb(249,83,47)" fg:x="76" fg:w="10"/><text x="0.6696%" y="559.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (10 samples, 0.06%)</title><rect x="0.4196%" y="533" width="0.0552%" height="15" fill="rgb(215,43,3)" fg:x="76" fg:w="10"/><text x="0.6696%" y="543.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (11 samples, 0.06%)</title><rect x="0.4196%" y="773" width="0.0607%" height="15" fill="rgb(238,154,13)" fg:x="76" fg:w="11"/><text x="0.6696%" y="783.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (11 samples, 0.06%)</title><rect x="0.4196%" y="757" width="0.0607%" height="15" fill="rgb(219,56,2)" fg:x="76" fg:w="11"/><text x="0.6696%" y="767.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (11 samples, 0.06%)</title><rect x="0.4196%" y="741" width="0.0607%" height="15" fill="rgb(233,0,4)" fg:x="76" fg:w="11"/><text x="0.6696%" y="751.50"></text></g><g><title>HIToolbox`ShowHide (11 samples, 0.06%)</title><rect x="0.4196%" y="725" width="0.0607%" height="15" fill="rgb(235,30,7)" fg:x="76" fg:w="11"/><text x="0.6696%" y="735.50"></text></g><g><title>HIToolbox`_ShowHideWindows (11 samples, 0.06%)</title><rect x="0.4196%" y="709" width="0.0607%" height="15" fill="rgb(250,79,13)" fg:x="76" fg:w="11"/><text x="0.6696%" y="719.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (11 samples, 0.06%)</title><rect x="0.4196%" y="693" width="0.0607%" height="15" fill="rgb(211,146,34)" fg:x="76" fg:w="11"/><text x="0.6696%" y="703.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetServerBounds (2 samples, 0.01%)</title><rect x="0.4803%" y="773" width="0.0110%" height="15" fill="rgb(228,22,38)" fg:x="87" fg:w="2"/><text x="0.7303%" y="783.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (14 samples, 0.08%)</title><rect x="0.4196%" y="869" width="0.0773%" height="15" fill="rgb(235,168,5)" fg:x="76" fg:w="14"/><text x="0.6696%" y="879.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (14 samples, 0.08%)</title><rect x="0.4196%" y="853" width="0.0773%" height="15" fill="rgb(221,155,16)" fg:x="76" fg:w="14"/><text x="0.6696%" y="863.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (14 samples, 0.08%)</title><rect x="0.4196%" y="837" width="0.0773%" height="15" fill="rgb(215,215,53)" fg:x="76" fg:w="14"/><text x="0.6696%" y="847.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (14 samples, 0.08%)</title><rect x="0.4196%" y="821" width="0.0773%" height="15" fill="rgb(223,4,10)" fg:x="76" fg:w="14"/><text x="0.6696%" y="831.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (14 samples, 0.08%)</title><rect x="0.4196%" y="805" width="0.0773%" height="15" fill="rgb(234,103,6)" fg:x="76" fg:w="14"/><text x="0.6696%" y="815.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (14 samples, 0.08%)</title><rect x="0.4196%" y="789" width="0.0773%" height="15" fill="rgb(227,97,0)" fg:x="76" fg:w="14"/><text x="0.6696%" y="799.50"></text></g><g><title>QuartzCore`CA::Context::unref (2 samples, 0.01%)</title><rect x="0.5024%" y="757" width="0.0110%" height="15" fill="rgb(234,150,53)" fg:x="91" fg:w="2"/><text x="0.7524%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (4 samples, 0.02%)</title><rect x="0.5190%" y="757" width="0.0221%" height="15" fill="rgb(228,201,54)" fg:x="94" fg:w="4"/><text x="0.7690%" y="767.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (4 samples, 0.02%)</title><rect x="0.5190%" y="741" width="0.0221%" height="15" fill="rgb(222,22,37)" fg:x="94" fg:w="4"/><text x="0.7690%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.02%)</title><rect x="0.5190%" y="725" width="0.0221%" height="15" fill="rgb(237,53,32)" fg:x="94" fg:w="4"/><text x="0.7690%" y="735.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (10 samples, 0.06%)</title><rect x="0.4969%" y="773" width="0.0552%" height="15" fill="rgb(233,25,53)" fg:x="90" fg:w="10"/><text x="0.7469%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="0.5410%" y="757" width="0.0110%" height="15" fill="rgb(210,40,34)" fg:x="98" fg:w="2"/><text x="0.7910%" y="767.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (13 samples, 0.07%)</title><rect x="0.4969%" y="837" width="0.0718%" height="15" fill="rgb(241,220,44)" fg:x="90" fg:w="13"/><text x="0.7469%" y="847.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (13 samples, 0.07%)</title><rect x="0.4969%" y="821" width="0.0718%" height="15" fill="rgb(235,28,35)" fg:x="90" fg:w="13"/><text x="0.7469%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (13 samples, 0.07%)</title><rect x="0.4969%" y="805" width="0.0718%" height="15" fill="rgb(210,56,17)" fg:x="90" fg:w="13"/><text x="0.7469%" y="815.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (13 samples, 0.07%)</title><rect x="0.4969%" y="789" width="0.0718%" height="15" fill="rgb(224,130,29)" fg:x="90" fg:w="13"/><text x="0.7469%" y="799.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (2 samples, 0.01%)</title><rect x="0.5576%" y="773" width="0.0110%" height="15" fill="rgb(235,212,8)" fg:x="101" fg:w="2"/><text x="0.8076%" y="783.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (2 samples, 0.01%)</title><rect x="0.5576%" y="757" width="0.0110%" height="15" fill="rgb(223,33,50)" fg:x="101" fg:w="2"/><text x="0.8076%" y="767.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (2 samples, 0.01%)</title><rect x="0.5576%" y="741" width="0.0110%" height="15" fill="rgb(219,149,13)" fg:x="101" fg:w="2"/><text x="0.8076%" y="751.50"></text></g><g><title>gui`dispatch::context_and_function::work_execute_closure (2 samples, 0.01%)</title><rect x="0.5687%" y="773" width="0.0110%" height="15" fill="rgb(250,156,29)" fg:x="103" fg:w="2"/><text x="0.8187%" y="783.50"></text></g><g><title>AppKit`-[NSWindow _close] (2 samples, 0.01%)</title><rect x="0.5687%" y="757" width="0.0110%" height="15" fill="rgb(216,193,19)" fg:x="103" fg:w="2"/><text x="0.8187%" y="767.50"></text></g><g><title>AppKit`-[NSWindow _finishClosingWindow] (2 samples, 0.01%)</title><rect x="0.5687%" y="741" width="0.0110%" height="15" fill="rgb(216,135,14)" fg:x="103" fg:w="2"/><text x="0.8187%" y="751.50"></text></g><g><title>AppKit`-[NSWindow orderWindow:relativeTo:] (2 samples, 0.01%)</title><rect x="0.5687%" y="725" width="0.0110%" height="15" fill="rgb(241,47,5)" fg:x="103" fg:w="2"/><text x="0.8187%" y="735.50"></text></g><g><title>AppKit`-[NSWindow _doOrderWindow:relativeTo:findKey:forCounter:force:isModal:] (2 samples, 0.01%)</title><rect x="0.5687%" y="709" width="0.0110%" height="15" fill="rgb(233,42,35)" fg:x="103" fg:w="2"/><text x="0.8187%" y="719.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindow:relativeTo:findKey:forCounter:force:isModal:] (2 samples, 0.01%)</title><rect x="0.5687%" y="693" width="0.0110%" height="15" fill="rgb(231,13,6)" fg:x="103" fg:w="2"/><text x="0.8187%" y="703.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindowOutRelativeTo:findKey:forCounter:force:isModal:] (2 samples, 0.01%)</title><rect x="0.5687%" y="677" width="0.0110%" height="15" fill="rgb(207,181,40)" fg:x="103" fg:w="2"/><text x="0.8187%" y="687.50"></text></g><g><title>AppKit`-[NSWindow _doWindowOrderOutWithWithKeyCalc:forCounter:orderingDone:docWindow:] (2 samples, 0.01%)</title><rect x="0.5687%" y="661" width="0.0110%" height="15" fill="rgb(254,173,49)" fg:x="103" fg:w="2"/><text x="0.8187%" y="671.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (2 samples, 0.01%)</title><rect x="0.5687%" y="645" width="0.0110%" height="15" fill="rgb(221,1,38)" fg:x="103" fg:w="2"/><text x="0.8187%" y="655.50"></text></g><g><title>AppKit`-[NSWindow _orderOutAndCalcKeyWithCounter:stillVisible:docWindow:] (2 samples, 0.01%)</title><rect x="0.5687%" y="629" width="0.0110%" height="15" fill="rgb(206,124,46)" fg:x="103" fg:w="2"/><text x="0.8187%" y="639.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (4 samples, 0.02%)</title><rect x="0.5687%" y="821" width="0.0221%" height="15" fill="rgb(249,21,11)" fg:x="103" fg:w="4"/><text x="0.8187%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (4 samples, 0.02%)</title><rect x="0.5687%" y="805" width="0.0221%" height="15" fill="rgb(222,201,40)" fg:x="103" fg:w="4"/><text x="0.8187%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="0.5687%" y="789" width="0.0221%" height="15" fill="rgb(235,61,29)" fg:x="103" fg:w="4"/><text x="0.8187%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (2 samples, 0.01%)</title><rect x="0.5797%" y="773" width="0.0110%" height="15" fill="rgb(219,207,3)" fg:x="105" fg:w="2"/><text x="0.8297%" y="783.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (3 samples, 0.02%)</title><rect x="0.5963%" y="725" width="0.0166%" height="15" fill="rgb(222,56,46)" fg:x="108" fg:w="3"/><text x="0.8463%" y="735.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (2 samples, 0.01%)</title><rect x="0.6018%" y="709" width="0.0110%" height="15" fill="rgb(239,76,54)" fg:x="109" fg:w="2"/><text x="0.8518%" y="719.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (5 samples, 0.03%)</title><rect x="0.5963%" y="773" width="0.0276%" height="15" fill="rgb(231,124,27)" fg:x="108" fg:w="5"/><text x="0.8463%" y="783.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (5 samples, 0.03%)</title><rect x="0.5963%" y="757" width="0.0276%" height="15" fill="rgb(249,195,6)" fg:x="108" fg:w="5"/><text x="0.8463%" y="767.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (5 samples, 0.03%)</title><rect x="0.5963%" y="741" width="0.0276%" height="15" fill="rgb(237,174,47)" fg:x="108" fg:w="5"/><text x="0.8463%" y="751.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.01%)</title><rect x="0.6239%" y="693" width="0.0110%" height="15" fill="rgb(206,201,31)" fg:x="113" fg:w="2"/><text x="0.8739%" y="703.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.01%)</title><rect x="0.6239%" y="677" width="0.0110%" height="15" fill="rgb(231,57,52)" fg:x="113" fg:w="2"/><text x="0.8739%" y="687.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.02%)</title><rect x="0.6239%" y="725" width="0.0166%" height="15" fill="rgb(248,177,22)" fg:x="113" fg:w="3"/><text x="0.8739%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.02%)</title><rect x="0.6239%" y="709" width="0.0166%" height="15" fill="rgb(215,211,37)" fg:x="113" fg:w="3"/><text x="0.8739%" y="719.50"></text></g><g><title>AppKit`NSTextLayerDrawForeground (2 samples, 0.01%)</title><rect x="0.6459%" y="581" width="0.0110%" height="15" fill="rgb(241,128,51)" fg:x="117" fg:w="2"/><text x="0.8959%" y="591.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.01%)</title><rect x="0.6459%" y="565" width="0.0110%" height="15" fill="rgb(227,165,31)" fg:x="117" fg:w="2"/><text x="0.8959%" y="575.50"></text></g><g><title>AppKit`__NSTextLayerDrawForeground_block_invoke (2 samples, 0.01%)</title><rect x="0.6459%" y="549" width="0.0110%" height="15" fill="rgb(228,167,24)" fg:x="117" fg:w="2"/><text x="0.8959%" y="559.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.01%)</title><rect x="0.6459%" y="533" width="0.0110%" height="15" fill="rgb(228,143,12)" fg:x="117" fg:w="2"/><text x="0.8959%" y="543.50"></text></g><g><title>AppKit`-[NSTextFieldCell _drawForegroundOfTextLayer] (2 samples, 0.01%)</title><rect x="0.6459%" y="517" width="0.0110%" height="15" fill="rgb(249,149,8)" fg:x="117" fg:w="2"/><text x="0.8959%" y="527.50"></text></g><g><title>AppKit`_NSDrawTextCell (2 samples, 0.01%)</title><rect x="0.6459%" y="501" width="0.0110%" height="15" fill="rgb(243,35,44)" fg:x="117" fg:w="2"/><text x="0.8959%" y="511.50"></text></g><g><title>AppKit`-[NSTextLayer display] (4 samples, 0.02%)</title><rect x="0.6404%" y="709" width="0.0221%" height="15" fill="rgb(246,89,9)" fg:x="116" fg:w="4"/><text x="0.8904%" y="719.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="0.6404%" y="693" width="0.0221%" height="15" fill="rgb(233,213,13)" fg:x="116" fg:w="4"/><text x="0.8904%" y="703.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (4 samples, 0.02%)</title><rect x="0.6404%" y="677" width="0.0221%" height="15" fill="rgb(233,141,41)" fg:x="116" fg:w="4"/><text x="0.8904%" y="687.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.02%)</title><rect x="0.6404%" y="661" width="0.0221%" height="15" fill="rgb(239,167,4)" fg:x="116" fg:w="4"/><text x="0.8904%" y="671.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (4 samples, 0.02%)</title><rect x="0.6404%" y="645" width="0.0221%" height="15" fill="rgb(209,217,16)" fg:x="116" fg:w="4"/><text x="0.8904%" y="655.50"></text></g><g><title>QuartzCore`-[CALayer _display] (3 samples, 0.02%)</title><rect x="0.6459%" y="629" width="0.0166%" height="15" fill="rgb(219,88,35)" fg:x="117" fg:w="3"/><text x="0.8959%" y="639.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (3 samples, 0.02%)</title><rect x="0.6459%" y="613" width="0.0166%" height="15" fill="rgb(220,193,23)" fg:x="117" fg:w="3"/><text x="0.8959%" y="623.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (3 samples, 0.02%)</title><rect x="0.6459%" y="597" width="0.0166%" height="15" fill="rgb(230,90,52)" fg:x="117" fg:w="3"/><text x="0.8959%" y="607.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelSubmitCommands (2 samples, 0.01%)</title><rect x="0.6680%" y="517" width="0.0110%" height="15" fill="rgb(252,106,19)" fg:x="121" fg:w="2"/><text x="0.9180%" y="527.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`IntelCommandBuffer::getNew (2 samples, 0.01%)</title><rect x="0.6680%" y="501" width="0.0110%" height="15" fill="rgb(206,74,20)" fg:x="121" fg:w="2"/><text x="0.9180%" y="511.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (2 samples, 0.01%)</title><rect x="0.6680%" y="485" width="0.0110%" height="15" fill="rgb(230,138,44)" fg:x="121" fg:w="2"/><text x="0.9180%" y="495.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (2 samples, 0.01%)</title><rect x="0.6680%" y="469" width="0.0110%" height="15" fill="rgb(235,182,43)" fg:x="121" fg:w="2"/><text x="0.9180%" y="479.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (2 samples, 0.01%)</title><rect x="0.6680%" y="453" width="0.0110%" height="15" fill="rgb(242,16,51)" fg:x="121" fg:w="2"/><text x="0.9180%" y="463.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.01%)</title><rect x="0.6680%" y="437" width="0.0110%" height="15" fill="rgb(248,9,4)" fg:x="121" fg:w="2"/><text x="0.9180%" y="447.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.01%)</title><rect x="0.6680%" y="421" width="0.0110%" height="15" fill="rgb(210,31,22)" fg:x="121" fg:w="2"/><text x="0.9180%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.01%)</title><rect x="0.6680%" y="405" width="0.0110%" height="15" fill="rgb(239,54,39)" fg:x="121" fg:w="2"/><text x="0.9180%" y="415.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (5 samples, 0.03%)</title><rect x="0.6625%" y="533" width="0.0276%" height="15" fill="rgb(230,99,41)" fg:x="120" fg:w="5"/><text x="0.9125%" y="543.50"></text></g><g><title>GLEngine`glDrawArrays_Exec (2 samples, 0.01%)</title><rect x="0.6791%" y="517" width="0.0110%" height="15" fill="rgb(253,106,12)" fg:x="123" fg:w="2"/><text x="0.9291%" y="527.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (2 samples, 0.01%)</title><rect x="0.6791%" y="501" width="0.0110%" height="15" fill="rgb(213,46,41)" fg:x="123" fg:w="2"/><text x="0.9291%" y="511.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (2 samples, 0.01%)</title><rect x="0.6791%" y="485" width="0.0110%" height="15" fill="rgb(215,133,35)" fg:x="123" fg:w="2"/><text x="0.9291%" y="495.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`updateDispatch (2 samples, 0.01%)</title><rect x="0.6791%" y="469" width="0.0110%" height="15" fill="rgb(213,28,5)" fg:x="123" fg:w="2"/><text x="0.9291%" y="479.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`gpusLoadCurrentPipelinePrograms (2 samples, 0.01%)</title><rect x="0.6791%" y="453" width="0.0110%" height="15" fill="rgb(215,77,49)" fg:x="123" fg:w="2"/><text x="0.9291%" y="463.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (2 samples, 0.01%)</title><rect x="0.6791%" y="437" width="0.0110%" height="15" fill="rgb(248,100,22)" fg:x="123" fg:w="2"/><text x="0.9291%" y="447.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::IM_Shader::Compile (2 samples, 0.01%)</title><rect x="0.6791%" y="421" width="0.0110%" height="15" fill="rgb(208,67,9)" fg:x="123" fg:w="2"/><text x="0.9291%" y="431.50"></text></g><g><title>libGFXShared.dylib`gfxCreateSharedState (2 samples, 0.01%)</title><rect x="0.6901%" y="485" width="0.0110%" height="15" fill="rgb(219,133,21)" fg:x="125" fg:w="2"/><text x="0.9401%" y="495.50"></text></g><g><title>libGPUSupportMercury.dylib`gldCreateShareGroup (2 samples, 0.01%)</title><rect x="0.6901%" y="469" width="0.0110%" height="15" fill="rgb(246,46,29)" fg:x="125" fg:w="2"/><text x="0.9401%" y="479.50"></text></g><g><title>IOAccelerator`IOAccelSharedCreate (2 samples, 0.01%)</title><rect x="0.6901%" y="453" width="0.0110%" height="15" fill="rgb(246,185,52)" fg:x="125" fg:w="2"/><text x="0.9401%" y="463.50"></text></g><g><title>IOKit`IOServiceOpen (2 samples, 0.01%)</title><rect x="0.6901%" y="437" width="0.0110%" height="15" fill="rgb(252,136,11)" fg:x="125" fg:w="2"/><text x="0.9401%" y="447.50"></text></g><g><title>IOKit`io_service_open_extended (2 samples, 0.01%)</title><rect x="0.6901%" y="421" width="0.0110%" height="15" fill="rgb(219,138,53)" fg:x="125" fg:w="2"/><text x="0.9401%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.01%)</title><rect x="0.6901%" y="405" width="0.0110%" height="15" fill="rgb(211,51,23)" fg:x="125" fg:w="2"/><text x="0.9401%" y="415.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (8 samples, 0.04%)</title><rect x="0.6625%" y="565" width="0.0442%" height="15" fill="rgb(247,221,28)" fg:x="120" fg:w="8"/><text x="0.9125%" y="575.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (8 samples, 0.04%)</title><rect x="0.6625%" y="549" width="0.0442%" height="15" fill="rgb(251,222,45)" fg:x="120" fg:w="8"/><text x="0.9125%" y="559.50"></text></g><g><title>AppKit`-[NSIOAccelSurface initWithGPURegistryID:surfaceID:] (3 samples, 0.02%)</title><rect x="0.6901%" y="533" width="0.0166%" height="15" fill="rgb(217,162,53)" fg:x="125" fg:w="3"/><text x="0.9401%" y="543.50"></text></g><g><title>OpenGL`CGLCreateContext (3 samples, 0.02%)</title><rect x="0.6901%" y="517" width="0.0166%" height="15" fill="rgb(229,93,14)" fg:x="125" fg:w="3"/><text x="0.9401%" y="527.50"></text></g><g><title>GLEngine`gliCreateContextWithShared (3 samples, 0.02%)</title><rect x="0.6901%" y="501" width="0.0166%" height="15" fill="rgb(209,67,49)" fg:x="125" fg:w="3"/><text x="0.9401%" y="511.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (9 samples, 0.05%)</title><rect x="0.6625%" y="613" width="0.0497%" height="15" fill="rgb(213,87,29)" fg:x="120" fg:w="9"/><text x="0.9125%" y="623.50"></text></g><g><title>OpenGL`CGLFlushDrawable (9 samples, 0.05%)</title><rect x="0.6625%" y="597" width="0.0497%" height="15" fill="rgb(205,151,52)" fg:x="120" fg:w="9"/><text x="0.9125%" y="607.50"></text></g><g><title>GLEngine`glSwap_Exec (9 samples, 0.05%)</title><rect x="0.6625%" y="581" width="0.0497%" height="15" fill="rgb(253,215,39)" fg:x="120" fg:w="9"/><text x="0.9125%" y="591.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (2 samples, 0.01%)</title><rect x="0.7508%" y="501" width="0.0110%" height="15" fill="rgb(221,220,41)" fg:x="136" fg:w="2"/><text x="1.0008%" y="511.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (2 samples, 0.01%)</title><rect x="0.7508%" y="485" width="0.0110%" height="15" fill="rgb(218,133,21)" fg:x="136" fg:w="2"/><text x="1.0008%" y="495.50"></text></g><g><title>gui`&lt;mandelbrot::Linspace as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="0.7398%" y="517" width="0.0276%" height="15" fill="rgb(221,193,43)" fg:x="134" fg:w="5"/><text x="0.9898%" y="527.50"></text></g><g><title>gui`std::sync::mpmc::Sender&lt;T&gt;::send (4 samples, 0.02%)</title><rect x="0.7674%" y="517" width="0.0221%" height="15" fill="rgb(240,128,52)" fg:x="139" fg:w="4"/><text x="1.0174%" y="527.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::send (4 samples, 0.02%)</title><rect x="0.7674%" y="501" width="0.0221%" height="15" fill="rgb(253,114,12)" fg:x="139" fg:w="4"/><text x="1.0174%" y="511.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_reallocate (4 samples, 0.02%)</title><rect x="0.7950%" y="517" width="0.0221%" height="15" fill="rgb(215,223,47)" fg:x="144" fg:w="4"/><text x="1.0450%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.02%)</title><rect x="0.8005%" y="501" width="0.0166%" height="15" fill="rgb(248,225,23)" fg:x="145" fg:w="3"/><text x="1.0505%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="0.8061%" y="485" width="0.0110%" height="15" fill="rgb(250,108,0)" fg:x="146" fg:w="2"/><text x="1.0561%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="0.8061%" y="469" width="0.0110%" height="15" fill="rgb(228,208,7)" fg:x="146" fg:w="2"/><text x="1.0561%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="0.8281%" y="485" width="0.0110%" height="15" fill="rgb(244,45,10)" fg:x="150" fg:w="2"/><text x="1.0781%" y="495.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (7 samples, 0.04%)</title><rect x="0.8281%" y="501" width="0.0386%" height="15" fill="rgb(207,125,25)" fg:x="150" fg:w="7"/><text x="1.0781%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.03%)</title><rect x="0.8392%" y="485" width="0.0276%" height="15" fill="rgb(210,195,18)" fg:x="152" fg:w="5"/><text x="1.0892%" y="495.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (9 samples, 0.05%)</title><rect x="0.8226%" y="517" width="0.0497%" height="15" fill="rgb(249,80,12)" fg:x="149" fg:w="9"/><text x="1.0726%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.01%)</title><rect x="0.8889%" y="485" width="0.0110%" height="15" fill="rgb(221,65,9)" fg:x="161" fg:w="2"/><text x="1.1389%" y="495.50"></text></g><g><title>libmpfr.6.dylib`mpfr_fmma_aux (7 samples, 0.04%)</title><rect x="0.8723%" y="501" width="0.0386%" height="15" fill="rgb(235,49,36)" fg:x="158" fg:w="7"/><text x="1.1223%" y="511.50"></text></g><g><title>libmpfr.6.dylib`mpfr_fmms (9 samples, 0.05%)</title><rect x="0.8723%" y="517" width="0.0497%" height="15" fill="rgb(225,32,20)" fg:x="158" fg:w="9"/><text x="1.1223%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (2 samples, 0.01%)</title><rect x="0.9109%" y="501" width="0.0110%" height="15" fill="rgb(215,141,46)" fg:x="165" fg:w="2"/><text x="1.1609%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="0.9275%" y="485" width="0.0276%" height="15" fill="rgb(250,160,47)" fg:x="168" fg:w="5"/><text x="1.1775%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.03%)</title><rect x="0.9275%" y="469" width="0.0276%" height="15" fill="rgb(216,222,40)" fg:x="168" fg:w="5"/><text x="1.1775%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.03%)</title><rect x="0.9275%" y="453" width="0.0276%" height="15" fill="rgb(234,217,39)" fg:x="168" fg:w="5"/><text x="1.1775%" y="463.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (6 samples, 0.03%)</title><rect x="0.9275%" y="501" width="0.0331%" height="15" fill="rgb(207,178,40)" fg:x="168" fg:w="6"/><text x="1.1775%" y="511.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (3 samples, 0.02%)</title><rect x="0.9606%" y="485" width="0.0166%" height="15" fill="rgb(221,136,13)" fg:x="174" fg:w="3"/><text x="1.2106%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="0.9606%" y="469" width="0.0166%" height="15" fill="rgb(249,199,10)" fg:x="174" fg:w="3"/><text x="1.2106%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="0.9606%" y="453" width="0.0166%" height="15" fill="rgb(249,222,13)" fg:x="174" fg:w="3"/><text x="1.2106%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="0.9606%" y="437" width="0.0166%" height="15" fill="rgb(244,185,38)" fg:x="174" fg:w="3"/><text x="1.2106%" y="447.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (4 samples, 0.02%)</title><rect x="0.9606%" y="501" width="0.0221%" height="15" fill="rgb(236,202,9)" fg:x="174" fg:w="4"/><text x="1.2106%" y="511.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (2 samples, 0.01%)</title><rect x="0.9882%" y="485" width="0.0110%" height="15" fill="rgb(250,229,37)" fg:x="179" fg:w="2"/><text x="1.2382%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="0.9882%" y="469" width="0.0110%" height="15" fill="rgb(206,174,23)" fg:x="179" fg:w="2"/><text x="1.2382%" y="479.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (3 samples, 0.02%)</title><rect x="0.9882%" y="501" width="0.0166%" height="15" fill="rgb(211,33,43)" fg:x="179" fg:w="3"/><text x="1.2382%" y="511.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_z (16 samples, 0.09%)</title><rect x="0.9220%" y="517" width="0.0883%" height="15" fill="rgb(245,58,50)" fg:x="167" fg:w="16"/><text x="1.1720%" y="527.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (11 samples, 0.06%)</title><rect x="1.0103%" y="501" width="0.0607%" height="15" fill="rgb(244,68,36)" fg:x="183" fg:w="11"/><text x="1.2603%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.06%)</title><rect x="1.0103%" y="485" width="0.0607%" height="15" fill="rgb(232,229,15)" fg:x="183" fg:w="11"/><text x="1.2603%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.05%)</title><rect x="1.0214%" y="469" width="0.0497%" height="15" fill="rgb(254,30,23)" fg:x="185" fg:w="9"/><text x="1.2714%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.04%)</title><rect x="1.0269%" y="453" width="0.0442%" height="15" fill="rgb(235,160,14)" fg:x="186" fg:w="8"/><text x="1.2769%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="1.0545%" y="437" width="0.0166%" height="15" fill="rgb(212,155,44)" fg:x="191" fg:w="3"/><text x="1.3045%" y="447.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (12 samples, 0.07%)</title><rect x="1.0103%" y="517" width="0.0663%" height="15" fill="rgb(226,2,50)" fg:x="183" fg:w="12"/><text x="1.2603%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="1.0821%" y="517" width="0.0221%" height="15" fill="rgb(234,177,6)" fg:x="196" fg:w="4"/><text x="1.3321%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="1.0876%" y="501" width="0.0166%" height="15" fill="rgb(217,24,9)" fg:x="197" fg:w="3"/><text x="1.3376%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="1.0931%" y="485" width="0.0110%" height="15" fill="rgb(220,13,46)" fg:x="198" fg:w="2"/><text x="1.3431%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="1.1042%" y="517" width="0.0110%" height="15" fill="rgb(239,221,27)" fg:x="200" fg:w="2"/><text x="1.3542%" y="527.50"></text></g><g><title>gui`mandelbrot::cache_calculate (78 samples, 0.43%)</title><rect x="0.7232%" y="533" width="0.4306%" height="15" fill="rgb(222,198,25)" fg:x="131" fg:w="78"/><text x="0.9732%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.04%)</title><rect x="1.1152%" y="517" width="0.0386%" height="15" fill="rgb(211,99,13)" fg:x="202" fg:w="7"/><text x="1.3652%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="1.1318%" y="501" width="0.0221%" height="15" fill="rgb(232,111,31)" fg:x="205" fg:w="4"/><text x="1.3818%" y="511.50"></text></g><g><title>gui`&lt;gui::App as eframe::epi::App&gt;::update (81 samples, 0.45%)</title><rect x="0.7122%" y="597" width="0.4472%" height="15" fill="rgb(245,82,37)" fg:x="129" fg:w="81"/><text x="0.9622%" y="607.50"></text></g><g><title>gui`egui::containers::panel::CentralPanel::show (81 samples, 0.45%)</title><rect x="0.7122%" y="581" width="0.4472%" height="15" fill="rgb(227,149,46)" fg:x="129" fg:w="81"/><text x="0.9622%" y="591.50"></text></g><g><title>gui`egui::containers::frame::Frame::show (81 samples, 0.45%)</title><rect x="0.7122%" y="565" width="0.4472%" height="15" fill="rgb(218,36,50)" fg:x="129" fg:w="81"/><text x="0.9622%" y="575.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (81 samples, 0.45%)</title><rect x="0.7122%" y="549" width="0.4472%" height="15" fill="rgb(226,80,48)" fg:x="129" fg:w="81"/><text x="0.9622%" y="559.50"></text></g><g><title>gui`epaint::text::font::Font::preload_common_characters (2 samples, 0.01%)</title><rect x="1.1649%" y="581" width="0.0110%" height="15" fill="rgb(238,224,15)" fg:x="211" fg:w="2"/><text x="1.4149%" y="591.50"></text></g><g><title>gui`epaint::text::font::Font::glyph_info (2 samples, 0.01%)</title><rect x="1.1649%" y="565" width="0.0110%" height="15" fill="rgb(241,136,10)" fg:x="211" fg:w="2"/><text x="1.4149%" y="575.50"></text></g><g><title>gui`epaint::text::font::FontImpl::glyph_info (2 samples, 0.01%)</title><rect x="1.1649%" y="549" width="0.0110%" height="15" fill="rgb(208,32,45)" fg:x="211" fg:w="2"/><text x="1.4149%" y="559.50"></text></g><g><title>gui`ab_glyph::outlined::OutlinedGlyph::draw (2 samples, 0.01%)</title><rect x="1.1649%" y="533" width="0.0110%" height="15" fill="rgb(207,135,9)" fg:x="211" fg:w="2"/><text x="1.4149%" y="543.50"></text></g><g><title>gui`egui::context::Context::begin_frame (7 samples, 0.04%)</title><rect x="1.1594%" y="597" width="0.0386%" height="15" fill="rgb(206,86,44)" fg:x="210" fg:w="7"/><text x="1.4094%" y="607.50"></text></g><g><title>gui`epaint::text::fonts::Fonts::new (4 samples, 0.02%)</title><rect x="1.1760%" y="581" width="0.0221%" height="15" fill="rgb(245,177,15)" fg:x="213" fg:w="4"/><text x="1.4260%" y="591.50"></text></g><g><title>gui`epaint::text::fonts::FontsImpl::new (4 samples, 0.02%)</title><rect x="1.1760%" y="565" width="0.0221%" height="15" fill="rgb(206,64,50)" fg:x="213" fg:w="4"/><text x="1.4260%" y="575.50"></text></g><g><title>gui`epaint::texture_atlas::TextureAtlas::new (4 samples, 0.02%)</title><rect x="1.1760%" y="549" width="0.0221%" height="15" fill="rgb(234,36,40)" fg:x="213" fg:w="4"/><text x="1.4260%" y="559.50"></text></g><g><title>gui`epaint::texture_atlas::TextureAtlas::allocate (4 samples, 0.02%)</title><rect x="1.1760%" y="533" width="0.0221%" height="15" fill="rgb(213,64,8)" fg:x="213" fg:w="4"/><text x="1.4260%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="1.1815%" y="517" width="0.0166%" height="15" fill="rgb(210,75,36)" fg:x="214" fg:w="3"/><text x="1.4315%" y="527.50"></text></g><g><title>gui`eframe::native::epi_integration::EpiIntegration::update (96 samples, 0.53%)</title><rect x="0.7122%" y="613" width="0.5300%" height="15" fill="rgb(229,88,21)" fg:x="129" fg:w="96"/><text x="0.9622%" y="623.50"></text></g><g><title>gui`egui::context::Context::end_frame (8 samples, 0.04%)</title><rect x="1.1980%" y="597" width="0.0442%" height="15" fill="rgb(252,204,47)" fg:x="217" fg:w="8"/><text x="1.4480%" y="607.50"></text></g><g><title>gui`epaint::text::fonts::Fonts::font_image_delta (8 samples, 0.04%)</title><rect x="1.1980%" y="581" width="0.0442%" height="15" fill="rgb(208,77,27)" fg:x="217" fg:w="8"/><text x="1.4480%" y="591.50"></text></g><g><title>gui`epaint::texture_atlas::TextureAtlas::take_delta (8 samples, 0.04%)</title><rect x="1.1980%" y="565" width="0.0442%" height="15" fill="rgb(221,76,26)" fg:x="217" fg:w="8"/><text x="1.4480%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.04%)</title><rect x="1.1980%" y="549" width="0.0442%" height="15" fill="rgb(225,139,18)" fg:x="217" fg:w="8"/><text x="1.4480%" y="559.50"></text></g><g><title>gui`&lt;glow::native::Context as glow::HasContext&gt;::delete_texture (4 samples, 0.02%)</title><rect x="1.2422%" y="597" width="0.0221%" height="15" fill="rgb(230,137,11)" fg:x="225" fg:w="4"/><text x="1.4922%" y="607.50"></text></g><g><title>GLEngine`glDeleteTextures_Exec (4 samples, 0.02%)</title><rect x="1.2422%" y="581" width="0.0221%" height="15" fill="rgb(212,28,1)" fg:x="225" fg:w="4"/><text x="1.4922%" y="591.50"></text></g><g><title>GLEngine`gleUnbindDeleteHashNamesAndObjects (4 samples, 0.02%)</title><rect x="1.2422%" y="565" width="0.0221%" height="15" fill="rgb(248,164,17)" fg:x="225" fg:w="4"/><text x="1.4922%" y="575.50"></text></g><g><title>GLEngine`gleUnbindTextureObject (3 samples, 0.02%)</title><rect x="1.2477%" y="549" width="0.0166%" height="15" fill="rgb(222,171,42)" fg:x="226" fg:w="3"/><text x="1.4977%" y="559.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelSubmitCommands (3 samples, 0.02%)</title><rect x="1.2477%" y="533" width="0.0166%" height="15" fill="rgb(243,84,45)" fg:x="226" fg:w="3"/><text x="1.4977%" y="543.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`IntelCommandBuffer::getNew (3 samples, 0.02%)</title><rect x="1.2477%" y="517" width="0.0166%" height="15" fill="rgb(252,49,23)" fg:x="226" fg:w="3"/><text x="1.4977%" y="527.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (3 samples, 0.02%)</title><rect x="1.2477%" y="501" width="0.0166%" height="15" fill="rgb(215,19,7)" fg:x="226" fg:w="3"/><text x="1.4977%" y="511.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (3 samples, 0.02%)</title><rect x="1.2477%" y="485" width="0.0166%" height="15" fill="rgb(238,81,41)" fg:x="226" fg:w="3"/><text x="1.4977%" y="495.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (3 samples, 0.02%)</title><rect x="1.2477%" y="469" width="0.0166%" height="15" fill="rgb(210,199,37)" fg:x="226" fg:w="3"/><text x="1.4977%" y="479.50"></text></g><g><title>IOKit`IOConnectCallMethod (3 samples, 0.02%)</title><rect x="1.2477%" y="453" width="0.0166%" height="15" fill="rgb(244,192,49)" fg:x="226" fg:w="3"/><text x="1.4977%" y="463.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.02%)</title><rect x="1.2477%" y="437" width="0.0166%" height="15" fill="rgb(226,211,11)" fg:x="226" fg:w="3"/><text x="1.4977%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.02%)</title><rect x="1.2477%" y="421" width="0.0166%" height="15" fill="rgb(236,162,54)" fg:x="226" fg:w="3"/><text x="1.4977%" y="431.50"></text></g><g><title>gui`egui_glow::painter::Painter::paint_primitives (3 samples, 0.02%)</title><rect x="1.2643%" y="597" width="0.0166%" height="15" fill="rgb(220,229,9)" fg:x="229" fg:w="3"/><text x="1.5143%" y="607.50"></text></g><g><title>GLEngine`glDrawElements_GL3Exec (3 samples, 0.02%)</title><rect x="1.2643%" y="581" width="0.0166%" height="15" fill="rgb(250,87,22)" fg:x="229" fg:w="3"/><text x="1.5143%" y="591.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (3 samples, 0.02%)</title><rect x="1.2643%" y="565" width="0.0166%" height="15" fill="rgb(239,43,17)" fg:x="229" fg:w="3"/><text x="1.5143%" y="575.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (3 samples, 0.02%)</title><rect x="1.2643%" y="549" width="0.0166%" height="15" fill="rgb(231,177,25)" fg:x="229" fg:w="3"/><text x="1.5143%" y="559.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`updateDispatch (3 samples, 0.02%)</title><rect x="1.2643%" y="533" width="0.0166%" height="15" fill="rgb(219,179,1)" fg:x="229" fg:w="3"/><text x="1.5143%" y="543.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`gpusLoadCurrentPipelinePrograms (3 samples, 0.02%)</title><rect x="1.2643%" y="517" width="0.0166%" height="15" fill="rgb(238,219,53)" fg:x="229" fg:w="3"/><text x="1.5143%" y="527.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (3 samples, 0.02%)</title><rect x="1.2643%" y="501" width="0.0166%" height="15" fill="rgb(232,167,36)" fg:x="229" fg:w="3"/><text x="1.5143%" y="511.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::IM_Shader::Compile (3 samples, 0.02%)</title><rect x="1.2643%" y="485" width="0.0166%" height="15" fill="rgb(244,19,51)" fg:x="229" fg:w="3"/><text x="1.5143%" y="495.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CompileVertexShaderOpenGL (2 samples, 0.01%)</title><rect x="1.2698%" y="469" width="0.0110%" height="15" fill="rgb(224,6,22)" fg:x="230" fg:w="2"/><text x="1.5198%" y="479.50"></text></g><g><title>gui`epaint::image::fast_round (9 samples, 0.05%)</title><rect x="1.3140%" y="565" width="0.0497%" height="15" fill="rgb(224,145,5)" fg:x="238" fg:w="9"/><text x="1.5640%" y="575.50"></text></g><g><title>gui`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.09%)</title><rect x="1.2808%" y="581" width="0.0939%" height="15" fill="rgb(234,130,49)" fg:x="232" fg:w="17"/><text x="1.5308%" y="591.50"></text></g><g><title>libsystem_m.dylib`floorf (2 samples, 0.01%)</title><rect x="1.3637%" y="565" width="0.0110%" height="15" fill="rgb(254,6,2)" fg:x="247" fg:w="2"/><text x="1.6137%" y="575.50"></text></g><g><title>gui`egui_glow::painter::Painter::upload_texture_srgb (9 samples, 0.05%)</title><rect x="1.3747%" y="581" width="0.0497%" height="15" fill="rgb(208,96,46)" fg:x="249" fg:w="9"/><text x="1.6247%" y="591.50"></text></g><g><title>gui`&lt;glow::native::Context as glow::HasContext&gt;::tex_image_2d (9 samples, 0.05%)</title><rect x="1.3747%" y="565" width="0.0497%" height="15" fill="rgb(239,3,39)" fg:x="249" fg:w="9"/><text x="1.6247%" y="575.50"></text></g><g><title>libGL.dylib`glTexImage2D (9 samples, 0.05%)</title><rect x="1.3747%" y="549" width="0.0497%" height="15" fill="rgb(233,210,1)" fg:x="249" fg:w="9"/><text x="1.6247%" y="559.50"></text></g><g><title>GLEngine`glTexImage2D_Exec (9 samples, 0.05%)</title><rect x="1.3747%" y="533" width="0.0497%" height="15" fill="rgb(244,137,37)" fg:x="249" fg:w="9"/><text x="1.6247%" y="543.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`glrWriteTextureData (9 samples, 0.05%)</title><rect x="1.3747%" y="517" width="0.0497%" height="15" fill="rgb(240,136,2)" fg:x="249" fg:w="9"/><text x="1.6247%" y="527.50"></text></g><g><title>libGLImage.dylib`glgProcessPixelsWithProcessor (9 samples, 0.05%)</title><rect x="1.3747%" y="501" width="0.0497%" height="15" fill="rgb(239,18,37)" fg:x="249" fg:w="9"/><text x="1.6247%" y="511.50"></text></g><g><title>libGLImage.dylib`void glgConvertTo_32&lt;GLGConverter_ABGR8_ARGB8, (GLGMemory)1&gt;(GLGOperationRec const*, GLDPixelModeRec const*) (9 samples, 0.05%)</title><rect x="1.3747%" y="485" width="0.0497%" height="15" fill="rgb(218,185,22)" fg:x="249" fg:w="9"/><text x="1.6247%" y="495.50"></text></g><g><title>gui`egui_glow::painter::Painter::paint_and_update_textures (41 samples, 0.23%)</title><rect x="1.2422%" y="613" width="0.2264%" height="15" fill="rgb(225,218,4)" fg:x="225" fg:w="41"/><text x="1.4922%" y="623.50"></text></g><g><title>gui`egui_glow::painter::Painter::set_texture (34 samples, 0.19%)</title><rect x="1.2808%" y="597" width="0.1877%" height="15" fill="rgb(230,182,32)" fg:x="232" fg:w="34"/><text x="1.5308%" y="607.50"></text></g><g><title>libsystem_m.dylib`0x00007fff2a5c3da0 (8 samples, 0.04%)</title><rect x="1.4244%" y="581" width="0.0442%" height="15" fill="rgb(242,56,43)" fg:x="258" fg:w="8"/><text x="1.6744%" y="591.50"></text></g><g><title>AppKit`-[_NSOpenGLViewBackingLayer display] (147 samples, 0.81%)</title><rect x="0.6625%" y="709" width="0.8116%" height="15" fill="rgb(233,99,24)" fg:x="120" fg:w="147"/><text x="0.9125%" y="719.50"></text></g><g><title>gui`winit::platform_impl::platform::view::draw_rect (147 samples, 0.81%)</title><rect x="0.6625%" y="693" width="0.8116%" height="15" fill="rgb(234,209,42)" fg:x="120" fg:w="147"/><text x="0.9125%" y="703.50"></text></g><g><title>gui`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (147 samples, 0.81%)</title><rect x="0.6625%" y="677" width="0.8116%" height="15" fill="rgb(227,7,12)" fg:x="120" fg:w="147"/><text x="0.9125%" y="687.50"></text></g><g><title>gui`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (147 samples, 0.81%)</title><rect x="0.6625%" y="661" width="0.8116%" height="15" fill="rgb(245,203,43)" fg:x="120" fg:w="147"/><text x="0.9125%" y="671.50"></text></g><g><title>gui`eframe::native::run::run_and_return::_{{closure}} (147 samples, 0.81%)</title><rect x="0.6625%" y="645" width="0.8116%" height="15" fill="rgb(238,205,33)" fg:x="120" fg:w="147"/><text x="0.9125%" y="655.50"></text></g><g><title>gui`&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::paint (147 samples, 0.81%)</title><rect x="0.6625%" y="629" width="0.8116%" height="15" fill="rgb(231,56,7)" fg:x="120" fg:w="147"/><text x="0.9125%" y="639.50"></text></g><g><title>AppKit`-[NSCompositeAppearance uniqueIdentifier] (2 samples, 0.01%)</title><rect x="1.4741%" y="597" width="0.0110%" height="15" fill="rgb(244,186,29)" fg:x="267" fg:w="2"/><text x="1.7241%" y="607.50"></text></g><g><title>Foundation`-[NSArray(NSKeyValueCoding) valueForKeyPath:] (2 samples, 0.01%)</title><rect x="1.4741%" y="581" width="0.0110%" height="15" fill="rgb(234,111,31)" fg:x="267" fg:w="2"/><text x="1.7241%" y="591.50"></text></g><g><title>Foundation`-[NSArray(NSKeyValueCoding) valueForKey:] (2 samples, 0.01%)</title><rect x="1.4741%" y="565" width="0.0110%" height="15" fill="rgb(241,149,10)" fg:x="267" fg:w="2"/><text x="1.7241%" y="575.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueCoding) valueForKey:] (2 samples, 0.01%)</title><rect x="1.4741%" y="549" width="0.0110%" height="15" fill="rgb(249,206,44)" fg:x="267" fg:w="2"/><text x="1.7241%" y="559.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (3 samples, 0.02%)</title><rect x="1.4851%" y="597" width="0.0166%" height="15" fill="rgb(251,153,30)" fg:x="269" fg:w="3"/><text x="1.7351%" y="607.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.02%)</title><rect x="1.4851%" y="581" width="0.0166%" height="15" fill="rgb(239,152,38)" fg:x="269" fg:w="3"/><text x="1.7351%" y="591.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (3 samples, 0.02%)</title><rect x="1.4851%" y="565" width="0.0166%" height="15" fill="rgb(249,139,47)" fg:x="269" fg:w="3"/><text x="1.7351%" y="575.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.02%)</title><rect x="1.4851%" y="549" width="0.0166%" height="15" fill="rgb(244,64,35)" fg:x="269" fg:w="3"/><text x="1.7351%" y="559.50"></text></g><g><title>AppKit`__44-[NSAppearance _drawInRect:context:options:]_block_invoke (3 samples, 0.02%)</title><rect x="1.4851%" y="533" width="0.0166%" height="15" fill="rgb(216,46,15)" fg:x="269" fg:w="3"/><text x="1.7351%" y="543.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.02%)</title><rect x="1.4851%" y="517" width="0.0166%" height="15" fill="rgb(250,74,19)" fg:x="269" fg:w="3"/><text x="1.7351%" y="527.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (3 samples, 0.02%)</title><rect x="1.4851%" y="501" width="0.0166%" height="15" fill="rgb(249,42,33)" fg:x="269" fg:w="3"/><text x="1.7351%" y="511.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (3 samples, 0.02%)</title><rect x="1.4851%" y="485" width="0.0166%" height="15" fill="rgb(242,149,17)" fg:x="269" fg:w="3"/><text x="1.7351%" y="495.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:context:effects:] (3 samples, 0.02%)</title><rect x="1.4851%" y="469" width="0.0166%" height="15" fill="rgb(244,29,21)" fg:x="269" fg:w="3"/><text x="1.7351%" y="479.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:isFlipped:effects:] (3 samples, 0.02%)</title><rect x="1.4851%" y="453" width="0.0166%" height="15" fill="rgb(220,130,37)" fg:x="269" fg:w="3"/><text x="1.7351%" y="463.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:rendition:inFrame:context:alpha:operation:isFocused:isFlipped:effects:] (3 samples, 0.02%)</title><rect x="1.4851%" y="437" width="0.0166%" height="15" fill="rgb(211,67,2)" fg:x="269" fg:w="3"/><text x="1.7351%" y="447.50"></text></g><g><title>CoreUI`DrawOnePartElementFromRenditionWithOperation (3 samples, 0.02%)</title><rect x="1.4851%" y="421" width="0.0166%" height="15" fill="rgb(235,68,52)" fg:x="269" fg:w="3"/><text x="1.7351%" y="431.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (2 samples, 0.01%)</title><rect x="1.4906%" y="405" width="0.0110%" height="15" fill="rgb(246,142,3)" fg:x="270" fg:w="2"/><text x="1.7406%" y="415.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.01%)</title><rect x="1.4906%" y="389" width="0.0110%" height="15" fill="rgb(241,25,7)" fg:x="270" fg:w="2"/><text x="1.7406%" y="399.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.01%)</title><rect x="1.4906%" y="373" width="0.0110%" height="15" fill="rgb(242,119,39)" fg:x="270" fg:w="2"/><text x="1.7406%" y="383.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (2 samples, 0.01%)</title><rect x="1.4906%" y="357" width="0.0110%" height="15" fill="rgb(241,98,45)" fg:x="270" fg:w="2"/><text x="1.7406%" y="367.50"></text></g><g><title>CoreGraphics`RIPImageCacheGetRetained (2 samples, 0.01%)</title><rect x="1.4906%" y="341" width="0.0110%" height="15" fill="rgb(254,28,30)" fg:x="270" fg:w="2"/><text x="1.7406%" y="351.50"></text></g><g><title>CoreGraphics`RIPImageDataInitializeShared (2 samples, 0.01%)</title><rect x="1.4906%" y="325" width="0.0110%" height="15" fill="rgb(241,142,54)" fg:x="270" fg:w="2"/><text x="1.7406%" y="335.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (2 samples, 0.01%)</title><rect x="1.4906%" y="309" width="0.0110%" height="15" fill="rgb(222,85,15)" fg:x="270" fg:w="2"/><text x="1.7406%" y="319.50"></text></g><g><title>CoreGraphics`img_data_lock (2 samples, 0.01%)</title><rect x="1.4906%" y="293" width="0.0110%" height="15" fill="rgb(210,85,47)" fg:x="270" fg:w="2"/><text x="1.7406%" y="303.50"></text></g><g><title>CoreGraphics`img_raw_read (2 samples, 0.01%)</title><rect x="1.4906%" y="277" width="0.0110%" height="15" fill="rgb(224,206,25)" fg:x="270" fg:w="2"/><text x="1.7406%" y="287.50"></text></g><g><title>CoreGraphics`get_chunks_direct (2 samples, 0.01%)</title><rect x="1.4906%" y="261" width="0.0110%" height="15" fill="rgb(243,201,19)" fg:x="270" fg:w="2"/><text x="1.7406%" y="271.50"></text></g><g><title>CoreGraphics`CGDataProviderDirectGetBytesAtPositionInternal (2 samples, 0.01%)</title><rect x="1.4906%" y="245" width="0.0110%" height="15" fill="rgb(236,59,4)" fg:x="270" fg:w="2"/><text x="1.7406%" y="255.50"></text></g><g><title>CoreGraphics`provider_for_destination_get_bytes_at_position_inner (2 samples, 0.01%)</title><rect x="1.4906%" y="229" width="0.0110%" height="15" fill="rgb(254,179,45)" fg:x="270" fg:w="2"/><text x="1.7406%" y="239.50"></text></g><g><title>AppKit`-[NSControl updateLayer] (7 samples, 0.04%)</title><rect x="1.4741%" y="629" width="0.0386%" height="15" fill="rgb(226,14,10)" fg:x="267" fg:w="7"/><text x="1.7241%" y="639.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (7 samples, 0.04%)</title><rect x="1.4741%" y="613" width="0.0386%" height="15" fill="rgb(244,27,41)" fg:x="267" fg:w="7"/><text x="1.7241%" y="623.50"></text></g><g><title>QuartzCore`+[CAPackage packageWithData:type:options:error:] (2 samples, 0.01%)</title><rect x="1.5127%" y="469" width="0.0110%" height="15" fill="rgb(235,35,32)" fg:x="274" fg:w="2"/><text x="1.7627%" y="479.50"></text></g><g><title>QuartzCore`-[CAPackage _initWithData:type:options:error:] (2 samples, 0.01%)</title><rect x="1.5127%" y="453" width="0.0110%" height="15" fill="rgb(218,68,31)" fg:x="274" fg:w="2"/><text x="1.7627%" y="463.50"></text></g><g><title>QuartzCore`-[CAPackage _readFromArchiveData:options:error:] (2 samples, 0.01%)</title><rect x="1.5127%" y="437" width="0.0110%" height="15" fill="rgb(207,120,37)" fg:x="274" fg:w="2"/><text x="1.7627%" y="447.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="421" width="0.0110%" height="15" fill="rgb(227,98,0)" fg:x="274" fg:w="2"/><text x="1.7627%" y="431.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="405" width="0.0110%" height="15" fill="rgb(207,7,3)" fg:x="274" fg:w="2"/><text x="1.7627%" y="415.50"></text></g><g><title>Foundation`_decodeObject (2 samples, 0.01%)</title><rect x="1.5127%" y="389" width="0.0110%" height="15" fill="rgb(206,98,19)" fg:x="274" fg:w="2"/><text x="1.7627%" y="399.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.01%)</title><rect x="1.5127%" y="373" width="0.0110%" height="15" fill="rgb(217,5,26)" fg:x="274" fg:w="2"/><text x="1.7627%" y="383.50"></text></g><g><title>Foundation`-[NSDictionary(NSDictionary) initWithCoder:] (2 samples, 0.01%)</title><rect x="1.5127%" y="357" width="0.0110%" height="15" fill="rgb(235,190,38)" fg:x="274" fg:w="2"/><text x="1.7627%" y="367.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="341" width="0.0110%" height="15" fill="rgb(247,86,24)" fg:x="274" fg:w="2"/><text x="1.7627%" y="351.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.01%)</title><rect x="1.5127%" y="325" width="0.0110%" height="15" fill="rgb(205,101,16)" fg:x="274" fg:w="2"/><text x="1.7627%" y="335.50"></text></g><g><title>QuartzCore`-[CALayer initWithCoder:] (2 samples, 0.01%)</title><rect x="1.5127%" y="309" width="0.0110%" height="15" fill="rgb(246,168,33)" fg:x="274" fg:w="2"/><text x="1.7627%" y="319.50"></text></g><g><title>QuartzCore`CAObject_initWithCoder (2 samples, 0.01%)</title><rect x="1.5127%" y="293" width="0.0110%" height="15" fill="rgb(231,114,1)" fg:x="274" fg:w="2"/><text x="1.7627%" y="303.50"></text></g><g><title>QuartzCore`-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="277" width="0.0110%" height="15" fill="rgb(207,184,53)" fg:x="274" fg:w="2"/><text x="1.7627%" y="287.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="261" width="0.0110%" height="15" fill="rgb(224,95,51)" fg:x="274" fg:w="2"/><text x="1.7627%" y="271.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="245" width="0.0110%" height="15" fill="rgb(212,188,45)" fg:x="274" fg:w="2"/><text x="1.7627%" y="255.50"></text></g><g><title>Foundation`_decodeObject (2 samples, 0.01%)</title><rect x="1.5127%" y="229" width="0.0110%" height="15" fill="rgb(223,154,38)" fg:x="274" fg:w="2"/><text x="1.7627%" y="239.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.01%)</title><rect x="1.5127%" y="213" width="0.0110%" height="15" fill="rgb(251,22,52)" fg:x="274" fg:w="2"/><text x="1.7627%" y="223.50"></text></g><g><title>QuartzCore`-[LKNSArrayCodingProxy initWithCoder:] (2 samples, 0.01%)</title><rect x="1.5127%" y="197" width="0.0110%" height="15" fill="rgb(229,209,22)" fg:x="274" fg:w="2"/><text x="1.7627%" y="207.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectOfClasses:forKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="181" width="0.0110%" height="15" fill="rgb(234,138,34)" fg:x="274" fg:w="2"/><text x="1.7627%" y="191.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver decodeObjectForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="165" width="0.0110%" height="15" fill="rgb(212,95,11)" fg:x="274" fg:w="2"/><text x="1.7627%" y="175.50"></text></g><g><title>Foundation`_decodeObject (2 samples, 0.01%)</title><rect x="1.5127%" y="149" width="0.0110%" height="15" fill="rgb(240,179,47)" fg:x="274" fg:w="2"/><text x="1.7627%" y="159.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.01%)</title><rect x="1.5127%" y="133" width="0.0110%" height="15" fill="rgb(240,163,11)" fg:x="274" fg:w="2"/><text x="1.7627%" y="143.50"></text></g><g><title>Foundation`-[NSArray(NSArray) initWithCoder:] (2 samples, 0.01%)</title><rect x="1.5127%" y="117" width="0.0110%" height="15" fill="rgb(236,37,12)" fg:x="274" fg:w="2"/><text x="1.7627%" y="127.50"></text></g><g><title>Foundation`-[NSKeyedUnarchiver _decodeArrayOfObjectsForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="101" width="0.0110%" height="15" fill="rgb(232,164,16)" fg:x="274" fg:w="2"/><text x="1.7627%" y="111.50"></text></g><g><title>Foundation`_decodeObjectBinary (2 samples, 0.01%)</title><rect x="1.5127%" y="85" width="0.0110%" height="15" fill="rgb(244,205,15)" fg:x="274" fg:w="2"/><text x="1.7627%" y="95.50"></text></g><g><title>QuartzCore`-[CALayer initWithCoder:] (2 samples, 0.01%)</title><rect x="1.5127%" y="69" width="0.0110%" height="15" fill="rgb(223,117,47)" fg:x="274" fg:w="2"/><text x="1.7627%" y="79.50"></text></g><g><title>QuartzCore`CAObject_initWithCoder (2 samples, 0.01%)</title><rect x="1.5127%" y="53" width="0.0110%" height="15" fill="rgb(244,107,35)" fg:x="274" fg:w="2"/><text x="1.7627%" y="63.50"></text></g><g><title>QuartzCore`-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:] (2 samples, 0.01%)</title><rect x="1.5127%" y="37" width="0.0110%" height="15" fill="rgb(205,140,8)" fg:x="274" fg:w="2"/><text x="1.7627%" y="47.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (161 samples, 0.89%)</title><rect x="0.6404%" y="725" width="0.8889%" height="15" fill="rgb(228,84,46)" fg:x="116" fg:w="161"/><text x="0.8904%" y="735.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (10 samples, 0.06%)</title><rect x="1.4741%" y="709" width="0.0552%" height="15" fill="rgb(254,188,9)" fg:x="267" fg:w="10"/><text x="1.7241%" y="719.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (10 samples, 0.06%)</title><rect x="1.4741%" y="693" width="0.0552%" height="15" fill="rgb(206,112,54)" fg:x="267" fg:w="10"/><text x="1.7241%" y="703.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (10 samples, 0.06%)</title><rect x="1.4741%" y="677" width="0.0552%" height="15" fill="rgb(216,84,49)" fg:x="267" fg:w="10"/><text x="1.7241%" y="687.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (10 samples, 0.06%)</title><rect x="1.4741%" y="661" width="0.0552%" height="15" fill="rgb(214,194,35)" fg:x="267" fg:w="10"/><text x="1.7241%" y="671.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (10 samples, 0.06%)</title><rect x="1.4741%" y="645" width="0.0552%" height="15" fill="rgb(249,28,3)" fg:x="267" fg:w="10"/><text x="1.7241%" y="655.50"></text></g><g><title>AppKit`-[NSVisualEffectView updateLayer] (3 samples, 0.02%)</title><rect x="1.5127%" y="629" width="0.0166%" height="15" fill="rgb(222,56,52)" fg:x="274" fg:w="3"/><text x="1.7627%" y="639.50"></text></g><g><title>AppKit`-[NSVisualEffectView _updateMaterialLayer] (3 samples, 0.02%)</title><rect x="1.5127%" y="613" width="0.0166%" height="15" fill="rgb(245,217,50)" fg:x="274" fg:w="3"/><text x="1.7627%" y="623.50"></text></g><g><title>AppKit`makeMaterialLayerWithCoreUIOptions (3 samples, 0.02%)</title><rect x="1.5127%" y="597" width="0.0166%" height="15" fill="rgb(213,201,24)" fg:x="274" fg:w="3"/><text x="1.7627%" y="607.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (3 samples, 0.02%)</title><rect x="1.5127%" y="581" width="0.0166%" height="15" fill="rgb(248,116,28)" fg:x="274" fg:w="3"/><text x="1.7627%" y="591.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.02%)</title><rect x="1.5127%" y="565" width="0.0166%" height="15" fill="rgb(219,72,43)" fg:x="274" fg:w="3"/><text x="1.7627%" y="575.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (3 samples, 0.02%)</title><rect x="1.5127%" y="549" width="0.0166%" height="15" fill="rgb(209,138,14)" fg:x="274" fg:w="3"/><text x="1.7627%" y="559.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (3 samples, 0.02%)</title><rect x="1.5127%" y="533" width="0.0166%" height="15" fill="rgb(222,18,33)" fg:x="274" fg:w="3"/><text x="1.7627%" y="543.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateVisualEffectLayer (3 samples, 0.02%)</title><rect x="1.5127%" y="517" width="0.0166%" height="15" fill="rgb(213,199,7)" fg:x="274" fg:w="3"/><text x="1.7627%" y="527.50"></text></g><g><title>CoreUI`-[CUIThemeFacet updateLayer:effects:] (3 samples, 0.02%)</title><rect x="1.5127%" y="501" width="0.0166%" height="15" fill="rgb(250,110,10)" fg:x="274" fg:w="3"/><text x="1.7627%" y="511.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _makeLayerFromCAPackageData] (3 samples, 0.02%)</title><rect x="1.5127%" y="485" width="0.0166%" height="15" fill="rgb(248,123,6)" fg:x="274" fg:w="3"/><text x="1.7627%" y="495.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (167 samples, 0.92%)</title><rect x="0.6239%" y="741" width="0.9220%" height="15" fill="rgb(206,91,31)" fg:x="113" fg:w="167"/><text x="0.8739%" y="751.50"></text></g><g><title>AppKit`-[NSView _effectiveVibrancyFilter] (2 samples, 0.01%)</title><rect x="1.5569%" y="581" width="0.0110%" height="15" fill="rgb(211,154,13)" fg:x="282" fg:w="2"/><text x="1.8069%" y="591.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.01%)</title><rect x="1.5569%" y="565" width="0.0110%" height="15" fill="rgb(225,148,7)" fg:x="282" fg:w="2"/><text x="1.8069%" y="575.50"></text></g><g><title>AppKit`__34-[NSView _effectiveVibrancyFilter]_block_invoke (2 samples, 0.01%)</title><rect x="1.5569%" y="549" width="0.0110%" height="15" fill="rgb(220,160,43)" fg:x="282" fg:w="2"/><text x="1.8069%" y="559.50"></text></g><g><title>AppKit`-[NSView _vibrancyFilter] (2 samples, 0.01%)</title><rect x="1.5569%" y="533" width="0.0110%" height="15" fill="rgb(213,52,39)" fg:x="282" fg:w="2"/><text x="1.8069%" y="543.50"></text></g><g><title>AppKit`-[NSControl _vibrancyBlendMode] (2 samples, 0.01%)</title><rect x="1.5569%" y="517" width="0.0110%" height="15" fill="rgb(243,137,7)" fg:x="282" fg:w="2"/><text x="1.8069%" y="527.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (3 samples, 0.02%)</title><rect x="1.5569%" y="693" width="0.0166%" height="15" fill="rgb(230,79,13)" fg:x="282" fg:w="3"/><text x="1.8069%" y="703.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (3 samples, 0.02%)</title><rect x="1.5569%" y="677" width="0.0166%" height="15" fill="rgb(247,105,23)" fg:x="282" fg:w="3"/><text x="1.8069%" y="687.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.02%)</title><rect x="1.5569%" y="661" width="0.0166%" height="15" fill="rgb(223,179,41)" fg:x="282" fg:w="3"/><text x="1.8069%" y="671.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.02%)</title><rect x="1.5569%" y="645" width="0.0166%" height="15" fill="rgb(218,9,34)" fg:x="282" fg:w="3"/><text x="1.8069%" y="655.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.02%)</title><rect x="1.5569%" y="629" width="0.0166%" height="15" fill="rgb(222,106,8)" fg:x="282" fg:w="3"/><text x="1.8069%" y="639.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.02%)</title><rect x="1.5569%" y="613" width="0.0166%" height="15" fill="rgb(211,220,0)" fg:x="282" fg:w="3"/><text x="1.8069%" y="623.50"></text></g><g><title>AppKit`-[NSView _updateVibrancy] (3 samples, 0.02%)</title><rect x="1.5569%" y="597" width="0.0166%" height="15" fill="rgb(229,52,16)" fg:x="282" fg:w="3"/><text x="1.8069%" y="607.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (2 samples, 0.01%)</title><rect x="1.5845%" y="629" width="0.0110%" height="15" fill="rgb(212,155,18)" fg:x="287" fg:w="2"/><text x="1.8345%" y="639.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (2 samples, 0.01%)</title><rect x="1.5845%" y="613" width="0.0110%" height="15" fill="rgb(242,21,14)" fg:x="287" fg:w="2"/><text x="1.8345%" y="623.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (4 samples, 0.02%)</title><rect x="1.5790%" y="661" width="0.0221%" height="15" fill="rgb(222,19,48)" fg:x="286" fg:w="4"/><text x="1.8290%" y="671.50"></text></g><g><title>AppKit`-[NSView _updateTrackingAreasWithInvalidCursorRects:] (4 samples, 0.02%)</title><rect x="1.5790%" y="645" width="0.0221%" height="15" fill="rgb(232,45,27)" fg:x="286" fg:w="4"/><text x="1.8290%" y="655.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (9 samples, 0.05%)</title><rect x="1.5569%" y="725" width="0.0497%" height="15" fill="rgb(249,103,42)" fg:x="282" fg:w="9"/><text x="1.8069%" y="735.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (9 samples, 0.05%)</title><rect x="1.5569%" y="709" width="0.0497%" height="15" fill="rgb(246,81,33)" fg:x="282" fg:w="9"/><text x="1.8069%" y="719.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (5 samples, 0.03%)</title><rect x="1.5790%" y="693" width="0.0276%" height="15" fill="rgb(252,33,42)" fg:x="286" fg:w="5"/><text x="1.8290%" y="703.50"></text></g><g><title>AppKit`_NSWindowDisplayCycleUpdateStructuralRegions (5 samples, 0.03%)</title><rect x="1.5790%" y="677" width="0.0276%" height="15" fill="rgb(209,212,41)" fg:x="286" fg:w="5"/><text x="1.8290%" y="687.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (179 samples, 0.99%)</title><rect x="0.6239%" y="773" width="0.9882%" height="15" fill="rgb(207,154,6)" fg:x="113" fg:w="179"/><text x="0.8739%" y="783.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (179 samples, 0.99%)</title><rect x="0.6239%" y="757" width="0.9882%" height="15" fill="rgb(223,64,47)" fg:x="113" fg:w="179"/><text x="0.8739%" y="767.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (11 samples, 0.06%)</title><rect x="1.5514%" y="741" width="0.0607%" height="15" fill="rgb(211,161,38)" fg:x="281" fg:w="11"/><text x="1.8014%" y="751.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (185 samples, 1.02%)</title><rect x="0.5963%" y="789" width="1.0214%" height="15" fill="rgb(219,138,40)" fg:x="108" fg:w="185"/><text x="0.8463%" y="799.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelSubmitCommands (4 samples, 0.02%)</title><rect x="1.6231%" y="581" width="0.0221%" height="15" fill="rgb(241,228,46)" fg:x="294" fg:w="4"/><text x="1.8731%" y="591.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`IntelCommandBuffer::getNew (4 samples, 0.02%)</title><rect x="1.6231%" y="565" width="0.0221%" height="15" fill="rgb(223,209,38)" fg:x="294" fg:w="4"/><text x="1.8731%" y="575.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (4 samples, 0.02%)</title><rect x="1.6231%" y="549" width="0.0221%" height="15" fill="rgb(236,164,45)" fg:x="294" fg:w="4"/><text x="1.8731%" y="559.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (4 samples, 0.02%)</title><rect x="1.6231%" y="533" width="0.0221%" height="15" fill="rgb(231,15,5)" fg:x="294" fg:w="4"/><text x="1.8731%" y="543.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (4 samples, 0.02%)</title><rect x="1.6231%" y="517" width="0.0221%" height="15" fill="rgb(252,35,15)" fg:x="294" fg:w="4"/><text x="1.8731%" y="527.50"></text></g><g><title>IOKit`IOConnectCallMethod (4 samples, 0.02%)</title><rect x="1.6231%" y="501" width="0.0221%" height="15" fill="rgb(248,181,18)" fg:x="294" fg:w="4"/><text x="1.8731%" y="511.50"></text></g><g><title>IOKit`io_connect_method (4 samples, 0.02%)</title><rect x="1.6231%" y="485" width="0.0221%" height="15" fill="rgb(233,39,42)" fg:x="294" fg:w="4"/><text x="1.8731%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (4 samples, 0.02%)</title><rect x="1.6231%" y="469" width="0.0221%" height="15" fill="rgb(238,110,33)" fg:x="294" fg:w="4"/><text x="1.8731%" y="479.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (2 samples, 0.01%)</title><rect x="1.6452%" y="581" width="0.0110%" height="15" fill="rgb(233,195,10)" fg:x="298" fg:w="2"/><text x="1.8952%" y="591.50"></text></g><g><title>OpenGL`CGLGetParameter (2 samples, 0.01%)</title><rect x="1.6563%" y="581" width="0.0110%" height="15" fill="rgb(254,105,3)" fg:x="300" fg:w="2"/><text x="1.9063%" y="591.50"></text></g><g><title>OpenGL`GLCGetParameter (2 samples, 0.01%)</title><rect x="1.6563%" y="565" width="0.0110%" height="15" fill="rgb(221,225,9)" fg:x="300" fg:w="2"/><text x="1.9063%" y="575.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (10 samples, 0.06%)</title><rect x="1.6176%" y="597" width="0.0552%" height="15" fill="rgb(224,227,45)" fg:x="293" fg:w="10"/><text x="1.8676%" y="607.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (2 samples, 0.01%)</title><rect x="1.6839%" y="597" width="0.0110%" height="15" fill="rgb(229,198,43)" fg:x="305" fg:w="2"/><text x="1.9339%" y="607.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (2 samples, 0.01%)</title><rect x="1.6839%" y="581" width="0.0110%" height="15" fill="rgb(206,209,35)" fg:x="305" fg:w="2"/><text x="1.9339%" y="591.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (15 samples, 0.08%)</title><rect x="1.6176%" y="629" width="0.0828%" height="15" fill="rgb(245,195,53)" fg:x="293" fg:w="15"/><text x="1.8676%" y="639.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (15 samples, 0.08%)</title><rect x="1.6176%" y="613" width="0.0828%" height="15" fill="rgb(240,92,26)" fg:x="293" fg:w="15"/><text x="1.8676%" y="623.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (17 samples, 0.09%)</title><rect x="1.6176%" y="677" width="0.0939%" height="15" fill="rgb(207,40,23)" fg:x="293" fg:w="17"/><text x="1.8676%" y="687.50"></text></g><g><title>OpenGL`CGLFlushDrawable (17 samples, 0.09%)</title><rect x="1.6176%" y="661" width="0.0939%" height="15" fill="rgb(223,111,35)" fg:x="293" fg:w="17"/><text x="1.8676%" y="671.50"></text></g><g><title>GLEngine`glSwap_Exec (17 samples, 0.09%)</title><rect x="1.6176%" y="645" width="0.0939%" height="15" fill="rgb(229,147,28)" fg:x="293" fg:w="17"/><text x="1.8676%" y="655.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`gldPresentFramebufferData (2 samples, 0.01%)</title><rect x="1.7004%" y="629" width="0.0110%" height="15" fill="rgb(211,29,28)" fg:x="308" fg:w="2"/><text x="1.9504%" y="639.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelSubmitCommands (2 samples, 0.01%)</title><rect x="1.7004%" y="613" width="0.0110%" height="15" fill="rgb(228,72,33)" fg:x="308" fg:w="2"/><text x="1.9504%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`IntelCommandBuffer::getNew (2 samples, 0.01%)</title><rect x="1.7004%" y="597" width="0.0110%" height="15" fill="rgb(205,214,31)" fg:x="308" fg:w="2"/><text x="1.9504%" y="607.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (2 samples, 0.01%)</title><rect x="1.7004%" y="581" width="0.0110%" height="15" fill="rgb(224,111,15)" fg:x="308" fg:w="2"/><text x="1.9504%" y="591.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (2 samples, 0.01%)</title><rect x="1.7004%" y="565" width="0.0110%" height="15" fill="rgb(253,21,26)" fg:x="308" fg:w="2"/><text x="1.9504%" y="575.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (2 samples, 0.01%)</title><rect x="1.7004%" y="549" width="0.0110%" height="15" fill="rgb(245,139,43)" fg:x="308" fg:w="2"/><text x="1.9504%" y="559.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.01%)</title><rect x="1.7004%" y="533" width="0.0110%" height="15" fill="rgb(252,170,7)" fg:x="308" fg:w="2"/><text x="1.9504%" y="543.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.01%)</title><rect x="1.7004%" y="517" width="0.0110%" height="15" fill="rgb(231,118,14)" fg:x="308" fg:w="2"/><text x="1.9504%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.01%)</title><rect x="1.7004%" y="501" width="0.0110%" height="15" fill="rgb(238,83,0)" fg:x="308" fg:w="2"/><text x="1.9504%" y="511.50"></text></g><g><title>gui`&lt;mandelbrot::Linspace as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.7115%" y="597" width="0.0110%" height="15" fill="rgb(221,39,39)" fg:x="310" fg:w="2"/><text x="1.9615%" y="607.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_clear (2 samples, 0.01%)</title><rect x="1.7280%" y="597" width="0.0110%" height="15" fill="rgb(222,119,46)" fg:x="313" fg:w="2"/><text x="1.9780%" y="607.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_get_z (2 samples, 0.01%)</title><rect x="1.7391%" y="597" width="0.0110%" height="15" fill="rgb(222,165,49)" fg:x="315" fg:w="2"/><text x="1.9891%" y="607.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_init2 (2 samples, 0.01%)</title><rect x="1.7501%" y="597" width="0.0110%" height="15" fill="rgb(219,113,52)" fg:x="317" fg:w="2"/><text x="2.0001%" y="607.50"></text></g><g><title>gui`__rdl_alloc (5 samples, 0.03%)</title><rect x="1.7612%" y="597" width="0.0276%" height="15" fill="rgb(214,7,15)" fg:x="319" fg:w="5"/><text x="2.0112%" y="607.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.01%)</title><rect x="1.7943%" y="485" width="0.0110%" height="15" fill="rgb(235,32,4)" fg:x="325" fg:w="2"/><text x="2.0443%" y="495.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.01%)</title><rect x="1.7943%" y="469" width="0.0110%" height="15" fill="rgb(238,90,54)" fg:x="325" fg:w="2"/><text x="2.0443%" y="479.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.02%)</title><rect x="1.7888%" y="549" width="0.0221%" height="15" fill="rgb(213,208,19)" fg:x="324" fg:w="4"/><text x="2.0388%" y="559.50"></text></g><g><title>gui`egui::grid::Grid::show_dyn (3 samples, 0.02%)</title><rect x="1.7943%" y="533" width="0.0166%" height="15" fill="rgb(233,156,4)" fg:x="325" fg:w="3"/><text x="2.0443%" y="543.50"></text></g><g><title>gui`egui::ui::Ui::allocate_ui_at_rect (3 samples, 0.02%)</title><rect x="1.7943%" y="517" width="0.0166%" height="15" fill="rgb(207,194,5)" fg:x="325" fg:w="3"/><text x="2.0443%" y="527.50"></text></g><g><title>gui`egui::ui::Ui::horizontal_with_main_wrap_dyn (3 samples, 0.02%)</title><rect x="1.7943%" y="501" width="0.0166%" height="15" fill="rgb(206,111,30)" fg:x="325" fg:w="3"/><text x="2.0443%" y="511.50"></text></g><g><title>gui`egui::ui::Ui::horizontal_with_main_wrap_dyn (5 samples, 0.03%)</title><rect x="1.7888%" y="597" width="0.0276%" height="15" fill="rgb(243,70,54)" fg:x="324" fg:w="5"/><text x="2.0388%" y="607.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.03%)</title><rect x="1.7888%" y="581" width="0.0276%" height="15" fill="rgb(242,28,8)" fg:x="324" fg:w="5"/><text x="2.0388%" y="591.50"></text></g><g><title>gui`egui::ui::Ui::with_layout_dyn (5 samples, 0.03%)</title><rect x="1.7888%" y="565" width="0.0276%" height="15" fill="rgb(219,106,18)" fg:x="324" fg:w="5"/><text x="2.0388%" y="575.50"></text></g><g><title>gui`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="1.8661%" y="565" width="0.0331%" height="15" fill="rgb(244,222,10)" fg:x="338" fg:w="6"/><text x="2.1161%" y="575.50"></text></g><g><title>gui`epaint::color::Color32::from_rgba_unmultiplied (6 samples, 0.03%)</title><rect x="1.8661%" y="549" width="0.0331%" height="15" fill="rgb(236,179,52)" fg:x="338" fg:w="6"/><text x="2.1161%" y="559.50"></text></g><g><title>gui`epaint::image::ColorImage::from_rgba_unmultiplied (7 samples, 0.04%)</title><rect x="1.8661%" y="581" width="0.0386%" height="15" fill="rgb(213,23,39)" fg:x="338" fg:w="7"/><text x="2.1161%" y="591.50"></text></g><g><title>gui`gui::render_int (17 samples, 0.09%)</title><rect x="1.8164%" y="597" width="0.0939%" height="15" fill="rgb(238,48,10)" fg:x="329" fg:w="17"/><text x="2.0664%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.08%)</title><rect x="2.5562%" y="565" width="0.0828%" height="15" fill="rgb(251,196,23)" fg:x="463" fg:w="15"/><text x="2.8062%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmpn_lshift (3 samples, 0.02%)</title><rect x="2.6390%" y="565" width="0.0166%" height="15" fill="rgb(250,152,24)" fg:x="478" fg:w="3"/><text x="2.8890%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmpn_mul_1 (5 samples, 0.03%)</title><rect x="2.6556%" y="565" width="0.0276%" height="15" fill="rgb(209,150,17)" fg:x="481" fg:w="5"/><text x="2.9056%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add (8 samples, 0.04%)</title><rect x="2.6832%" y="565" width="0.0442%" height="15" fill="rgb(234,202,34)" fg:x="486" fg:w="8"/><text x="2.9332%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_greater_p (12 samples, 0.07%)</title><rect x="2.7328%" y="565" width="0.0663%" height="15" fill="rgb(253,148,53)" fg:x="495" fg:w="12"/><text x="2.9828%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_cmp3 (8 samples, 0.04%)</title><rect x="2.7549%" y="549" width="0.0442%" height="15" fill="rgb(218,129,16)" fg:x="499" fg:w="8"/><text x="3.0049%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (15 samples, 0.08%)</title><rect x="3.1027%" y="485" width="0.0828%" height="15" fill="rgb(216,85,19)" fg:x="562" fg:w="15"/><text x="3.3527%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.01%)</title><rect x="3.1856%" y="485" width="0.0110%" height="15" fill="rgb(235,228,7)" fg:x="577" fg:w="2"/><text x="3.4356%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.34%)</title><rect x="2.8764%" y="533" width="0.3368%" height="15" fill="rgb(245,175,0)" fg:x="521" fg:w="61"/><text x="3.1264%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (51 samples, 0.28%)</title><rect x="2.9316%" y="517" width="0.2816%" height="15" fill="rgb(208,168,36)" fg:x="531" fg:w="51"/><text x="3.1816%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.27%)</title><rect x="2.9482%" y="501" width="0.2650%" height="15" fill="rgb(246,171,24)" fg:x="534" fg:w="48"/><text x="3.1982%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (2 samples, 0.01%)</title><rect x="3.2021%" y="485" width="0.0110%" height="15" fill="rgb(215,142,24)" fg:x="580" fg:w="2"/><text x="3.4521%" y="495.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (65 samples, 0.36%)</title><rect x="2.8653%" y="549" width="0.3589%" height="15" fill="rgb(250,187,7)" fg:x="519" fg:w="65"/><text x="3.1153%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="3.2132%" y="533" width="0.0110%" height="15" fill="rgb(228,66,33)" fg:x="582" fg:w="2"/><text x="3.4632%" y="543.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (3 samples, 0.02%)</title><rect x="3.2242%" y="549" width="0.0166%" height="15" fill="rgb(234,215,21)" fg:x="584" fg:w="3"/><text x="3.4742%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (4 samples, 0.02%)</title><rect x="3.2408%" y="549" width="0.0221%" height="15" fill="rgb(222,191,20)" fg:x="587" fg:w="4"/><text x="3.4908%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (86 samples, 0.47%)</title><rect x="2.7991%" y="565" width="0.4748%" height="15" fill="rgb(245,79,54)" fg:x="507" fg:w="86"/><text x="3.0491%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="3.2628%" y="549" width="0.0110%" height="15" fill="rgb(240,10,37)" fg:x="591" fg:w="2"/><text x="3.5128%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_ui (39 samples, 0.22%)</title><rect x="3.2794%" y="565" width="0.2153%" height="15" fill="rgb(214,192,32)" fg:x="594" fg:w="39"/><text x="3.5294%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub1sp (30 samples, 0.17%)</title><rect x="3.4947%" y="565" width="0.1656%" height="15" fill="rgb(209,36,54)" fg:x="633" fg:w="30"/><text x="3.7447%" y="575.50"></text></g><g><title>gui`&lt;mandelbrot::Linspace as core::iter::traits::iterator::Iterator&gt;::next (213 samples, 1.18%)</title><rect x="2.4899%" y="581" width="1.1760%" height="15" fill="rgb(220,10,11)" fg:x="451" fg:w="213"/><text x="2.7399%" y="591.50"></text></g><g><title>gui`mandelbrot::linspace (3 samples, 0.02%)</title><rect x="3.6659%" y="581" width="0.0166%" height="15" fill="rgb(221,106,17)" fg:x="664" fg:w="3"/><text x="3.9159%" y="591.50"></text></g><g><title>libmpfr.6.dylib`mpfr_ui_div (2 samples, 0.01%)</title><rect x="3.6714%" y="565" width="0.0110%" height="15" fill="rgb(251,142,44)" fg:x="665" fg:w="2"/><text x="3.9214%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_div (2 samples, 0.01%)</title><rect x="3.6714%" y="549" width="0.0110%" height="15" fill="rgb(238,13,15)" fg:x="665" fg:w="2"/><text x="3.9214%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_create_slow (3 samples, 0.02%)</title><rect x="4.0855%" y="517" width="0.0166%" height="15" fill="rgb(208,107,27)" fg:x="740" fg:w="3"/><text x="4.3355%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_os_semaphore_create (3 samples, 0.02%)</title><rect x="4.0855%" y="501" width="0.0166%" height="15" fill="rgb(205,136,37)" fg:x="740" fg:w="3"/><text x="4.3355%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_create (3 samples, 0.02%)</title><rect x="4.0855%" y="485" width="0.0166%" height="15" fill="rgb(250,205,27)" fg:x="740" fg:w="3"/><text x="4.3355%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.02%)</title><rect x="4.0855%" y="469" width="0.0166%" height="15" fill="rgb(210,80,43)" fg:x="740" fg:w="3"/><text x="4.3355%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (93 samples, 0.51%)</title><rect x="4.0744%" y="533" width="0.5134%" height="15" fill="rgb(247,160,36)" fg:x="738" fg:w="93"/><text x="4.3244%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (87 samples, 0.48%)</title><rect x="4.1075%" y="517" width="0.4803%" height="15" fill="rgb(234,13,49)" fg:x="744" fg:w="87"/><text x="4.3575%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.01%)</title><rect x="4.5879%" y="533" width="0.0110%" height="15" fill="rgb(234,122,0)" fg:x="831" fg:w="2"/><text x="4.8379%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="4.5879%" y="517" width="0.0110%" height="15" fill="rgb(207,146,38)" fg:x="831" fg:w="2"/><text x="4.8379%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (22 samples, 0.12%)</title><rect x="4.5989%" y="533" width="0.1215%" height="15" fill="rgb(207,177,25)" fg:x="833" fg:w="22"/><text x="4.8489%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (22 samples, 0.12%)</title><rect x="4.5989%" y="517" width="0.1215%" height="15" fill="rgb(211,178,42)" fg:x="833" fg:w="22"/><text x="4.8489%" y="527.50"></text></g><g><title>gui`std::sync::mpmc::waker::SyncWaker::notify (132 samples, 0.73%)</title><rect x="4.0027%" y="549" width="0.7288%" height="15" fill="rgb(230,69,54)" fg:x="725" fg:w="132"/><text x="4.2527%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="4.7204%" y="533" width="0.0110%" height="15" fill="rgb(214,135,41)" fg:x="855" fg:w="2"/><text x="4.9704%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (2 samples, 0.01%)</title><rect x="4.7314%" y="549" width="0.0110%" height="15" fill="rgb(237,67,25)" fg:x="857" fg:w="2"/><text x="4.9814%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="4.7480%" y="549" width="0.0221%" height="15" fill="rgb(222,189,50)" fg:x="860" fg:w="4"/><text x="4.9980%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="4.7535%" y="533" width="0.0166%" height="15" fill="rgb(245,148,34)" fg:x="861" fg:w="3"/><text x="5.0035%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="4.7590%" y="517" width="0.0110%" height="15" fill="rgb(222,29,6)" fg:x="862" fg:w="2"/><text x="5.0090%" y="527.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::send (194 samples, 1.07%)</title><rect x="3.7100%" y="565" width="1.0711%" height="15" fill="rgb(221,189,43)" fg:x="672" fg:w="194"/><text x="3.9600%" y="575.50"></text></g><g><title>gui`std::sync::mpmc::Sender&lt;T&gt;::send (202 samples, 1.12%)</title><rect x="3.6824%" y="581" width="1.1152%" height="15" fill="rgb(207,36,27)" fg:x="667" fg:w="202"/><text x="3.9324%" y="591.50"></text></g><g><title>gui`std::sync::mpmc::waker::SyncWaker::notify (2 samples, 0.01%)</title><rect x="4.7866%" y="565" width="0.0110%" height="15" fill="rgb(217,90,24)" fg:x="867" fg:w="2"/><text x="5.0366%" y="575.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::recv (26 samples, 0.14%)</title><rect x="4.7977%" y="581" width="0.1435%" height="15" fill="rgb(224,66,35)" fg:x="869" fg:w="26"/><text x="5.0477%" y="591.50"></text></g><g><title>gui`std::sync::mpmc::utils::Backoff::new (2 samples, 0.01%)</title><rect x="4.9467%" y="581" width="0.0110%" height="15" fill="rgb(221,13,50)" fg:x="896" fg:w="2"/><text x="5.1967%" y="591.50"></text></g><g><title>gui`threadpool::ThreadPool::join (2 samples, 0.01%)</title><rect x="4.9578%" y="581" width="0.0110%" height="15" fill="rgb(236,68,49)" fg:x="898" fg:w="2"/><text x="5.2078%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (3 samples, 0.02%)</title><rect x="4.9688%" y="501" width="0.0166%" height="15" fill="rgb(229,146,28)" fg:x="900" fg:w="3"/><text x="5.2188%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (2 samples, 0.01%)</title><rect x="4.9854%" y="485" width="0.0110%" height="15" fill="rgb(225,31,38)" fg:x="903" fg:w="2"/><text x="5.2354%" y="495.50"></text></g><g><title>gui`std::thread::Builder::spawn (6 samples, 0.03%)</title><rect x="4.9688%" y="533" width="0.0331%" height="15" fill="rgb(250,208,3)" fg:x="900" fg:w="6"/><text x="5.2188%" y="543.50"></text></g><g><title>gui`std::sys::unix::thread::Thread::new (6 samples, 0.03%)</title><rect x="4.9688%" y="517" width="0.0331%" height="15" fill="rgb(246,54,23)" fg:x="900" fg:w="6"/><text x="5.2188%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_create (3 samples, 0.02%)</title><rect x="4.9854%" y="501" width="0.0166%" height="15" fill="rgb(243,76,11)" fg:x="903" fg:w="3"/><text x="5.2354%" y="511.50"></text></g><g><title>gui`threadpool::ThreadPool::new (7 samples, 0.04%)</title><rect x="4.9688%" y="581" width="0.0386%" height="15" fill="rgb(245,21,50)" fg:x="900" fg:w="7"/><text x="5.2188%" y="591.50"></text></g><g><title>gui`threadpool::Builder::build (7 samples, 0.04%)</title><rect x="4.9688%" y="565" width="0.0386%" height="15" fill="rgb(228,9,43)" fg:x="900" fg:w="7"/><text x="5.2188%" y="575.50"></text></g><g><title>gui`threadpool::spawn_in_pool (7 samples, 0.04%)</title><rect x="4.9688%" y="549" width="0.0386%" height="15" fill="rgb(208,100,47)" fg:x="900" fg:w="7"/><text x="5.2188%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.13%)</title><rect x="5.0075%" y="581" width="0.1270%" height="15" fill="rgb(232,26,8)" fg:x="907" fg:w="23"/><text x="5.2575%" y="591.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (2 samples, 0.01%)</title><rect x="5.1400%" y="581" width="0.0110%" height="15" fill="rgb(216,166,38)" fg:x="931" fg:w="2"/><text x="5.3900%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="5.1400%" y="565" width="0.0110%" height="15" fill="rgb(251,202,51)" fg:x="931" fg:w="2"/><text x="5.3900%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="5.1400%" y="549" width="0.0110%" height="15" fill="rgb(254,216,34)" fg:x="931" fg:w="2"/><text x="5.3900%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="5.1400%" y="533" width="0.0110%" height="15" fill="rgb(251,32,27)" fg:x="931" fg:w="2"/><text x="5.3900%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.02%)</title><rect x="5.1896%" y="565" width="0.0166%" height="15" fill="rgb(208,127,28)" fg:x="940" fg:w="3"/><text x="5.4396%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (6 samples, 0.03%)</title><rect x="5.3221%" y="549" width="0.0331%" height="15" fill="rgb(224,137,22)" fg:x="964" fg:w="6"/><text x="5.5721%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (4 samples, 0.02%)</title><rect x="5.4491%" y="533" width="0.0221%" height="15" fill="rgb(254,70,32)" fg:x="987" fg:w="4"/><text x="5.6991%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.12%)</title><rect x="5.5430%" y="517" width="0.1215%" height="15" fill="rgb(229,75,37)" fg:x="1004" fg:w="22"/><text x="5.7930%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.10%)</title><rect x="5.5595%" y="501" width="0.1049%" height="15" fill="rgb(252,64,23)" fg:x="1007" fg:w="19"/><text x="5.8095%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (59 samples, 0.33%)</title><rect x="5.3553%" y="549" width="0.3257%" height="15" fill="rgb(232,162,48)" fg:x="970" fg:w="59"/><text x="5.6053%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (38 samples, 0.21%)</title><rect x="5.4712%" y="533" width="0.2098%" height="15" fill="rgb(246,160,12)" fg:x="991" fg:w="38"/><text x="5.7212%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="5.6644%" y="517" width="0.0166%" height="15" fill="rgb(247,166,0)" fg:x="1026" fg:w="3"/><text x="5.9144%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="5.6810%" y="549" width="0.0110%" height="15" fill="rgb(249,219,21)" fg:x="1029" fg:w="2"/><text x="5.9310%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.15%)</title><rect x="5.6920%" y="549" width="0.1491%" height="15" fill="rgb(205,209,3)" fg:x="1031" fg:w="27"/><text x="5.9420%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.13%)</title><rect x="5.7086%" y="533" width="0.1325%" height="15" fill="rgb(243,44,1)" fg:x="1034" fg:w="24"/><text x="5.9586%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`realloc (116 samples, 0.64%)</title><rect x="5.2062%" y="565" width="0.6404%" height="15" fill="rgb(206,159,16)" fg:x="943" fg:w="116"/><text x="5.4562%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_reallocate (130 samples, 0.72%)</title><rect x="5.1510%" y="581" width="0.7177%" height="15" fill="rgb(244,77,30)" fg:x="933" fg:w="130"/><text x="5.4010%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.02%)</title><rect x="5.8466%" y="565" width="0.0221%" height="15" fill="rgb(218,69,12)" fg:x="1059" fg:w="4"/><text x="6.0966%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmpz_mul_2exp (9 samples, 0.05%)</title><rect x="5.8687%" y="581" width="0.0497%" height="15" fill="rgb(212,87,7)" fg:x="1063" fg:w="9"/><text x="6.1187%" y="591.50"></text></g><g><title>libgmp.10.dylib`__gmpz_realloc (11 samples, 0.06%)</title><rect x="5.9184%" y="581" width="0.0607%" height="15" fill="rgb(245,114,25)" fg:x="1072" fg:w="11"/><text x="6.1684%" y="591.50"></text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (3 samples, 0.02%)</title><rect x="5.9957%" y="581" width="0.0166%" height="15" fill="rgb(210,61,42)" fg:x="1086" fg:w="3"/><text x="6.2457%" y="591.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_free (2 samples, 0.01%)</title><rect x="6.0675%" y="565" width="0.0110%" height="15" fill="rgb(211,52,33)" fg:x="1099" fg:w="2"/><text x="6.3175%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (10 samples, 0.06%)</title><rect x="6.0785%" y="565" width="0.0552%" height="15" fill="rgb(234,58,33)" fg:x="1101" fg:w="10"/><text x="6.3285%" y="575.50"></text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$__gmp_get_memory_functions (2 samples, 0.01%)</title><rect x="6.1337%" y="565" width="0.0110%" height="15" fill="rgb(220,115,36)" fg:x="1111" fg:w="2"/><text x="6.3837%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (24 samples, 0.13%)</title><rect x="6.2000%" y="549" width="0.1325%" height="15" fill="rgb(243,153,54)" fg:x="1123" fg:w="24"/><text x="6.4500%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (53 samples, 0.29%)</title><rect x="6.4926%" y="533" width="0.2926%" height="15" fill="rgb(251,47,18)" fg:x="1176" fg:w="53"/><text x="6.7426%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (49 samples, 0.27%)</title><rect x="6.5147%" y="517" width="0.2705%" height="15" fill="rgb(242,102,42)" fg:x="1180" fg:w="49"/><text x="6.7647%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (84 samples, 0.46%)</title><rect x="6.3325%" y="549" width="0.4638%" height="15" fill="rgb(234,31,38)" fg:x="1147" fg:w="84"/><text x="6.5825%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="6.7852%" y="533" width="0.0110%" height="15" fill="rgb(221,117,51)" fg:x="1229" fg:w="2"/><text x="7.0352%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (32 samples, 0.18%)</title><rect x="7.2103%" y="533" width="0.1767%" height="15" fill="rgb(212,20,18)" fg:x="1306" fg:w="32"/><text x="7.4603%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (52 samples, 0.29%)</title><rect x="8.1378%" y="517" width="0.2871%" height="15" fill="rgb(245,133,36)" fg:x="1474" fg:w="52"/><text x="8.3878%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (225 samples, 1.24%)</title><rect x="7.3925%" y="533" width="1.2422%" height="15" fill="rgb(212,6,19)" fg:x="1339" fg:w="225"/><text x="7.6425%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (38 samples, 0.21%)</title><rect x="8.4249%" y="517" width="0.2098%" height="15" fill="rgb(218,1,36)" fg:x="1526" fg:w="38"/><text x="8.6749%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (339 samples, 1.87%)</title><rect x="6.7962%" y="549" width="1.8716%" height="15" fill="rgb(246,84,54)" fg:x="1231" fg:w="339"/><text x="7.0462%" y="559.50">l..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (6 samples, 0.03%)</title><rect x="8.6347%" y="533" width="0.0331%" height="15" fill="rgb(242,110,6)" fg:x="1564" fg:w="6"/><text x="8.8847%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.04%)</title><rect x="8.6678%" y="549" width="0.0386%" height="15" fill="rgb(214,47,5)" fg:x="1570" fg:w="7"/><text x="8.9178%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="8.7065%" y="549" width="0.0166%" height="15" fill="rgb(218,159,25)" fg:x="1577" fg:w="3"/><text x="8.9565%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (472 samples, 2.61%)</title><rect x="6.1448%" y="565" width="2.6059%" height="15" fill="rgb(215,211,28)" fg:x="1113" fg:w="472"/><text x="6.3948%" y="575.50">li..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (4 samples, 0.02%)</title><rect x="8.7285%" y="549" width="0.0221%" height="15" fill="rgb(238,59,32)" fg:x="1581" fg:w="4"/><text x="8.9785%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.07%)</title><rect x="8.7506%" y="565" width="0.0663%" height="15" fill="rgb(226,82,3)" fg:x="1585" fg:w="12"/><text x="9.0006%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="8.8224%" y="565" width="0.0221%" height="15" fill="rgb(240,164,32)" fg:x="1598" fg:w="4"/><text x="9.0724%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (4 samples, 0.02%)</title><rect x="8.8445%" y="565" width="0.0221%" height="15" fill="rgb(232,46,7)" fg:x="1602" fg:w="4"/><text x="9.0945%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (518 samples, 2.86%)</title><rect x="6.0123%" y="581" width="2.8598%" height="15" fill="rgb(229,129,53)" fg:x="1089" fg:w="518"/><text x="6.2623%" y="591.50">li..</text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$___chkstk_darwin (5 samples, 0.03%)</title><rect x="8.8997%" y="565" width="0.0276%" height="15" fill="rgb(234,188,29)" fg:x="1612" fg:w="5"/><text x="9.1497%" y="575.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.08%)</title><rect x="9.1757%" y="549" width="0.0773%" height="15" fill="rgb(246,141,4)" fg:x="1662" fg:w="14"/><text x="9.4257%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add1sp (2 samples, 0.01%)</title><rect x="9.2530%" y="549" width="0.0110%" height="15" fill="rgb(229,23,39)" fg:x="1676" fg:w="2"/><text x="9.5030%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set_1_2 (32 samples, 0.18%)</title><rect x="9.2641%" y="549" width="0.1767%" height="15" fill="rgb(206,12,3)" fg:x="1678" fg:w="32"/><text x="9.5141%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub (18 samples, 0.10%)</title><rect x="9.4407%" y="549" width="0.0994%" height="15" fill="rgb(252,226,20)" fg:x="1710" fg:w="18"/><text x="9.6907%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub1sp (34 samples, 0.19%)</title><rect x="9.5401%" y="549" width="0.1877%" height="15" fill="rgb(216,123,35)" fg:x="1728" fg:w="34"/><text x="9.7901%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="9.7278%" y="533" width="0.0221%" height="15" fill="rgb(212,68,40)" fg:x="1762" fg:w="4"/><text x="9.9778%" y="543.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub (19 samples, 0.10%)</title><rect x="9.7278%" y="549" width="0.1049%" height="15" fill="rgb(254,125,32)" fg:x="1762" fg:w="19"/><text x="9.9778%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add1sp (15 samples, 0.08%)</title><rect x="9.7499%" y="533" width="0.0828%" height="15" fill="rgb(253,97,22)" fg:x="1766" fg:w="15"/><text x="9.9999%" y="543.50"></text></g><g><title>libmpfr.6.dylib`mpfr_fmma_aux (217 samples, 1.20%)</title><rect x="8.9273%" y="565" width="1.1980%" height="15" fill="rgb(241,101,14)" fg:x="1617" fg:w="217"/><text x="9.1773%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_ubf_mul_exact (53 samples, 0.29%)</title><rect x="9.8327%" y="549" width="0.2926%" height="15" fill="rgb(238,103,29)" fg:x="1781" fg:w="53"/><text x="10.0827%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set_1_2 (5 samples, 0.03%)</title><rect x="10.1253%" y="565" width="0.0276%" height="15" fill="rgb(233,195,47)" fg:x="1834" fg:w="5"/><text x="10.3753%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_fmms (251 samples, 1.39%)</title><rect x="8.8776%" y="581" width="1.3857%" height="15" fill="rgb(246,218,30)" fg:x="1608" fg:w="251"/><text x="9.1276%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (17 samples, 0.09%)</title><rect x="10.1695%" y="565" width="0.0939%" height="15" fill="rgb(219,145,47)" fg:x="1842" fg:w="17"/><text x="10.4195%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (2 samples, 0.01%)</title><rect x="10.2633%" y="581" width="0.0110%" height="15" fill="rgb(243,12,26)" fg:x="1859" fg:w="2"/><text x="10.5133%" y="591.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="10.5173%" y="565" width="0.0166%" height="15" fill="rgb(214,87,16)" fg:x="1905" fg:w="3"/><text x="10.7673%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.03%)</title><rect x="11.0473%" y="501" width="0.0276%" height="15" fill="rgb(208,99,42)" fg:x="2001" fg:w="5"/><text x="11.2973%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.02%)</title><rect x="11.0749%" y="501" width="0.0221%" height="15" fill="rgb(253,99,2)" fg:x="2006" fg:w="4"/><text x="11.3249%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (61 samples, 0.34%)</title><rect x="11.0970%" y="501" width="0.3368%" height="15" fill="rgb(220,168,23)" fg:x="2010" fg:w="61"/><text x="11.3470%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.03%)</title><rect x="11.4007%" y="485" width="0.0331%" height="15" fill="rgb(242,38,24)" fg:x="2065" fg:w="6"/><text x="11.6507%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (163 samples, 0.90%)</title><rect x="10.5394%" y="549" width="0.8999%" height="15" fill="rgb(225,182,9)" fg:x="1909" fg:w="163"/><text x="10.7894%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (156 samples, 0.86%)</title><rect x="10.5780%" y="533" width="0.8613%" height="15" fill="rgb(243,178,37)" fg:x="1916" fg:w="156"/><text x="10.8280%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (141 samples, 0.78%)</title><rect x="10.6609%" y="517" width="0.7784%" height="15" fill="rgb(232,139,19)" fg:x="1931" fg:w="141"/><text x="10.9109%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.04%)</title><rect x="11.4393%" y="549" width="0.0386%" height="15" fill="rgb(225,201,24)" fg:x="2072" fg:w="7"/><text x="11.6893%" y="559.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (173 samples, 0.96%)</title><rect x="10.5339%" y="565" width="0.9551%" height="15" fill="rgb(221,47,46)" fg:x="1908" fg:w="173"/><text x="10.7839%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.01%)</title><rect x="11.4779%" y="549" width="0.0110%" height="15" fill="rgb(249,23,13)" fg:x="2079" fg:w="2"/><text x="11.7279%" y="559.50"></text></g><g><title>libgmp.10.dylib`__gmpn_rshift (14 samples, 0.08%)</title><rect x="11.4890%" y="565" width="0.0773%" height="15" fill="rgb(219,9,5)" fg:x="2081" fg:w="14"/><text x="11.7390%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmpz_realloc2 (19 samples, 0.10%)</title><rect x="11.5663%" y="565" width="0.1049%" height="15" fill="rgb(254,171,16)" fg:x="2095" fg:w="19"/><text x="11.8163%" y="575.50"></text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$__bzero (2 samples, 0.01%)</title><rect x="11.6712%" y="565" width="0.0110%" height="15" fill="rgb(230,171,20)" fg:x="2114" fg:w="2"/><text x="11.9212%" y="575.50"></text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$__gmpz_realloc2 (4 samples, 0.02%)</title><rect x="11.6822%" y="565" width="0.0221%" height="15" fill="rgb(210,71,41)" fg:x="2116" fg:w="4"/><text x="11.9322%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (3 samples, 0.02%)</title><rect x="11.7098%" y="565" width="0.0166%" height="15" fill="rgb(206,173,20)" fg:x="2121" fg:w="3"/><text x="11.9598%" y="575.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (9 samples, 0.05%)</title><rect x="11.7595%" y="549" width="0.0497%" height="15" fill="rgb(233,88,34)" fg:x="2130" fg:w="9"/><text x="12.0095%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (9 samples, 0.05%)</title><rect x="11.8534%" y="533" width="0.0497%" height="15" fill="rgb(223,209,46)" fg:x="2147" fg:w="9"/><text x="12.1034%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (34 samples, 0.19%)</title><rect x="12.0245%" y="517" width="0.1877%" height="15" fill="rgb(250,43,18)" fg:x="2178" fg:w="34"/><text x="12.2745%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (32 samples, 0.18%)</title><rect x="12.0356%" y="501" width="0.1767%" height="15" fill="rgb(208,13,10)" fg:x="2180" fg:w="32"/><text x="12.2856%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (57 samples, 0.31%)</title><rect x="11.9031%" y="533" width="0.3147%" height="15" fill="rgb(212,200,36)" fg:x="2156" fg:w="57"/><text x="12.1531%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (15 samples, 0.08%)</title><rect x="12.4993%" y="517" width="0.0828%" height="15" fill="rgb(225,90,30)" fg:x="2264" fg:w="15"/><text x="12.7493%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.04%)</title><rect x="12.6318%" y="501" width="0.0386%" height="15" fill="rgb(236,182,39)" fg:x="2288" fg:w="7"/><text x="12.8818%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.10%)</title><rect x="12.5821%" y="517" width="0.0994%" height="15" fill="rgb(212,144,35)" fg:x="2279" fg:w="18"/><text x="12.8321%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="12.6705%" y="501" width="0.0110%" height="15" fill="rgb(228,63,44)" fg:x="2295" fg:w="2"/><text x="12.9205%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (85 samples, 0.47%)</title><rect x="12.2177%" y="533" width="0.4693%" height="15" fill="rgb(228,109,6)" fg:x="2213" fg:w="85"/><text x="12.4677%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="12.6870%" y="533" width="0.0166%" height="15" fill="rgb(238,117,24)" fg:x="2298" fg:w="3"/><text x="12.9370%" y="543.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (164 samples, 0.91%)</title><rect x="11.8092%" y="549" width="0.9054%" height="15" fill="rgb(242,26,26)" fg:x="2139" fg:w="164"/><text x="12.0592%" y="559.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.01%)</title><rect x="12.7036%" y="533" width="0.0110%" height="15" fill="rgb(221,92,48)" fg:x="2301" fg:w="2"/><text x="12.9536%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.03%)</title><rect x="12.7146%" y="549" width="0.0331%" height="15" fill="rgb(209,209,32)" fg:x="2303" fg:w="6"/><text x="12.9646%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="12.7478%" y="549" width="0.0221%" height="15" fill="rgb(221,70,22)" fg:x="2309" fg:w="4"/><text x="12.9978%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="12.7698%" y="549" width="0.0110%" height="15" fill="rgb(248,145,5)" fg:x="2313" fg:w="2"/><text x="13.0198%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (193 samples, 1.07%)</title><rect x="11.7264%" y="565" width="1.0655%" height="15" fill="rgb(226,116,26)" fg:x="2124" fg:w="193"/><text x="11.9764%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_z_2exp (9 samples, 0.05%)</title><rect x="12.7919%" y="565" width="0.0497%" height="15" fill="rgb(244,5,17)" fg:x="2317" fg:w="9"/><text x="13.0419%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.06%)</title><rect x="13.3882%" y="485" width="0.0607%" height="15" fill="rgb(252,159,33)" fg:x="2425" fg:w="11"/><text x="13.6382%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.02%)</title><rect x="13.4489%" y="485" width="0.0221%" height="15" fill="rgb(206,71,0)" fg:x="2436" fg:w="4"/><text x="13.6989%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (69 samples, 0.38%)</title><rect x="13.4710%" y="485" width="0.3809%" height="15" fill="rgb(233,118,54)" fg:x="2440" fg:w="69"/><text x="13.7210%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="13.8243%" y="469" width="0.0276%" height="15" fill="rgb(234,83,48)" fg:x="2504" fg:w="5"/><text x="14.0743%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (145 samples, 0.80%)</title><rect x="13.0569%" y="501" width="0.8005%" height="15" fill="rgb(228,3,54)" fg:x="2365" fg:w="145"/><text x="13.3069%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (156 samples, 0.86%)</title><rect x="13.0072%" y="517" width="0.8613%" height="15" fill="rgb(226,155,13)" fg:x="2356" fg:w="156"/><text x="13.2572%" y="527.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.01%)</title><rect x="13.8575%" y="501" width="0.0110%" height="15" fill="rgb(241,28,37)" fg:x="2510" fg:w="2"/><text x="14.1075%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (169 samples, 0.93%)</title><rect x="12.9410%" y="533" width="0.9330%" height="15" fill="rgb(233,93,10)" fg:x="2344" fg:w="169"/><text x="13.1910%" y="543.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (177 samples, 0.98%)</title><rect x="12.9299%" y="549" width="0.9772%" height="15" fill="rgb(225,113,19)" fg:x="2342" fg:w="177"/><text x="13.1799%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.03%)</title><rect x="13.8740%" y="533" width="0.0331%" height="15" fill="rgb(241,2,18)" fg:x="2513" fg:w="6"/><text x="14.1240%" y="543.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (13 samples, 0.07%)</title><rect x="13.9071%" y="549" width="0.0718%" height="15" fill="rgb(228,207,21)" fg:x="2519" fg:w="13"/><text x="14.1571%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="13.9844%" y="549" width="0.0110%" height="15" fill="rgb(213,211,35)" fg:x="2533" fg:w="2"/><text x="14.2344%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (211 samples, 1.16%)</title><rect x="12.8416%" y="565" width="1.1649%" height="15" fill="rgb(209,83,10)" fg:x="2326" fg:w="211"/><text x="13.0916%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="13.9955%" y="549" width="0.0110%" height="15" fill="rgb(209,164,1)" fg:x="2535" fg:w="2"/><text x="14.2455%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (29 samples, 0.16%)</title><rect x="14.4427%" y="549" width="0.1601%" height="15" fill="rgb(213,184,43)" fg:x="2616" fg:w="29"/><text x="14.6927%" y="559.50"></text></g><g><title>libmpfr.6.dylib`mpfr_rint (113 samples, 0.62%)</title><rect x="14.0065%" y="565" width="0.6239%" height="15" fill="rgb(231,61,34)" fg:x="2537" fg:w="113"/><text x="14.2565%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="14.6028%" y="549" width="0.0276%" height="15" fill="rgb(235,75,3)" fg:x="2645" fg:w="5"/><text x="14.8528%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="14.6304%" y="565" width="0.0110%" height="15" fill="rgb(220,106,47)" fg:x="2650" fg:w="2"/><text x="14.8804%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.04%)</title><rect x="14.6469%" y="565" width="0.0386%" height="15" fill="rgb(210,196,33)" fg:x="2653" fg:w="7"/><text x="14.8969%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_z (800 samples, 4.42%)</title><rect x="10.2744%" y="581" width="4.4167%" height="15" fill="rgb(229,154,42)" fg:x="1861" fg:w="800"/><text x="10.5244%" y="591.50">libmp..</text></g><g><title>libmpfr.6.dylib`mpfr_get_z_2exp (2 samples, 0.01%)</title><rect x="14.6911%" y="581" width="0.0110%" height="15" fill="rgb(228,114,26)" fg:x="2661" fg:w="2"/><text x="14.9411%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (20 samples, 0.11%)</title><rect x="15.9223%" y="501" width="0.1104%" height="15" fill="rgb(208,144,1)" fg:x="2884" fg:w="20"/><text x="16.1723%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.04%)</title><rect x="16.0327%" y="501" width="0.0442%" height="15" fill="rgb(239,112,37)" fg:x="2904" fg:w="8"/><text x="16.2827%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (83 samples, 0.46%)</title><rect x="16.0769%" y="501" width="0.4582%" height="15" fill="rgb(210,96,50)" fg:x="2912" fg:w="83"/><text x="16.3269%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="16.5075%" y="485" width="0.0276%" height="15" fill="rgb(222,178,2)" fg:x="2990" fg:w="5"/><text x="16.7575%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (257 samples, 1.42%)</title><rect x="15.1328%" y="517" width="1.4189%" height="15" fill="rgb(226,74,18)" fg:x="2741" fg:w="257"/><text x="15.3828%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (3 samples, 0.02%)</title><rect x="16.5351%" y="501" width="0.0166%" height="15" fill="rgb(225,67,54)" fg:x="2995" fg:w="3"/><text x="16.7851%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (306 samples, 1.69%)</title><rect x="14.8733%" y="549" width="1.6894%" height="15" fill="rgb(251,92,32)" fg:x="2694" fg:w="306"/><text x="15.1233%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (276 samples, 1.52%)</title><rect x="15.0389%" y="533" width="1.5238%" height="15" fill="rgb(228,149,22)" fg:x="2724" fg:w="276"/><text x="15.2889%" y="543.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.01%)</title><rect x="16.5516%" y="517" width="0.0110%" height="15" fill="rgb(243,54,13)" fg:x="2998" fg:w="2"/><text x="16.8016%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.06%)</title><rect x="16.5627%" y="549" width="0.0607%" height="15" fill="rgb(243,180,28)" fg:x="3000" fg:w="11"/><text x="16.8127%" y="559.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (325 samples, 1.79%)</title><rect x="14.8402%" y="565" width="1.7943%" height="15" fill="rgb(208,167,24)" fg:x="2688" fg:w="325"/><text x="15.0902%" y="575.50">l..</text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (17 samples, 0.09%)</title><rect x="16.6345%" y="565" width="0.0939%" height="15" fill="rgb(245,73,45)" fg:x="3013" fg:w="17"/><text x="16.8845%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (18 samples, 0.10%)</title><rect x="16.7338%" y="565" width="0.0994%" height="15" fill="rgb(237,203,48)" fg:x="3031" fg:w="18"/><text x="16.9838%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.02%)</title><rect x="16.8332%" y="565" width="0.0166%" height="15" fill="rgb(211,197,16)" fg:x="3049" fg:w="3"/><text x="17.0832%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (391 samples, 2.16%)</title><rect x="14.7021%" y="581" width="2.1587%" height="15" fill="rgb(243,99,51)" fg:x="2663" fg:w="391"/><text x="14.9521%" y="591.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="16.8498%" y="565" width="0.0110%" height="15" fill="rgb(215,123,29)" fg:x="3052" fg:w="2"/><text x="17.0998%" y="575.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set4 (39 samples, 0.22%)</title><rect x="16.8719%" y="581" width="0.2153%" height="15" fill="rgb(239,186,37)" fg:x="3056" fg:w="39"/><text x="17.1219%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.10%)</title><rect x="16.9878%" y="565" width="0.0994%" height="15" fill="rgb(252,136,39)" fg:x="3077" fg:w="18"/><text x="17.2378%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (15 samples, 0.08%)</title><rect x="17.0927%" y="581" width="0.0828%" height="15" fill="rgb(223,213,32)" fg:x="3096" fg:w="15"/><text x="17.3427%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.04%)</title><rect x="17.4736%" y="533" width="0.0386%" height="15" fill="rgb(233,115,5)" fg:x="3165" fg:w="7"/><text x="17.7236%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (4 samples, 0.02%)</title><rect x="17.5123%" y="533" width="0.0221%" height="15" fill="rgb(207,226,44)" fg:x="3172" fg:w="4"/><text x="17.7623%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.08%)</title><rect x="17.5344%" y="533" width="0.0773%" height="15" fill="rgb(208,126,0)" fg:x="3176" fg:w="14"/><text x="17.7844%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (44 samples, 0.24%)</title><rect x="17.6117%" y="533" width="0.2429%" height="15" fill="rgb(244,66,21)" fg:x="3190" fg:w="44"/><text x="17.8617%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.06%)</title><rect x="17.7938%" y="517" width="0.0607%" height="15" fill="rgb(222,97,12)" fg:x="3223" fg:w="11"/><text x="18.0438%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (124 samples, 0.68%)</title><rect x="17.1755%" y="581" width="0.6846%" height="15" fill="rgb(219,213,19)" fg:x="3111" fg:w="124"/><text x="17.4255%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (115 samples, 0.63%)</title><rect x="17.2252%" y="565" width="0.6349%" height="15" fill="rgb(252,169,30)" fg:x="3120" fg:w="115"/><text x="17.4752%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (108 samples, 0.60%)</title><rect x="17.2638%" y="549" width="0.5963%" height="15" fill="rgb(206,32,51)" fg:x="3127" fg:w="108"/><text x="17.5138%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (44 samples, 0.24%)</title><rect x="17.9650%" y="565" width="0.2429%" height="15" fill="rgb(250,172,42)" fg:x="3254" fg:w="44"/><text x="18.2150%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (39 samples, 0.22%)</title><rect x="17.9926%" y="549" width="0.2153%" height="15" fill="rgb(209,34,43)" fg:x="3259" fg:w="39"/><text x="18.2426%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.36%)</title><rect x="17.8656%" y="581" width="0.3589%" height="15" fill="rgb(223,11,35)" fg:x="3236" fg:w="65"/><text x="18.1156%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="18.2079%" y="565" width="0.0166%" height="15" fill="rgb(251,219,26)" fg:x="3298" fg:w="3"/><text x="18.4579%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (15 samples, 0.08%)</title><rect x="18.5392%" y="565" width="0.0828%" height="15" fill="rgb(231,119,3)" fg:x="3358" fg:w="15"/><text x="18.7892%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="18.6220%" y="565" width="0.0110%" height="15" fill="rgb(216,97,11)" fg:x="3373" fg:w="2"/><text x="18.8720%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (31 samples, 0.17%)</title><rect x="18.9477%" y="549" width="0.1711%" height="15" fill="rgb(223,59,9)" fg:x="3432" fg:w="31"/><text x="19.1977%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (91 samples, 0.50%)</title><rect x="18.6330%" y="565" width="0.5024%" height="15" fill="rgb(233,93,31)" fg:x="3375" fg:w="91"/><text x="18.8830%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="19.1189%" y="549" width="0.0166%" height="15" fill="rgb(239,81,33)" fg:x="3463" fg:w="3"/><text x="19.3689%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (167 samples, 0.92%)</title><rect x="18.2245%" y="581" width="0.9220%" height="15" fill="rgb(213,120,34)" fg:x="3301" fg:w="167"/><text x="18.4745%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (2 samples, 0.01%)</title><rect x="19.1354%" y="565" width="0.0110%" height="15" fill="rgb(243,49,53)" fg:x="3466" fg:w="2"/><text x="19.3854%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.02%)</title><rect x="19.1465%" y="581" width="0.0221%" height="15" fill="rgb(247,216,33)" fg:x="3468" fg:w="4"/><text x="19.3965%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="19.1686%" y="581" width="0.0166%" height="15" fill="rgb(226,26,14)" fg:x="3472" fg:w="3"/><text x="19.4186%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.04%)</title><rect x="19.1906%" y="581" width="0.0386%" height="15" fill="rgb(215,49,53)" fg:x="3476" fg:w="7"/><text x="19.4406%" y="591.50"></text></g><g><title>gui`mandelbrot::cache_calculate (3,138 samples, 17.32%)</title><rect x="1.9102%" y="597" width="17.3246%" height="15" fill="rgb(245,162,40)" fg:x="346" fg:w="3138"/><text x="2.1602%" y="607.50">gui`mandelbrot::cache_calcu..</text></g><g><title>libgmp.10.dylib`__gmpz_clear (18 samples, 0.10%)</title><rect x="19.2458%" y="597" width="0.0994%" height="15" fill="rgb(229,68,17)" fg:x="3486" fg:w="18"/><text x="19.4958%" y="607.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (2 samples, 0.01%)</title><rect x="19.3452%" y="597" width="0.0110%" height="15" fill="rgb(213,182,10)" fg:x="3504" fg:w="2"/><text x="19.5952%" y="607.50"></text></g><g><title>libmpfr.6.dylib`mpfr_fmms (6 samples, 0.03%)</title><rect x="19.3563%" y="597" width="0.0331%" height="15" fill="rgb(245,125,30)" fg:x="3506" fg:w="6"/><text x="19.6063%" y="607.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_z (9 samples, 0.05%)</title><rect x="19.3894%" y="597" width="0.0497%" height="15" fill="rgb(232,202,2)" fg:x="3512" fg:w="9"/><text x="19.6394%" y="607.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (8 samples, 0.04%)</title><rect x="19.4391%" y="597" width="0.0442%" height="15" fill="rgb(237,140,51)" fg:x="3521" fg:w="8"/><text x="19.6891%" y="607.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set4 (10 samples, 0.06%)</title><rect x="19.4832%" y="597" width="0.0552%" height="15" fill="rgb(236,157,25)" fg:x="3529" fg:w="10"/><text x="19.7332%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.07%)</title><rect x="19.5385%" y="597" width="0.0663%" height="15" fill="rgb(219,209,0)" fg:x="3539" fg:w="12"/><text x="19.7885%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="19.6047%" y="597" width="0.0110%" height="15" fill="rgb(240,116,54)" fg:x="3551" fg:w="2"/><text x="19.8547%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="19.6157%" y="597" width="0.0166%" height="15" fill="rgb(216,10,36)" fg:x="3553" fg:w="3"/><text x="19.8657%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="19.6323%" y="597" width="0.0110%" height="15" fill="rgb(222,72,44)" fg:x="3556" fg:w="2"/><text x="19.8823%" y="607.50"></text></g><g><title>gui`&lt;gui::App as eframe::epi::App&gt;::update (3,250 samples, 17.94%)</title><rect x="1.7115%" y="661" width="17.9429%" height="15" fill="rgb(232,159,9)" fg:x="310" fg:w="3250"/><text x="1.9615%" y="671.50">gui`&lt;gui::App as eframe::epi..</text></g><g><title>gui`egui::containers::panel::CentralPanel::show (3,250 samples, 17.94%)</title><rect x="1.7115%" y="645" width="17.9429%" height="15" fill="rgb(210,39,32)" fg:x="310" fg:w="3250"/><text x="1.9615%" y="655.50">gui`egui::containers::panel:..</text></g><g><title>gui`egui::containers::frame::Frame::show (3,250 samples, 17.94%)</title><rect x="1.7115%" y="629" width="17.9429%" height="15" fill="rgb(216,194,45)" fg:x="310" fg:w="3250"/><text x="1.9615%" y="639.50">gui`egui::containers::frame:..</text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (3,250 samples, 17.94%)</title><rect x="1.7115%" y="613" width="17.9429%" height="15" fill="rgb(218,18,35)" fg:x="310" fg:w="3250"/><text x="1.9615%" y="623.50">gui`core::ops::function::FnO..</text></g><g><title>gui`eframe::native::epi_integration::EpiIntegration::update (3,251 samples, 17.95%)</title><rect x="1.7115%" y="677" width="17.9484%" height="15" fill="rgb(207,83,51)" fg:x="310" fg:w="3251"/><text x="1.9615%" y="687.50">gui`eframe::native::epi_inte..</text></g><g><title>gui`egui::context::Context::tessellate (2 samples, 0.01%)</title><rect x="19.6599%" y="677" width="0.0110%" height="15" fill="rgb(225,63,43)" fg:x="3561" fg:w="2"/><text x="19.9099%" y="687.50"></text></g><g><title>gui`epaint::tessellator::tessellate_shapes (2 samples, 0.01%)</title><rect x="19.6599%" y="661" width="0.0110%" height="15" fill="rgb(207,57,36)" fg:x="3561" fg:w="2"/><text x="19.9099%" y="671.50"></text></g><g><title>gui`epaint::tessellator::Tessellator::tessellate_clipped_shape (2 samples, 0.01%)</title><rect x="19.6599%" y="645" width="0.0110%" height="15" fill="rgb(216,99,33)" fg:x="3561" fg:w="2"/><text x="19.9099%" y="655.50"></text></g><g><title>gui`epaint::tessellator::Tessellator::tessellate_shape (2 samples, 0.01%)</title><rect x="19.6599%" y="629" width="0.0110%" height="15" fill="rgb(225,42,16)" fg:x="3561" fg:w="2"/><text x="19.9099%" y="639.50"></text></g><g><title>gui`epaint::tessellator::Tessellator::tessellate_rect (2 samples, 0.01%)</title><rect x="19.6599%" y="613" width="0.0110%" height="15" fill="rgb(220,201,45)" fg:x="3561" fg:w="2"/><text x="19.9099%" y="623.50"></text></g><g><title>gui`&lt;glow::native::Context as glow::HasContext&gt;::delete_texture (9 samples, 0.05%)</title><rect x="19.6710%" y="661" width="0.0497%" height="15" fill="rgb(225,33,4)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="671.50"></text></g><g><title>GLEngine`glDeleteTextures_Exec (9 samples, 0.05%)</title><rect x="19.6710%" y="645" width="0.0497%" height="15" fill="rgb(224,33,50)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="655.50"></text></g><g><title>GLEngine`gleUnbindDeleteHashNamesAndObjects (9 samples, 0.05%)</title><rect x="19.6710%" y="629" width="0.0497%" height="15" fill="rgb(246,198,51)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="639.50"></text></g><g><title>GLEngine`gleUnbindTextureObject (9 samples, 0.05%)</title><rect x="19.6710%" y="613" width="0.0497%" height="15" fill="rgb(205,22,4)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="623.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`intelSubmitCommands (9 samples, 0.05%)</title><rect x="19.6710%" y="597" width="0.0497%" height="15" fill="rgb(206,3,8)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="607.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`IntelCommandBuffer::getNew (9 samples, 0.05%)</title><rect x="19.6710%" y="581" width="0.0497%" height="15" fill="rgb(251,23,15)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="591.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (9 samples, 0.05%)</title><rect x="19.6710%" y="565" width="0.0497%" height="15" fill="rgb(252,88,28)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="575.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (9 samples, 0.05%)</title><rect x="19.6710%" y="549" width="0.0497%" height="15" fill="rgb(212,127,14)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="559.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (9 samples, 0.05%)</title><rect x="19.6710%" y="533" width="0.0497%" height="15" fill="rgb(247,145,37)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="543.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.05%)</title><rect x="19.6710%" y="517" width="0.0497%" height="15" fill="rgb(209,117,53)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="527.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.05%)</title><rect x="19.6710%" y="501" width="0.0497%" height="15" fill="rgb(212,90,42)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.05%)</title><rect x="19.6710%" y="485" width="0.0497%" height="15" fill="rgb(218,164,37)" fg:x="3563" fg:w="9"/><text x="19.9210%" y="495.50"></text></g><g><title>gui`&lt;glow::native::Context as glow::HasContext&gt;::tex_image_2d (2 samples, 0.01%)</title><rect x="19.7317%" y="629" width="0.0110%" height="15" fill="rgb(246,65,34)" fg:x="3574" fg:w="2"/><text x="19.9817%" y="639.50"></text></g><g><title>libGL.dylib`glTexImage2D (2 samples, 0.01%)</title><rect x="19.7317%" y="613" width="0.0110%" height="15" fill="rgb(231,100,33)" fg:x="3574" fg:w="2"/><text x="19.9817%" y="623.50"></text></g><g><title>GLEngine`glTexImage2D_Exec (2 samples, 0.01%)</title><rect x="19.7317%" y="597" width="0.0110%" height="15" fill="rgb(228,126,14)" fg:x="3574" fg:w="2"/><text x="19.9817%" y="607.50"></text></g><g><title>gui`egui_glow::painter::Painter::paint_and_update_textures (14 samples, 0.08%)</title><rect x="19.6710%" y="677" width="0.0773%" height="15" fill="rgb(215,173,21)" fg:x="3563" fg:w="14"/><text x="19.9210%" y="687.50"></text></g><g><title>gui`egui_glow::painter::Painter::set_texture (4 samples, 0.02%)</title><rect x="19.7262%" y="661" width="0.0221%" height="15" fill="rgb(210,6,40)" fg:x="3573" fg:w="4"/><text x="19.9762%" y="671.50"></text></g><g><title>gui`egui_glow::painter::Painter::upload_texture_srgb (3 samples, 0.02%)</title><rect x="19.7317%" y="645" width="0.0166%" height="15" fill="rgb(212,48,18)" fg:x="3574" fg:w="3"/><text x="19.9817%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (3,471 samples, 19.16%)</title><rect x="0.5963%" y="821" width="19.1630%" height="15" fill="rgb(230,214,11)" fg:x="108" fg:w="3471"/><text x="0.8463%" y="831.50">CoreFoundation`__CFRunLoopDoOb..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (3,471 samples, 19.16%)</title><rect x="0.5963%" y="805" width="19.1630%" height="15" fill="rgb(254,105,39)" fg:x="108" fg:w="3471"/><text x="0.8463%" y="815.50">CoreFoundation`__CFRUNLOOP_IS_..</text></g><g><title>gui`winit::platform_impl::platform::observer::control_flow_end_handler (3,286 samples, 18.14%)</title><rect x="1.6176%" y="789" width="18.1417%" height="15" fill="rgb(245,158,5)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="799.50">gui`winit::platform_impl::pl..</text></g><g><title>gui`std::panicking::try (3,286 samples, 18.14%)</title><rect x="1.6176%" y="773" width="18.1417%" height="15" fill="rgb(249,208,11)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="783.50">gui`std::panicking::try</text></g><g><title>gui`winit::platform_impl::platform::app_state::AppState::cleared (3,286 samples, 18.14%)</title><rect x="1.6176%" y="757" width="18.1417%" height="15" fill="rgb(210,39,28)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="767.50">gui`winit::platform_impl::pl..</text></g><g><title>gui`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (3,286 samples, 18.14%)</title><rect x="1.6176%" y="741" width="18.1417%" height="15" fill="rgb(211,56,53)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="751.50">gui`winit::platform_impl::pl..</text></g><g><title>gui`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (3,286 samples, 18.14%)</title><rect x="1.6176%" y="725" width="18.1417%" height="15" fill="rgb(226,201,30)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="735.50">gui`&lt;winit::platform_impl::p..</text></g><g><title>gui`eframe::native::run::run_and_return::_{{closure}} (3,286 samples, 18.14%)</title><rect x="1.6176%" y="709" width="18.1417%" height="15" fill="rgb(239,101,34)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="719.50">gui`eframe::native::run::run..</text></g><g><title>gui`&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::paint (3,286 samples, 18.14%)</title><rect x="1.6176%" y="693" width="18.1417%" height="15" fill="rgb(226,209,5)" fg:x="293" fg:w="3286"/><text x="1.8676%" y="703.50">gui`&lt;eframe::native::run::gl..</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (19 samples, 0.10%)</title><rect x="19.7648%" y="821" width="0.1049%" height="15" fill="rgb(250,105,47)" fg:x="3580" fg:w="19"/><text x="20.0148%" y="831.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (19 samples, 0.10%)</title><rect x="19.7648%" y="805" width="0.1049%" height="15" fill="rgb(230,72,3)" fg:x="3580" fg:w="19"/><text x="20.0148%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (3 samples, 0.02%)</title><rect x="19.8697%" y="821" width="0.0166%" height="15" fill="rgb(232,218,39)" fg:x="3599" fg:w="3"/><text x="20.1197%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (3 samples, 0.02%)</title><rect x="19.8697%" y="805" width="0.0166%" height="15" fill="rgb(248,166,6)" fg:x="3599" fg:w="3"/><text x="20.1197%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (3,500 samples, 19.32%)</title><rect x="0.5687%" y="837" width="19.3231%" height="15" fill="rgb(247,89,20)" fg:x="103" fg:w="3500"/><text x="0.8187%" y="847.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (3,514 samples, 19.40%)</title><rect x="0.4969%" y="853" width="19.4004%" height="15" fill="rgb(248,130,54)" fg:x="90" fg:w="3514"/><text x="0.7469%" y="863.50">CoreFoundation`CFRunLoopRunSpe..</text></g><g><title>HIToolbox`_FirstEventTime (2 samples, 0.01%)</title><rect x="19.8973%" y="853" width="0.0110%" height="15" fill="rgb(234,196,4)" fg:x="3604" fg:w="2"/><text x="20.1473%" y="863.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (2 samples, 0.01%)</title><rect x="19.9084%" y="805" width="0.0110%" height="15" fill="rgb(250,143,31)" fg:x="3606" fg:w="2"/><text x="20.1584%" y="815.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (3,519 samples, 19.43%)</title><rect x="0.4969%" y="869" width="19.4280%" height="15" fill="rgb(211,110,34)" fg:x="90" fg:w="3519"/><text x="0.7469%" y="879.50">HIToolbox`RunCurrentEventLoopI..</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (3 samples, 0.02%)</title><rect x="19.9084%" y="853" width="0.0166%" height="15" fill="rgb(215,124,48)" fg:x="3606" fg:w="3"/><text x="20.1584%" y="863.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (3 samples, 0.02%)</title><rect x="19.9084%" y="837" width="0.0166%" height="15" fill="rgb(216,46,13)" fg:x="3606" fg:w="3"/><text x="20.1584%" y="847.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (3 samples, 0.02%)</title><rect x="19.9084%" y="821" width="0.0166%" height="15" fill="rgb(205,184,25)" fg:x="3606" fg:w="3"/><text x="20.1584%" y="831.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (3,550 samples, 19.60%)</title><rect x="0.3313%" y="933" width="19.5992%" height="15" fill="rgb(228,1,10)" fg:x="60" fg:w="3550"/><text x="0.5813%" y="943.50">AppKit`-[NSApplication(NSEvent)..</text></g><g><title>AppKit`_DPSNextEvent (3,542 samples, 19.56%)</title><rect x="0.3754%" y="917" width="19.5550%" height="15" fill="rgb(213,116,27)" fg:x="68" fg:w="3542"/><text x="0.6254%" y="927.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (3,534 samples, 19.51%)</title><rect x="0.4196%" y="901" width="19.5108%" height="15" fill="rgb(241,95,50)" fg:x="76" fg:w="3534"/><text x="0.6696%" y="911.50">HIToolbox`_BlockUntilNextEventM..</text></g><g><title>HIToolbox`ReceiveNextEventCommon (3,534 samples, 19.51%)</title><rect x="0.4196%" y="885" width="19.5108%" height="15" fill="rgb(238,48,32)" fg:x="76" fg:w="3534"/><text x="0.6696%" y="895.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>gui`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (3,560 samples, 19.65%)</title><rect x="0.2816%" y="965" width="19.6544%" height="15" fill="rgb(235,113,49)" fg:x="51" fg:w="3560"/><text x="0.5316%" y="975.50">gui`winit::platform_impl::platf..</text></g><g><title>AppKit`-[NSApplication run] (3,560 samples, 19.65%)</title><rect x="0.2816%" y="949" width="19.6544%" height="15" fill="rgb(205,127,43)" fg:x="51" fg:w="3560"/><text x="0.5316%" y="959.50">AppKit`-[NSApplication run]</text></g><g><title>gui`eframe::native::run::run_and_return (3,562 samples, 19.67%)</title><rect x="0.2760%" y="981" width="19.6654%" height="15" fill="rgb(250,162,2)" fg:x="50" fg:w="3562"/><text x="0.5260%" y="991.50">gui`eframe::native::run::run_an..</text></g><g><title>dyld`dyld::link (2 samples, 0.01%)</title><rect x="19.9415%" y="805" width="0.0110%" height="15" fill="rgb(220,13,41)" fg:x="3612" fg:w="2"/><text x="20.1915%" y="815.50"></text></g><g><title>dyld`ImageLoader::link (2 samples, 0.01%)</title><rect x="19.9415%" y="789" width="0.0110%" height="15" fill="rgb(249,221,25)" fg:x="3612" fg:w="2"/><text x="20.1915%" y="799.50"></text></g><g><title>AppKit`+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders] (3 samples, 0.02%)</title><rect x="19.9415%" y="917" width="0.0166%" height="15" fill="rgb(215,208,19)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="19.9415%" y="901" width="0.0166%" height="15" fill="rgb(236,175,2)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="19.9415%" y="885" width="0.0166%" height="15" fill="rgb(241,52,2)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="895.50"></text></g><g><title>AppKit`__71+[NSFrontmostDocumentWindowObserver registerForInterestedFileProviders]_block_invoke (3 samples, 0.02%)</title><rect x="19.9415%" y="869" width="0.0166%" height="15" fill="rgb(248,140,14)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="879.50"></text></g><g><title>libdyld.dylib`dlopen (3 samples, 0.02%)</title><rect x="19.9415%" y="853" width="0.0166%" height="15" fill="rgb(253,22,42)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="863.50"></text></g><g><title>libdyld.dylib`dlopen_internal(char const*, int, void*) (3 samples, 0.02%)</title><rect x="19.9415%" y="837" width="0.0166%" height="15" fill="rgb(234,61,47)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="847.50"></text></g><g><title>dyld`dlopen_internal (3 samples, 0.02%)</title><rect x="19.9415%" y="821" width="0.0166%" height="15" fill="rgb(208,226,15)" fg:x="3612" fg:w="3"/><text x="20.1915%" y="831.50"></text></g><g><title>AppKit`+[NSAppearance _initializeCoreUI] (2 samples, 0.01%)</title><rect x="19.9691%" y="773" width="0.0110%" height="15" fill="rgb(217,221,4)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="19.9691%" y="757" width="0.0110%" height="15" fill="rgb(212,174,34)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="19.9691%" y="741" width="0.0110%" height="15" fill="rgb(253,83,4)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="751.50"></text></g><g><title>AppKit`__33+[NSAppearance _initializeCoreUI]_block_invoke (2 samples, 0.01%)</title><rect x="19.9691%" y="725" width="0.0110%" height="15" fill="rgb(250,195,49)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="735.50"></text></g><g><title>Foundation`_NSFaultInObject (2 samples, 0.01%)</title><rect x="19.9691%" y="709" width="0.0110%" height="15" fill="rgb(241,192,25)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="719.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (2 samples, 0.01%)</title><rect x="19.9691%" y="693" width="0.0110%" height="15" fill="rgb(208,124,10)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="703.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (2 samples, 0.01%)</title><rect x="19.9691%" y="677" width="0.0110%" height="15" fill="rgb(222,33,0)" fg:x="3617" fg:w="2"/><text x="20.2191%" y="687.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (4 samples, 0.02%)</title><rect x="19.9636%" y="917" width="0.0221%" height="15" fill="rgb(234,209,28)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="927.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (4 samples, 0.02%)</title><rect x="19.9636%" y="901" width="0.0221%" height="15" fill="rgb(224,11,23)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.02%)</title><rect x="19.9636%" y="885" width="0.0221%" height="15" fill="rgb(232,99,1)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="19.9636%" y="869" width="0.0221%" height="15" fill="rgb(237,95,45)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="879.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (4 samples, 0.02%)</title><rect x="19.9636%" y="853" width="0.0221%" height="15" fill="rgb(208,109,11)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="863.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (4 samples, 0.02%)</title><rect x="19.9636%" y="837" width="0.0221%" height="15" fill="rgb(216,190,48)" fg:x="3616" fg:w="4"/><text x="20.2136%" y="847.50"></text></g><g><title>AppKit`_NSAppearanceCurrentSystemAppearance (3 samples, 0.02%)</title><rect x="19.9691%" y="821" width="0.0166%" height="15" fill="rgb(251,171,36)" fg:x="3617" fg:w="3"/><text x="20.2191%" y="831.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (3 samples, 0.02%)</title><rect x="19.9691%" y="805" width="0.0166%" height="15" fill="rgb(230,62,22)" fg:x="3617" fg:w="3"/><text x="20.2191%" y="815.50"></text></g><g><title>AppKit`+[NSAppearance _aquaAppearance] (3 samples, 0.02%)</title><rect x="19.9691%" y="789" width="0.0166%" height="15" fill="rgb(225,114,35)" fg:x="3617" fg:w="3"/><text x="20.2191%" y="799.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (3 samples, 0.02%)</title><rect x="19.9912%" y="917" width="0.0166%" height="15" fill="rgb(215,118,42)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="927.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration prepare] (3 samples, 0.02%)</title><rect x="19.9912%" y="901" width="0.0166%" height="15" fill="rgb(243,119,21)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="19.9912%" y="885" width="0.0166%" height="15" fill="rgb(252,177,53)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="19.9912%" y="869" width="0.0166%" height="15" fill="rgb(237,209,29)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="879.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (3 samples, 0.02%)</title><rect x="19.9912%" y="853" width="0.0166%" height="15" fill="rgb(212,65,23)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="863.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (3 samples, 0.02%)</title><rect x="19.9912%" y="837" width="0.0166%" height="15" fill="rgb(230,222,46)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="847.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (3 samples, 0.02%)</title><rect x="19.9912%" y="821" width="0.0166%" height="15" fill="rgb(215,135,32)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.02%)</title><rect x="19.9912%" y="805" width="0.0166%" height="15" fill="rgb(246,101,22)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="19.9912%" y="789" width="0.0166%" height="15" fill="rgb(206,107,13)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="799.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (3 samples, 0.02%)</title><rect x="19.9912%" y="773" width="0.0166%" height="15" fill="rgb(250,100,44)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="783.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (3 samples, 0.02%)</title><rect x="19.9912%" y="757" width="0.0166%" height="15" fill="rgb(231,147,38)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="767.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (3 samples, 0.02%)</title><rect x="19.9912%" y="741" width="0.0166%" height="15" fill="rgb(229,8,40)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="751.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (3 samples, 0.02%)</title><rect x="19.9912%" y="725" width="0.0166%" height="15" fill="rgb(221,135,30)" fg:x="3621" fg:w="3"/><text x="20.2412%" y="735.50"></text></g><g><title>SkyLight`SLSCopyDisplayColorSpace (2 samples, 0.01%)</title><rect x="19.9967%" y="709" width="0.0110%" height="15" fill="rgb(249,193,18)" fg:x="3622" fg:w="2"/><text x="20.2467%" y="719.50"></text></g><g><title>SkyLight`CGSColorSpaceRegistryCopyColorSpace (2 samples, 0.01%)</title><rect x="19.9967%" y="693" width="0.0110%" height="15" fill="rgb(209,133,39)" fg:x="3622" fg:w="2"/><text x="20.2467%" y="703.50"></text></g><g><title>CoreGraphics`CGColorSpaceFromICCDataCacheGetRetained (2 samples, 0.01%)</title><rect x="19.9967%" y="677" width="0.0110%" height="15" fill="rgb(232,100,14)" fg:x="3622" fg:w="2"/><text x="20.2467%" y="687.50"></text></g><g><title>CoreGraphics`CGColorSpaceCreateWithICCData (2 samples, 0.01%)</title><rect x="19.9967%" y="661" width="0.0110%" height="15" fill="rgb(224,185,1)" fg:x="3622" fg:w="2"/><text x="20.2467%" y="671.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.01%)</title><rect x="20.0077%" y="917" width="0.0110%" height="15" fill="rgb(223,139,8)" fg:x="3624" fg:w="2"/><text x="20.2577%" y="927.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.01%)</title><rect x="20.0077%" y="901" width="0.0110%" height="15" fill="rgb(232,213,38)" fg:x="3624" fg:w="2"/><text x="20.2577%" y="911.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="20.0077%" y="885" width="0.0110%" height="15" fill="rgb(207,94,22)" fg:x="3624" fg:w="2"/><text x="20.2577%" y="895.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="20.0077%" y="869" width="0.0110%" height="15" fill="rgb(219,183,54)" fg:x="3624" fg:w="2"/><text x="20.2577%" y="879.50"></text></g><g><title>CoreFoundation`__CFRunLoopSetOptionsReason (2 samples, 0.01%)</title><rect x="20.0353%" y="821" width="0.0110%" height="15" fill="rgb(216,185,54)" fg:x="3629" fg:w="2"/><text x="20.2853%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="20.0353%" y="805" width="0.0110%" height="15" fill="rgb(254,217,39)" fg:x="3629" fg:w="2"/><text x="20.2853%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="20.0353%" y="789" width="0.0110%" height="15" fill="rgb(240,178,23)" fg:x="3629" fg:w="2"/><text x="20.2853%" y="799.50"></text></g><g><title>CoreFoundation`____CFRunLoopSetOptionsReason_block_invoke_2 (2 samples, 0.01%)</title><rect x="20.0353%" y="773" width="0.0110%" height="15" fill="rgb(218,11,47)" fg:x="3629" fg:w="2"/><text x="20.2853%" y="783.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (3 samples, 0.02%)</title><rect x="20.0353%" y="837" width="0.0166%" height="15" fill="rgb(218,51,51)" fg:x="3629" fg:w="3"/><text x="20.2853%" y="847.50"></text></g><g><title>HIServices`GetCurrentProcess (8 samples, 0.04%)</title><rect x="20.0188%" y="869" width="0.0442%" height="15" fill="rgb(238,126,27)" fg:x="3626" fg:w="8"/><text x="20.2688%" y="879.50"></text></g><g><title>HIServices`_RegisterApplication (8 samples, 0.04%)</title><rect x="20.0188%" y="853" width="0.0442%" height="15" fill="rgb(249,202,22)" fg:x="3626" fg:w="8"/><text x="20.2688%" y="863.50"></text></g><g><title>AppKit`_NSInitializeAppContext (9 samples, 0.05%)</title><rect x="20.0188%" y="917" width="0.0497%" height="15" fill="rgb(254,195,49)" fg:x="3626" fg:w="9"/><text x="20.2688%" y="927.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (9 samples, 0.05%)</title><rect x="20.0188%" y="901" width="0.0497%" height="15" fill="rgb(208,123,14)" fg:x="3626" fg:w="9"/><text x="20.2688%" y="911.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (9 samples, 0.05%)</title><rect x="20.0188%" y="885" width="0.0497%" height="15" fill="rgb(224,200,8)" fg:x="3626" fg:w="9"/><text x="20.2688%" y="895.50"></text></g><g><title>AppKit`-[NSApplication init] (24 samples, 0.13%)</title><rect x="19.9415%" y="933" width="0.1325%" height="15" fill="rgb(217,61,36)" fg:x="3612" fg:w="24"/><text x="20.1915%" y="943.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (25 samples, 0.14%)</title><rect x="19.9415%" y="949" width="0.1380%" height="15" fill="rgb(206,35,45)" fg:x="3612" fg:w="25"/><text x="20.1915%" y="959.50"></text></g><g><title>gui`main (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1109" width="20.0740%" height="15" fill="rgb(217,65,33)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1119.50">gui`main</text></g><g><title>gui`std::rt::lang_start_internal (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1093" width="20.0740%" height="15" fill="rgb(222,158,48)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1103.50">gui`std::rt::lang_start_internal</text></g><g><title>gui`std::rt::lang_start::_{{closure}} (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1077" width="20.0740%" height="15" fill="rgb(254,2,54)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1087.50">gui`std::rt::lang_start::_{{clos..</text></g><g><title>gui`std::sys_common::backtrace::__rust_begin_short_backtrace (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1061" width="20.0740%" height="15" fill="rgb(250,143,38)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1071.50">gui`std::sys_common::backtrace::..</text></g><g><title>gui`gui::main (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1045" width="20.0740%" height="15" fill="rgb(248,25,0)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1055.50">gui`gui::main</text></g><g><title>gui`eframe::run_native (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1029" width="20.0740%" height="15" fill="rgb(206,152,27)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1039.50">gui`eframe::run_native</text></g><g><title>gui`eframe::native::run::glow_integration::run_glow (3,636 samples, 20.07%)</title><rect x="0.0110%" y="1013" width="20.0740%" height="15" fill="rgb(240,77,30)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1023.50">gui`eframe::native::run::glow_in..</text></g><g><title>gui`std::thread::local::LocalKey&lt;T&gt;::with (3,636 samples, 20.07%)</title><rect x="0.0110%" y="997" width="20.0740%" height="15" fill="rgb(231,5,3)" fg:x="2" fg:w="3636"/><text x="0.2610%" y="1007.50">gui`std::thread::local::LocalKey..</text></g><g><title>gui`std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (26 samples, 0.14%)</title><rect x="19.9415%" y="981" width="0.1435%" height="15" fill="rgb(207,226,32)" fg:x="3612" fg:w="26"/><text x="20.1915%" y="991.50"></text></g><g><title>gui`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (26 samples, 0.14%)</title><rect x="19.9415%" y="965" width="0.1435%" height="15" fill="rgb(222,207,47)" fg:x="3612" fg:w="26"/><text x="20.1915%" y="975.50"></text></g><g><title>0x1 (3,645 samples, 20.12%)</title><rect x="0.0110%" y="1141" width="20.1237%" height="15" fill="rgb(229,115,45)" fg:x="2" fg:w="3645"/><text x="0.2610%" y="1151.50">0x1</text></g><g><title>libdyld.dylib`start (3,645 samples, 20.12%)</title><rect x="0.0110%" y="1125" width="20.1237%" height="15" fill="rgb(224,191,6)" fg:x="2" fg:w="3645"/><text x="0.2610%" y="1135.50">libdyld.dylib`start</text></g><g><title>libsystem_kernel.dylib`__exit (9 samples, 0.05%)</title><rect x="20.0850%" y="1109" width="0.0497%" height="15" fill="rgb(230,227,24)" fg:x="3638" fg:w="9"/><text x="20.3350%" y="1119.50"></text></g><g><title>0x9000000000000000 (3 samples, 0.02%)</title><rect x="20.1844%" y="1141" width="0.0166%" height="15" fill="rgb(228,80,19)" fg:x="3656" fg:w="3"/><text x="20.4344%" y="1151.50"></text></g><g><title>0xd00007fbd5dd7143 (2 samples, 0.01%)</title><rect x="20.2230%" y="1141" width="0.0110%" height="15" fill="rgb(247,229,0)" fg:x="3663" fg:w="2"/><text x="20.4730%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (2 samples, 0.01%)</title><rect x="20.2506%" y="1141" width="0.0110%" height="15" fill="rgb(237,194,15)" fg:x="3668" fg:w="2"/><text x="20.5006%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.01%)</title><rect x="20.2617%" y="1141" width="0.0110%" height="15" fill="rgb(219,203,20)" fg:x="3670" fg:w="2"/><text x="20.5117%" y="1151.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (5 samples, 0.03%)</title><rect x="20.2727%" y="1125" width="0.0276%" height="15" fill="rgb(234,128,8)" fg:x="3672" fg:w="5"/><text x="20.5227%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (3 samples, 0.02%)</title><rect x="20.3003%" y="1109" width="0.0166%" height="15" fill="rgb(248,202,8)" fg:x="3677" fg:w="3"/><text x="20.5503%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (3 samples, 0.02%)</title><rect x="20.3003%" y="1093" width="0.0166%" height="15" fill="rgb(206,104,37)" fg:x="3677" fg:w="3"/><text x="20.5503%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_override_invoke (3 samples, 0.02%)</title><rect x="20.3003%" y="1077" width="0.0166%" height="15" fill="rgb(223,8,27)" fg:x="3677" fg:w="3"/><text x="20.5503%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="20.3003%" y="1061" width="0.0166%" height="15" fill="rgb(216,217,28)" fg:x="3677" fg:w="3"/><text x="20.5503%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.02%)</title><rect x="20.3003%" y="1045" width="0.0166%" height="15" fill="rgb(249,199,1)" fg:x="3677" fg:w="3"/><text x="20.5503%" y="1055.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`invocation function for block in USC::IM_Shader::Compile (2 samples, 0.01%)</title><rect x="20.3059%" y="1029" width="0.0110%" height="15" fill="rgb(240,85,17)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="1039.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CompilePixelShaderOpenGL (2 samples, 0.01%)</title><rect x="20.3059%" y="1013" width="0.0110%" height="15" fill="rgb(206,108,45)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="1023.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CPixelShader::Compile (2 samples, 0.01%)</title><rect x="20.3059%" y="997" width="0.0110%" height="15" fill="rgb(245,210,41)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="1007.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CGen6PixelShaderKernelProgram::Create (2 samples, 0.01%)</title><rect x="20.3059%" y="981" width="0.0110%" height="15" fill="rgb(206,13,37)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="991.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CGen6PixelShaderKernelProgram::Initialize (2 samples, 0.01%)</title><rect x="20.3059%" y="965" width="0.0110%" height="15" fill="rgb(250,61,18)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="975.50"></text></g><g><title>AppleIntelHD5000GraphicsGLDriver`USC::CGen6PixelShaderKernelProgram::Build (2 samples, 0.01%)</title><rect x="20.3059%" y="949" width="0.0110%" height="15" fill="rgb(235,172,48)" fg:x="3678" fg:w="2"/><text x="20.5559%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.02%)</title><rect x="20.3224%" y="1061" width="0.0166%" height="15" fill="rgb(249,201,17)" fg:x="3681" fg:w="3"/><text x="20.5724%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (2 samples, 0.01%)</title><rect x="20.3279%" y="1045" width="0.0110%" height="15" fill="rgb(219,208,6)" fg:x="3682" fg:w="2"/><text x="20.5779%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (13 samples, 0.07%)</title><rect x="20.2727%" y="1141" width="0.0718%" height="15" fill="rgb(248,31,23)" fg:x="3672" fg:w="13"/><text x="20.5227%" y="1151.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (8 samples, 0.04%)</title><rect x="20.3003%" y="1125" width="0.0442%" height="15" fill="rgb(245,15,42)" fg:x="3677" fg:w="8"/><text x="20.5503%" y="1135.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (5 samples, 0.03%)</title><rect x="20.3169%" y="1109" width="0.0276%" height="15" fill="rgb(222,217,39)" fg:x="3680" fg:w="5"/><text x="20.5669%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (4 samples, 0.02%)</title><rect x="20.3224%" y="1093" width="0.0221%" height="15" fill="rgb(210,219,27)" fg:x="3681" fg:w="4"/><text x="20.5724%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (4 samples, 0.02%)</title><rect x="20.3224%" y="1077" width="0.0221%" height="15" fill="rgb(252,166,36)" fg:x="3681" fg:w="4"/><text x="20.5724%" y="1087.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (2 samples, 0.01%)</title><rect x="20.4328%" y="917" width="0.0110%" height="15" fill="rgb(245,132,34)" fg:x="3701" fg:w="2"/><text x="20.6828%" y="927.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (2 samples, 0.01%)</title><rect x="20.4328%" y="901" width="0.0110%" height="15" fill="rgb(236,54,3)" fg:x="3701" fg:w="2"/><text x="20.6828%" y="911.50"></text></g><g><title>IOKit`-[HIDEvent dealloc] (3 samples, 0.02%)</title><rect x="20.4328%" y="933" width="0.0166%" height="15" fill="rgb(241,173,43)" fg:x="3701" fg:w="3"/><text x="20.6828%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.02%)</title><rect x="20.4328%" y="981" width="0.0221%" height="15" fill="rgb(215,190,9)" fg:x="3701" fg:w="4"/><text x="20.6828%" y="991.50"></text></g><g><title>SkyLight`event_finalize(void const*) (4 samples, 0.02%)</title><rect x="20.4328%" y="965" width="0.0221%" height="15" fill="rgb(242,101,16)" fg:x="3701" fg:w="4"/><text x="20.6828%" y="975.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (4 samples, 0.02%)</title><rect x="20.4328%" y="949" width="0.0221%" height="15" fill="rgb(223,190,21)" fg:x="3701" fg:w="4"/><text x="20.6828%" y="959.50"></text></g><g><title>SkyLight`CGSEventLogEvent (2 samples, 0.01%)</title><rect x="20.4549%" y="949" width="0.0110%" height="15" fill="rgb(215,228,25)" fg:x="3705" fg:w="2"/><text x="20.7049%" y="959.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseTrackingEventLog::getLogString (2 samples, 0.01%)</title><rect x="20.4549%" y="933" width="0.0110%" height="15" fill="rgb(225,36,22)" fg:x="3705" fg:w="2"/><text x="20.7049%" y="943.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (2 samples, 0.01%)</title><rect x="20.4660%" y="933" width="0.0110%" height="15" fill="rgb(251,106,46)" fg:x="3707" fg:w="2"/><text x="20.7160%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (2 samples, 0.01%)</title><rect x="20.4660%" y="917" width="0.0110%" height="15" fill="rgb(208,90,1)" fg:x="3707" fg:w="2"/><text x="20.7160%" y="927.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (2 samples, 0.01%)</title><rect x="20.4770%" y="917" width="0.0110%" height="15" fill="rgb(243,10,4)" fg:x="3709" fg:w="2"/><text x="20.7270%" y="927.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (3 samples, 0.02%)</title><rect x="20.4770%" y="933" width="0.0166%" height="15" fill="rgb(212,137,27)" fg:x="3709" fg:w="3"/><text x="20.7270%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (13 samples, 0.07%)</title><rect x="20.4991%" y="933" width="0.0718%" height="15" fill="rgb(231,220,49)" fg:x="3713" fg:w="13"/><text x="20.7491%" y="943.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (20 samples, 0.11%)</title><rect x="20.4660%" y="949" width="0.1104%" height="15" fill="rgb(237,96,20)" fg:x="3707" fg:w="20"/><text x="20.7160%" y="959.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (28 samples, 0.15%)</title><rect x="20.4273%" y="1013" width="0.1546%" height="15" fill="rgb(239,229,30)" fg:x="3700" fg:w="28"/><text x="20.6773%" y="1023.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (28 samples, 0.15%)</title><rect x="20.4273%" y="997" width="0.1546%" height="15" fill="rgb(219,65,33)" fg:x="3700" fg:w="28"/><text x="20.6773%" y="1007.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (23 samples, 0.13%)</title><rect x="20.4549%" y="981" width="0.1270%" height="15" fill="rgb(243,134,7)" fg:x="3705" fg:w="23"/><text x="20.7049%" y="991.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (23 samples, 0.13%)</title><rect x="20.4549%" y="965" width="0.1270%" height="15" fill="rgb(216,177,54)" fg:x="3705" fg:w="23"/><text x="20.7049%" y="975.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (33 samples, 0.18%)</title><rect x="20.4052%" y="1061" width="0.1822%" height="15" fill="rgb(211,160,20)" fg:x="3696" fg:w="33"/><text x="20.6552%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (32 samples, 0.18%)</title><rect x="20.4108%" y="1045" width="0.1767%" height="15" fill="rgb(239,85,39)" fg:x="3697" fg:w="32"/><text x="20.6608%" y="1055.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (32 samples, 0.18%)</title><rect x="20.4108%" y="1029" width="0.1767%" height="15" fill="rgb(232,125,22)" fg:x="3697" fg:w="32"/><text x="20.6608%" y="1039.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (9 samples, 0.05%)</title><rect x="20.5874%" y="1061" width="0.0497%" height="15" fill="rgb(244,57,34)" fg:x="3729" fg:w="9"/><text x="20.8374%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (8 samples, 0.04%)</title><rect x="20.5929%" y="1045" width="0.0442%" height="15" fill="rgb(214,203,32)" fg:x="3730" fg:w="8"/><text x="20.8429%" y="1055.50"></text></g><g><title>AppKit`_NSEventThread (48 samples, 0.27%)</title><rect x="20.3776%" y="1109" width="0.2650%" height="15" fill="rgb(207,58,43)" fg:x="3691" fg:w="48"/><text x="20.6276%" y="1119.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (48 samples, 0.27%)</title><rect x="20.3776%" y="1093" width="0.2650%" height="15" fill="rgb(215,193,15)" fg:x="3691" fg:w="48"/><text x="20.6276%" y="1103.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (47 samples, 0.26%)</title><rect x="20.3832%" y="1077" width="0.2595%" height="15" fill="rgb(232,15,44)" fg:x="3692" fg:w="47"/><text x="20.6332%" y="1087.50"></text></g><g><title>gui`&lt;F as threadpool::FnBox&gt;::call_box (2 samples, 0.01%)</title><rect x="20.6482%" y="1077" width="0.0110%" height="15" fill="rgb(212,3,48)" fg:x="3740" fg:w="2"/><text x="20.8982%" y="1087.50"></text></g><g><title>gui`DYLD-STUB$$pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="20.6592%" y="1077" width="0.0110%" height="15" fill="rgb(218,128,7)" fg:x="3742" fg:w="2"/><text x="20.9092%" y="1087.50"></text></g><g><title>gui`&lt;std::sync::mpmc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.09%)</title><rect x="23.9110%" y="1045" width="0.0939%" height="15" fill="rgb(226,216,39)" fg:x="4331" fg:w="17"/><text x="24.1610%" y="1055.50"></text></g><g><title>gui`&lt;std::sync::mpmc::zero::ZeroToken as core::default::Default&gt;::default (4 samples, 0.02%)</title><rect x="24.0159%" y="1029" width="0.0221%" height="15" fill="rgb(243,47,51)" fg:x="4350" fg:w="4"/><text x="24.2659%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.05%)</title><rect x="24.4410%" y="1013" width="0.0497%" height="15" fill="rgb(241,183,40)" fg:x="4427" fg:w="9"/><text x="24.6910%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.05%)</title><rect x="24.4410%" y="997" width="0.0497%" height="15" fill="rgb(231,217,32)" fg:x="4427" fg:w="9"/><text x="24.6910%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.04%)</title><rect x="24.4465%" y="981" width="0.0442%" height="15" fill="rgb(229,61,38)" fg:x="4428" fg:w="8"/><text x="24.6965%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="24.4576%" y="965" width="0.0331%" height="15" fill="rgb(225,210,5)" fg:x="4430" fg:w="6"/><text x="24.7076%" y="975.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::send (83 samples, 0.46%)</title><rect x="24.0380%" y="1029" width="0.4582%" height="15" fill="rgb(231,79,45)" fg:x="4354" fg:w="83"/><text x="24.2880%" y="1039.50"></text></g><g><title>gui`std::sync::mpmc::utils::Backoff::new (4 samples, 0.02%)</title><rect x="24.4962%" y="1029" width="0.0221%" height="15" fill="rgb(224,100,7)" fg:x="4437" fg:w="4"/><text x="24.7462%" y="1039.50"></text></g><g><title>gui`std::sync::mpmc::Sender&lt;T&gt;::send (94 samples, 0.52%)</title><rect x="24.0049%" y="1045" width="0.5190%" height="15" fill="rgb(241,198,18)" fg:x="4348" fg:w="94"/><text x="24.2549%" y="1055.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::send (5 samples, 0.03%)</title><rect x="24.5238%" y="1045" width="0.0276%" height="15" fill="rgb(252,97,53)" fg:x="4442" fg:w="5"/><text x="24.7738%" y="1055.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (905 samples, 5.00%)</title><rect x="24.5514%" y="1045" width="4.9964%" height="15" fill="rgb(220,88,7)" fg:x="4447" fg:w="905"/><text x="24.8014%" y="1055.50">libdyl..</text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$memcpy (52 samples, 0.29%)</title><rect x="29.5478%" y="1045" width="0.2871%" height="15" fill="rgb(213,176,14)" fg:x="5352" fg:w="52"/><text x="29.7978%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add (280 samples, 1.55%)</title><rect x="29.8349%" y="1045" width="1.5459%" height="15" fill="rgb(246,73,7)" fg:x="5404" fg:w="280"/><text x="30.0849%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add1sp (326 samples, 1.80%)</title><rect x="31.3808%" y="1045" width="1.7998%" height="15" fill="rgb(245,64,36)" fg:x="5684" fg:w="326"/><text x="31.6308%" y="1055.50">l..</text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (2 samples, 0.01%)</title><rect x="33.1806%" y="1045" width="0.0110%" height="15" fill="rgb(245,80,10)" fg:x="6010" fg:w="2"/><text x="33.4306%" y="1055.50"></text></g><g><title>libgmp.10.dylib`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="33.2800%" y="1029" width="0.0110%" height="15" fill="rgb(232,107,50)" fg:x="6028" fg:w="2"/><text x="33.5300%" y="1039.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_free (14 samples, 0.08%)</title><rect x="33.2910%" y="1029" width="0.0773%" height="15" fill="rgb(253,3,0)" fg:x="6030" fg:w="14"/><text x="33.5410%" y="1039.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (25 samples, 0.14%)</title><rect x="33.3683%" y="1029" width="0.1380%" height="15" fill="rgb(212,99,53)" fg:x="6044" fg:w="25"/><text x="33.6183%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (200 samples, 1.10%)</title><rect x="33.6002%" y="1013" width="1.1042%" height="15" fill="rgb(249,111,54)" fg:x="6086" fg:w="200"/><text x="33.8502%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (158 samples, 0.87%)</title><rect x="35.1184%" y="997" width="0.8723%" height="15" fill="rgb(249,55,30)" fg:x="6361" fg:w="158"/><text x="35.3684%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (153 samples, 0.84%)</title><rect x="35.1460%" y="981" width="0.8447%" height="15" fill="rgb(237,47,42)" fg:x="6366" fg:w="153"/><text x="35.3960%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free (237 samples, 1.31%)</title><rect x="34.7099%" y="1013" width="1.3085%" height="15" fill="rgb(211,20,18)" fg:x="6287" fg:w="237"/><text x="34.9599%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="35.9907%" y="997" width="0.0276%" height="15" fill="rgb(231,203,46)" fg:x="6519" fg:w="5"/><text x="36.2407%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (294 samples, 1.62%)</title><rect x="37.2219%" y="997" width="1.6231%" height="15" fill="rgb(237,142,3)" fg:x="6742" fg:w="294"/><text x="37.4719%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.06%)</title><rect x="38.8450%" y="997" width="0.0552%" height="15" fill="rgb(241,107,1)" fg:x="7036" fg:w="10"/><text x="39.0950%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (165 samples, 0.91%)</title><rect x="39.8719%" y="981" width="0.9109%" height="15" fill="rgb(229,83,13)" fg:x="7222" fg:w="165"/><text x="40.1219%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (42 samples, 0.23%)</title><rect x="40.7829%" y="981" width="0.2319%" height="15" fill="rgb(241,91,40)" fg:x="7387" fg:w="42"/><text x="41.0329%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (2 samples, 0.01%)</title><rect x="41.0147%" y="981" width="0.0110%" height="15" fill="rgb(225,3,45)" fg:x="7429" fg:w="2"/><text x="41.2647%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (386 samples, 2.13%)</title><rect x="38.9058%" y="997" width="2.1311%" height="15" fill="rgb(244,223,14)" fg:x="7047" fg:w="386"/><text x="39.1558%" y="1007.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (2 samples, 0.01%)</title><rect x="41.0258%" y="981" width="0.0110%" height="15" fill="rgb(224,124,37)" fg:x="7431" fg:w="2"/><text x="41.2758%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.01%)</title><rect x="41.0258%" y="965" width="0.0110%" height="15" fill="rgb(251,171,30)" fg:x="7431" fg:w="2"/><text x="41.2758%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (934 samples, 5.16%)</title><rect x="36.0183%" y="1013" width="5.1565%" height="15" fill="rgb(236,46,54)" fg:x="6524" fg:w="934"/><text x="36.2683%" y="1023.50">libsys..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (25 samples, 0.14%)</title><rect x="41.0368%" y="997" width="0.1380%" height="15" fill="rgb(245,213,5)" fg:x="7433" fg:w="25"/><text x="41.2868%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.08%)</title><rect x="41.1748%" y="1013" width="0.0773%" height="15" fill="rgb(230,144,27)" fg:x="7458" fg:w="14"/><text x="41.4248%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="41.2521%" y="1013" width="0.0166%" height="15" fill="rgb(220,86,6)" fg:x="7472" fg:w="3"/><text x="41.5021%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (5 samples, 0.03%)</title><rect x="41.2687%" y="1013" width="0.0276%" height="15" fill="rgb(240,20,13)" fg:x="7475" fg:w="5"/><text x="41.5187%" y="1023.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (1,420 samples, 7.84%)</title><rect x="33.5063%" y="1029" width="7.8397%" height="15" fill="rgb(217,89,34)" fg:x="6069" fg:w="1420"/><text x="33.7563%" y="1039.50">libmpfr.6.d..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (9 samples, 0.05%)</title><rect x="41.2963%" y="1013" width="0.0497%" height="15" fill="rgb(229,13,5)" fg:x="7480" fg:w="9"/><text x="41.5463%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.07%)</title><rect x="41.3460%" y="1029" width="0.0718%" height="15" fill="rgb(244,67,35)" fg:x="7489" fg:w="13"/><text x="41.5960%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="41.4178%" y="1029" width="0.0663%" height="15" fill="rgb(221,40,2)" fg:x="7502" fg:w="12"/><text x="41.6678%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.08%)</title><rect x="41.4840%" y="1029" width="0.0828%" height="15" fill="rgb(237,157,21)" fg:x="7514" fg:w="15"/><text x="41.7340%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.04%)</title><rect x="41.5668%" y="1029" width="0.0386%" height="15" fill="rgb(222,94,11)" fg:x="7529" fg:w="7"/><text x="41.8168%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (1,531 samples, 8.45%)</title><rect x="33.1916%" y="1045" width="8.4525%" height="15" fill="rgb(249,113,6)" fg:x="6012" fg:w="1531"/><text x="33.4416%" y="1055.50">libmpfr.6.dy..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (7 samples, 0.04%)</title><rect x="41.6055%" y="1029" width="0.0386%" height="15" fill="rgb(238,137,36)" fg:x="7536" fg:w="7"/><text x="41.8555%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_free_func (4 samples, 0.02%)</title><rect x="41.6441%" y="1045" width="0.0221%" height="15" fill="rgb(210,102,26)" fg:x="7543" fg:w="4"/><text x="41.8941%" y="1055.50"></text></g><g><title>libgmp.10.dylib`__gmpn_copyd (165 samples, 0.91%)</title><rect x="45.7738%" y="1029" width="0.9109%" height="15" fill="rgb(218,30,30)" fg:x="8291" fg:w="165"/><text x="46.0238%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$__bzero (62 samples, 0.34%)</title><rect x="46.6847%" y="1029" width="0.3423%" height="15" fill="rgb(214,67,26)" fg:x="8456" fg:w="62"/><text x="46.9347%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`DYLD-STUB$$__gmpn_copyd (38 samples, 0.21%)</title><rect x="47.0270%" y="1029" width="0.2098%" height="15" fill="rgb(251,9,53)" fg:x="8518" fg:w="38"/><text x="47.2770%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_round_raw_4 (672 samples, 3.71%)</title><rect x="47.2368%" y="1029" width="3.7100%" height="15" fill="rgb(228,204,25)" fg:x="8556" fg:w="672"/><text x="47.4868%" y="1039.50">libm..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (84 samples, 0.46%)</title><rect x="50.4831%" y="1013" width="0.4638%" height="15" fill="rgb(207,153,8)" fg:x="9144" fg:w="84"/><text x="50.7331%" y="1023.50"></text></g><g><title>libmpfr.6.dylib`mpfr_scale2 (164 samples, 0.91%)</title><rect x="50.9468%" y="1029" width="0.9054%" height="15" fill="rgb(242,9,16)" fg:x="9228" fg:w="164"/><text x="51.1968%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_d (1,969 samples, 10.87%)</title><rect x="41.6662%" y="1045" width="10.8706%" height="15" fill="rgb(217,211,10)" fg:x="7547" fg:w="1969"/><text x="41.9162%" y="1055.50">libmpfr.6.dylib`..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (124 samples, 0.68%)</title><rect x="51.8523%" y="1029" width="0.6846%" height="15" fill="rgb(219,228,52)" fg:x="9392" fg:w="124"/><text x="52.1023%" y="1039.50"></text></g><g><title>libgmp.10.dylib`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="52.7411%" y="1029" width="0.0110%" height="15" fill="rgb(231,92,29)" fg:x="9553" fg:w="2"/><text x="52.9911%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (33 samples, 0.18%)</title><rect x="53.9281%" y="965" width="0.1822%" height="15" fill="rgb(232,8,23)" fg:x="9768" fg:w="33"/><text x="54.1781%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (10 samples, 0.06%)</title><rect x="54.1103%" y="965" width="0.0552%" height="15" fill="rgb(216,211,34)" fg:x="9801" fg:w="10"/><text x="54.3603%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (67 samples, 0.37%)</title><rect x="54.1655%" y="965" width="0.3699%" height="15" fill="rgb(236,151,0)" fg:x="9811" fg:w="67"/><text x="54.4155%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="54.5244%" y="949" width="0.0110%" height="15" fill="rgb(209,168,3)" fg:x="9876" fg:w="2"/><text x="54.7744%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (263 samples, 1.45%)</title><rect x="53.1276%" y="981" width="1.4520%" height="15" fill="rgb(208,129,28)" fg:x="9623" fg:w="263"/><text x="53.3776%" y="991.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (8 samples, 0.04%)</title><rect x="54.5354%" y="965" width="0.0442%" height="15" fill="rgb(229,78,22)" fg:x="9878" fg:w="8"/><text x="54.7854%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (278 samples, 1.53%)</title><rect x="53.0558%" y="997" width="1.5348%" height="15" fill="rgb(228,187,13)" fg:x="9610" fg:w="278"/><text x="53.3058%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.01%)</title><rect x="54.5796%" y="981" width="0.0110%" height="15" fill="rgb(240,119,24)" fg:x="9886" fg:w="2"/><text x="54.8296%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (324 samples, 1.79%)</title><rect x="52.8239%" y="1013" width="1.7888%" height="15" fill="rgb(209,194,42)" fg:x="9568" fg:w="324"/><text x="53.0739%" y="1023.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="54.5906%" y="997" width="0.0221%" height="15" fill="rgb(247,200,46)" fg:x="9888" fg:w="4"/><text x="54.8406%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.08%)</title><rect x="54.6127%" y="1013" width="0.0828%" height="15" fill="rgb(218,76,16)" fg:x="9892" fg:w="15"/><text x="54.8627%" y="1023.50"></text></g><g><title>libgmp.10.dylib`__gmp_default_allocate (354 samples, 1.95%)</title><rect x="52.7522%" y="1029" width="1.9544%" height="15" fill="rgb(225,21,48)" fg:x="9555" fg:w="354"/><text x="53.0022%" y="1039.50">l..</text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.01%)</title><rect x="54.6955%" y="1013" width="0.0110%" height="15" fill="rgb(239,223,50)" fg:x="9907" fg:w="2"/><text x="54.9455%" y="1023.50"></text></g><g><title>libgmp.10.dylib`__gmp_get_memory_functions (22 samples, 0.12%)</title><rect x="54.7066%" y="1029" width="0.1215%" height="15" fill="rgb(244,45,21)" fg:x="9909" fg:w="22"/><text x="54.9566%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_allocate_func (14 samples, 0.08%)</title><rect x="54.8335%" y="1029" width="0.0773%" height="15" fill="rgb(232,33,43)" fg:x="9932" fg:w="14"/><text x="55.0835%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="54.9108%" y="1029" width="0.0276%" height="15" fill="rgb(209,8,3)" fg:x="9946" fg:w="5"/><text x="55.1608%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (442 samples, 2.44%)</title><rect x="52.5369%" y="1045" width="2.4402%" height="15" fill="rgb(214,25,53)" fg:x="9516" fg:w="442"/><text x="52.7869%" y="1055.50">li..</text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.04%)</title><rect x="54.9384%" y="1029" width="0.0386%" height="15" fill="rgb(254,186,54)" fg:x="9951" fg:w="7"/><text x="55.1884%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul (789 samples, 4.36%)</title><rect x="54.9771%" y="1045" width="4.3560%" height="15" fill="rgb(208,174,49)" fg:x="9958" fg:w="789"/><text x="55.2271%" y="1055.50">libmp..</text></g><g><title>libmpfr.6.dylib`mpfr_mul_2si (171 samples, 0.94%)</title><rect x="59.3331%" y="1045" width="0.9441%" height="15" fill="rgb(233,191,51)" fg:x="10747" fg:w="171"/><text x="59.5831%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_si (45 samples, 0.25%)</title><rect x="60.2771%" y="1045" width="0.2484%" height="15" fill="rgb(222,134,10)" fg:x="10918" fg:w="45"/><text x="60.5271%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_ui (254 samples, 1.40%)</title><rect x="60.5256%" y="1045" width="1.4023%" height="15" fill="rgb(230,226,20)" fg:x="10963" fg:w="254"/><text x="60.7756%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_round_raw_4 (106 samples, 0.59%)</title><rect x="61.9279%" y="1045" width="0.5852%" height="15" fill="rgb(251,111,25)" fg:x="11217" fg:w="106"/><text x="62.1779%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_scale2 (20 samples, 0.11%)</title><rect x="62.5131%" y="1045" width="0.1104%" height="15" fill="rgb(224,40,46)" fg:x="11323" fg:w="20"/><text x="62.7631%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set4 (952 samples, 5.26%)</title><rect x="62.6235%" y="1045" width="5.2559%" height="15" fill="rgb(236,108,47)" fg:x="11343" fg:w="952"/><text x="62.8735%" y="1055.50">libmpf..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (308 samples, 1.70%)</title><rect x="66.1790%" y="1029" width="1.7004%" height="15" fill="rgb(234,93,0)" fg:x="11987" fg:w="308"/><text x="66.4290%" y="1039.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set_d (32 samples, 0.18%)</title><rect x="67.8794%" y="1045" width="0.1767%" height="15" fill="rgb(224,213,32)" fg:x="12295" fg:w="32"/><text x="68.1294%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sqr (1,320 samples, 7.29%)</title><rect x="68.0561%" y="1045" width="7.2876%" height="15" fill="rgb(251,11,48)" fg:x="12327" fg:w="1320"/><text x="68.3061%" y="1055.50">libmpfr.6...</text></g><g><title>libmpfr.6.dylib`mpfr_sub (158 samples, 0.87%)</title><rect x="75.3437%" y="1045" width="0.8723%" height="15" fill="rgb(236,173,5)" fg:x="13647" fg:w="158"/><text x="75.5937%" y="1055.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub1sp (1,723 samples, 9.51%)</title><rect x="76.2160%" y="1045" width="9.5125%" height="15" fill="rgb(230,95,12)" fg:x="13805" fg:w="1723"/><text x="76.4660%" y="1055.50">libmpfr.6.dyli..</text></g><g><title>libsystem_kernel.dylib`__ulock_wake (73 samples, 0.40%)</title><rect x="85.7285%" y="1045" width="0.4030%" height="15" fill="rgb(232,209,1)" fg:x="15528" fg:w="73"/><text x="85.9785%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$os_unfair_lock_lock_with_options (4 samples, 0.02%)</title><rect x="86.1315%" y="1045" width="0.0221%" height="15" fill="rgb(232,6,1)" fg:x="15601" fg:w="4"/><text x="86.3815%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.14%)</title><rect x="86.1812%" y="1029" width="0.1435%" height="15" fill="rgb(210,224,50)" fg:x="15610" fg:w="26"/><text x="86.4312%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.13%)</title><rect x="86.1922%" y="1013" width="0.1325%" height="15" fill="rgb(228,127,35)" fg:x="15612" fg:w="24"/><text x="86.4422%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.18%)</title><rect x="86.1536%" y="1045" width="0.1822%" height="15" fill="rgb(245,102,45)" fg:x="15605" fg:w="33"/><text x="86.4036%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="86.3247%" y="1029" width="0.0110%" height="15" fill="rgb(214,1,49)" fg:x="15636" fg:w="2"/><text x="86.5747%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (104 samples, 0.57%)</title><rect x="86.6946%" y="1029" width="0.5742%" height="15" fill="rgb(226,163,40)" fg:x="15703" fg:w="104"/><text x="86.9446%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="87.2688%" y="1029" width="0.0110%" height="15" fill="rgb(239,212,28)" fg:x="15807" fg:w="2"/><text x="87.5188%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="87.2799%" y="1029" width="0.0110%" height="15" fill="rgb(220,20,13)" fg:x="15809" fg:w="2"/><text x="87.5299%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.14%)</title><rect x="87.5725%" y="1013" width="0.1435%" height="15" fill="rgb(210,164,35)" fg:x="15862" fg:w="26"/><text x="87.8225%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.12%)</title><rect x="87.7160%" y="1013" width="0.1159%" height="15" fill="rgb(248,109,41)" fg:x="15888" fg:w="21"/><text x="87.9660%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.55%)</title><rect x="87.2909%" y="1029" width="0.5466%" height="15" fill="rgb(238,23,50)" fg:x="15811" fg:w="99"/><text x="87.5409%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (290 samples, 1.60%)</title><rect x="86.3358%" y="1045" width="1.6011%" height="15" fill="rgb(211,48,49)" fg:x="15638" fg:w="290"/><text x="86.5858%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (18 samples, 0.10%)</title><rect x="87.8375%" y="1029" width="0.0994%" height="15" fill="rgb(223,36,21)" fg:x="15910" fg:w="18"/><text x="88.0875%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (2 samples, 0.01%)</title><rect x="87.9479%" y="1045" width="0.0110%" height="15" fill="rgb(207,123,46)" fg:x="15930" fg:w="2"/><text x="88.1979%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (83 samples, 0.46%)</title><rect x="87.9589%" y="1045" width="0.4582%" height="15" fill="rgb(240,218,32)" fg:x="15932" fg:w="83"/><text x="88.2089%" y="1055.50"></text></g><g><title>gui`&lt;F as threadpool::FnBox&gt;::call_box (12,225 samples, 67.49%)</title><rect x="20.9684%" y="1061" width="67.4930%" height="15" fill="rgb(252,5,43)" fg:x="3798" fg:w="12225"/><text x="21.2184%" y="1071.50">gui`&lt;F as threadpool::FnBox&gt;::call_box</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (8 samples, 0.04%)</title><rect x="88.4172%" y="1045" width="0.0442%" height="15" fill="rgb(252,84,19)" fg:x="16015" fg:w="8"/><text x="88.6672%" y="1055.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_add (15 samples, 0.08%)</title><rect x="88.4724%" y="1061" width="0.0828%" height="15" fill="rgb(243,152,39)" fg:x="16025" fg:w="15"/><text x="88.7224%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_clear (7 samples, 0.04%)</title><rect x="88.5552%" y="1061" width="0.0386%" height="15" fill="rgb(234,160,15)" fg:x="16040" fg:w="7"/><text x="88.8052%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_get_d (18 samples, 0.10%)</title><rect x="88.5938%" y="1061" width="0.0994%" height="15" fill="rgb(237,34,20)" fg:x="16047" fg:w="18"/><text x="88.8438%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_mul (11 samples, 0.06%)</title><rect x="88.6987%" y="1061" width="0.0607%" height="15" fill="rgb(229,97,13)" fg:x="16066" fg:w="11"/><text x="88.9487%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_mul_si (14 samples, 0.08%)</title><rect x="88.7595%" y="1061" width="0.0773%" height="15" fill="rgb(234,71,50)" fg:x="16077" fg:w="14"/><text x="89.0095%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_set4 (43 samples, 0.24%)</title><rect x="88.8367%" y="1061" width="0.2374%" height="15" fill="rgb(253,155,4)" fg:x="16091" fg:w="43"/><text x="89.0867%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_sqr (19 samples, 0.10%)</title><rect x="89.0741%" y="1061" width="0.1049%" height="15" fill="rgb(222,185,37)" fg:x="16134" fg:w="19"/><text x="89.3241%" y="1071.50"></text></g><g><title>gui`DYLD-STUB$$mpfr_sub (11 samples, 0.06%)</title><rect x="89.1790%" y="1061" width="0.0607%" height="15" fill="rgb(251,177,13)" fg:x="16153" fg:w="11"/><text x="89.4290%" y="1071.50"></text></g><g><title>gui`__rdl_dealloc (2 samples, 0.01%)</title><rect x="89.2398%" y="1061" width="0.0110%" height="15" fill="rgb(250,179,40)" fg:x="16164" fg:w="2"/><text x="89.4898%" y="1071.50"></text></g><g><title>gui`std::sys_common::thread_info::current_thread (3 samples, 0.02%)</title><rect x="90.3219%" y="1013" width="0.0166%" height="15" fill="rgb(242,44,2)" fg:x="16360" fg:w="3"/><text x="90.5719%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (2 samples, 0.01%)</title><rect x="90.3384%" y="949" width="0.0110%" height="15" fill="rgb(216,177,13)" fg:x="16363" fg:w="2"/><text x="90.5884%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_sema4_create_slow (3 samples, 0.02%)</title><rect x="90.3384%" y="997" width="0.0166%" height="15" fill="rgb(216,106,43)" fg:x="16363" fg:w="3"/><text x="90.5884%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_os_semaphore_create (3 samples, 0.02%)</title><rect x="90.3384%" y="981" width="0.0166%" height="15" fill="rgb(216,183,2)" fg:x="16363" fg:w="3"/><text x="90.5884%" y="991.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_create (3 samples, 0.02%)</title><rect x="90.3384%" y="965" width="0.0166%" height="15" fill="rgb(249,75,3)" fg:x="16363" fg:w="3"/><text x="90.5884%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (157 samples, 0.87%)</title><rect x="90.3384%" y="1013" width="0.8668%" height="15" fill="rgb(219,67,39)" fg:x="16363" fg:w="157"/><text x="90.5884%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_wait_trap (154 samples, 0.85%)</title><rect x="90.3550%" y="997" width="0.8502%" height="15" fill="rgb(253,228,2)" fg:x="16366" fg:w="154"/><text x="90.6050%" y="1007.50"></text></g><g><title>gui`std::thread::park (162 samples, 0.89%)</title><rect x="90.3163%" y="1029" width="0.8944%" height="15" fill="rgb(235,138,27)" fg:x="16359" fg:w="162"/><text x="90.5663%" y="1039.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (5 samples, 0.03%)</title><rect x="91.2107%" y="1029" width="0.0276%" height="15" fill="rgb(236,97,51)" fg:x="16521" fg:w="5"/><text x="91.4607%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (21 samples, 0.12%)</title><rect x="91.2383%" y="1013" width="0.1159%" height="15" fill="rgb(240,80,30)" fg:x="16526" fg:w="21"/><text x="91.4883%" y="1023.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (25 samples, 0.14%)</title><rect x="91.2383%" y="1029" width="0.1380%" height="15" fill="rgb(230,178,19)" fg:x="16526" fg:w="25"/><text x="91.4883%" y="1039.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (4 samples, 0.02%)</title><rect x="91.3543%" y="1013" width="0.0221%" height="15" fill="rgb(210,190,27)" fg:x="16547" fg:w="4"/><text x="91.6043%" y="1023.50"></text></g><g><title>gui`std::sync::mpmc::context::Context::with::_{{closure}} (200 samples, 1.10%)</title><rect x="90.2943%" y="1045" width="1.1042%" height="15" fill="rgb(222,107,31)" fg:x="16355" fg:w="200"/><text x="90.5443%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.02%)</title><rect x="91.3819%" y="1029" width="0.0166%" height="15" fill="rgb(216,127,34)" fg:x="16552" fg:w="3"/><text x="91.6319%" y="1039.50"></text></g><g><title>gui`std::thread::park (2 samples, 0.01%)</title><rect x="91.3984%" y="1045" width="0.0110%" height="15" fill="rgb(234,116,52)" fg:x="16555" fg:w="2"/><text x="91.6484%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.01%)</title><rect x="91.4095%" y="1045" width="0.0110%" height="15" fill="rgb(222,124,15)" fg:x="16557" fg:w="2"/><text x="91.6595%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (4 samples, 0.02%)</title><rect x="91.4481%" y="1029" width="0.0221%" height="15" fill="rgb(231,179,28)" fg:x="16564" fg:w="4"/><text x="91.6981%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="91.4868%" y="1013" width="0.0110%" height="15" fill="rgb(226,93,45)" fg:x="16571" fg:w="2"/><text x="91.7368%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.04%)</title><rect x="91.4702%" y="1029" width="0.0442%" height="15" fill="rgb(215,8,51)" fg:x="16568" fg:w="8"/><text x="91.7202%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (3 samples, 0.02%)</title><rect x="91.4978%" y="1013" width="0.0166%" height="15" fill="rgb(223,106,5)" fg:x="16573" fg:w="3"/><text x="91.7478%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.01%)</title><rect x="91.5033%" y="997" width="0.0110%" height="15" fill="rgb(250,191,5)" fg:x="16574" fg:w="2"/><text x="91.7533%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.09%)</title><rect x="91.4316%" y="1045" width="0.0883%" height="15" fill="rgb(242,132,44)" fg:x="16561" fg:w="16"/><text x="91.6816%" y="1055.50"></text></g><g><title>gui`std::sync::mpmc::list::Channel&lt;T&gt;::recv (413 samples, 2.28%)</title><rect x="89.2563%" y="1061" width="2.2801%" height="15" fill="rgb(251,152,29)" fg:x="16167" fg:w="413"/><text x="89.5063%" y="1071.50">g..</text></g><g><title>gui`std::sync::mpmc::utils::Backoff::new (2 samples, 0.01%)</title><rect x="91.5365%" y="1061" width="0.0110%" height="15" fill="rgb(218,179,5)" fg:x="16580" fg:w="2"/><text x="91.7865%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add (60 samples, 0.33%)</title><rect x="91.5585%" y="1061" width="0.3313%" height="15" fill="rgb(227,67,19)" fg:x="16584" fg:w="60"/><text x="91.8085%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_add1sp (10 samples, 0.06%)</title><rect x="91.8898%" y="1061" width="0.0552%" height="15" fill="rgb(233,119,31)" fg:x="16644" fg:w="10"/><text x="92.1398%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_clear (18 samples, 0.10%)</title><rect x="91.9450%" y="1061" width="0.0994%" height="15" fill="rgb(241,120,22)" fg:x="16654" fg:w="18"/><text x="92.1950%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_get_d (63 samples, 0.35%)</title><rect x="92.0444%" y="1061" width="0.3478%" height="15" fill="rgb(224,102,30)" fg:x="16672" fg:w="63"/><text x="92.2944%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_init2 (5 samples, 0.03%)</title><rect x="92.3922%" y="1061" width="0.0276%" height="15" fill="rgb(210,164,37)" fg:x="16735" fg:w="5"/><text x="92.6422%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul (39 samples, 0.22%)</title><rect x="92.4198%" y="1061" width="0.2153%" height="15" fill="rgb(226,191,16)" fg:x="16740" fg:w="39"/><text x="92.6698%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_2si (4 samples, 0.02%)</title><rect x="92.6351%" y="1061" width="0.0221%" height="15" fill="rgb(214,40,45)" fg:x="16779" fg:w="4"/><text x="92.8851%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_si (48 samples, 0.27%)</title><rect x="92.6572%" y="1061" width="0.2650%" height="15" fill="rgb(244,29,26)" fg:x="16783" fg:w="48"/><text x="92.9072%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_mul_ui (15 samples, 0.08%)</title><rect x="92.9222%" y="1061" width="0.0828%" height="15" fill="rgb(216,16,5)" fg:x="16831" fg:w="15"/><text x="93.1722%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set4 (104 samples, 0.57%)</title><rect x="93.0050%" y="1061" width="0.5742%" height="15" fill="rgb(249,76,35)" fg:x="16846" fg:w="104"/><text x="93.2550%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_set_d (6 samples, 0.03%)</title><rect x="93.5792%" y="1061" width="0.0331%" height="15" fill="rgb(207,11,44)" fg:x="16950" fg:w="6"/><text x="93.8292%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sqr (78 samples, 0.43%)</title><rect x="93.6123%" y="1061" width="0.4306%" height="15" fill="rgb(228,190,49)" fg:x="16956" fg:w="78"/><text x="93.8623%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub (40 samples, 0.22%)</title><rect x="94.0430%" y="1061" width="0.2208%" height="15" fill="rgb(214,173,12)" fg:x="17034" fg:w="40"/><text x="94.2930%" y="1071.50"></text></g><g><title>libmpfr.6.dylib`mpfr_sub1sp (68 samples, 0.38%)</title><rect x="94.2638%" y="1061" width="0.3754%" height="15" fill="rgb(218,26,35)" fg:x="17074" fg:w="68"/><text x="94.5138%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="94.6392%" y="1061" width="0.0110%" height="15" fill="rgb(220,200,19)" fg:x="17142" fg:w="2"/><text x="94.8892%" y="1071.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (522 samples, 2.88%)</title><rect x="94.6834%" y="1045" width="2.8819%" height="15" fill="rgb(239,95,49)" fg:x="17150" fg:w="522"/><text x="94.9334%" y="1055.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (542 samples, 2.99%)</title><rect x="94.6668%" y="1061" width="2.9923%" height="15" fill="rgb(235,85,53)" fg:x="17147" fg:w="542"/><text x="94.9168%" y="1071.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (17 samples, 0.09%)</title><rect x="97.5653%" y="1045" width="0.0939%" height="15" fill="rgb(233,133,31)" fg:x="17672" fg:w="17"/><text x="97.8153%" y="1055.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (371 samples, 2.05%)</title><rect x="97.6812%" y="1045" width="2.0483%" height="15" fill="rgb(218,25,20)" fg:x="17693" fg:w="371"/><text x="97.9312%" y="1055.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (377 samples, 2.08%)</title><rect x="97.6591%" y="1061" width="2.0814%" height="15" fill="rgb(252,210,38)" fg:x="17689" fg:w="377"/><text x="97.9091%" y="1071.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_wake (2 samples, 0.01%)</title><rect x="99.7295%" y="1045" width="0.0110%" height="15" fill="rgb(242,134,21)" fg:x="18064" fg:w="2"/><text x="99.9795%" y="1055.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (4 samples, 0.02%)</title><rect x="99.7460%" y="1061" width="0.0221%" height="15" fill="rgb(213,28,48)" fg:x="18067" fg:w="4"/><text x="99.9960%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (16 samples, 0.09%)</title><rect x="99.7681%" y="1061" width="0.0883%" height="15" fill="rgb(250,196,2)" fg:x="18071" fg:w="16"/><text x="100.0181%" y="1071.50"></text></g><g><title>gui`std::sys_common::backtrace::__rust_begin_short_backtrace (14,347 samples, 79.21%)</title><rect x="20.6758%" y="1077" width="79.2083%" height="15" fill="rgb(227,5,17)" fg:x="3745" fg:w="14347"/><text x="20.9258%" y="1087.50">gui`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="99.8565%" y="1061" width="0.0276%" height="15" fill="rgb(221,226,24)" fg:x="18087" fg:w="5"/><text x="100.1065%" y="1071.50"></text></g><g><title>gui`threadpool::ThreadPoolSharedData::no_work_notify_all (2 samples, 0.01%)</title><rect x="99.8841%" y="1077" width="0.0110%" height="15" fill="rgb(211,5,48)" fg:x="18092" fg:w="2"/><text x="100.1341%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (3 samples, 0.02%)</title><rect x="99.8951%" y="1077" width="0.0166%" height="15" fill="rgb(219,150,6)" fg:x="18094" fg:w="3"/><text x="100.1451%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (3 samples, 0.02%)</title><rect x="99.9117%" y="1077" width="0.0166%" height="15" fill="rgb(251,46,16)" fg:x="18097" fg:w="3"/><text x="100.1617%" y="1087.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.02%)</title><rect x="99.9282%" y="1077" width="0.0166%" height="15" fill="rgb(220,204,40)" fg:x="18100" fg:w="3"/><text x="100.1782%" y="1087.50"></text></g><g><title>gui`core::ops::function::FnOnce::call_once{{vtable.shim}} (14,366 samples, 79.31%)</title><rect x="20.6482%" y="1093" width="79.3132%" height="15" fill="rgb(211,85,2)" fg:x="3740" fg:w="14366"/><text x="20.8982%" y="1103.50">gui`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="99.9448%" y="1077" width="0.0166%" height="15" fill="rgb(229,17,7)" fg:x="18103" fg:w="3"/><text x="100.1948%" y="1087.50"></text></g><g><title>gui`std::sys::unix::thread::Thread::new::thread_start (14,371 samples, 79.34%)</title><rect x="20.6426%" y="1109" width="79.3408%" height="15" fill="rgb(239,72,28)" fg:x="3739" fg:w="14371"/><text x="20.8926%" y="1119.50">gui`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>libsystem_kernel.dylib`__mprotect (2 samples, 0.01%)</title><rect x="99.9724%" y="1093" width="0.0110%" height="15" fill="rgb(230,47,54)" fg:x="18108" fg:w="2"/><text x="100.2224%" y="1103.50"></text></g><g><title>all (18,113 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(214,50,8)" fg:x="0" fg:w="18113"/><text x="0.2500%" y="1167.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (14,428 samples, 79.66%)</title><rect x="20.3445%" y="1141" width="79.6555%" height="15" fill="rgb(216,198,43)" fg:x="3685" fg:w="14428"/><text x="20.5945%" y="1151.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (14,422 samples, 79.62%)</title><rect x="20.3776%" y="1125" width="79.6224%" height="15" fill="rgb(234,20,35)" fg:x="3691" fg:w="14422"/><text x="20.6276%" y="1135.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (2 samples, 0.01%)</title><rect x="99.9890%" y="1109" width="0.0110%" height="15" fill="rgb(254,45,19)" fg:x="18111" fg:w="2"/><text x="100.2390%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (2 samples, 0.01%)</title><rect x="99.9890%" y="1093" width="0.0110%" height="15" fill="rgb(219,14,44)" fg:x="18111" fg:w="2"/><text x="100.2390%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (2 samples, 0.01%)</title><rect x="99.9890%" y="1077" width="0.0110%" height="15" fill="rgb(217,220,26)" fg:x="18111" fg:w="2"/><text x="100.2390%" y="1087.50"></text></g></svg></svg>